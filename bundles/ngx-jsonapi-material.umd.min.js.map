{"version":3,"sources":["ng://ngx-jsonapi-material/lib/custom-validators.ts","ng://ngx-jsonapi-material/lib/track-by-id.ts","ng://ngx-jsonapi-material/lib/batch.ts","ng://ngx-jsonapi-material/lib/destroyer.ts","ng://ngx-jsonapi-material/lib/select/select.component.ts","ng://ngx-jsonapi-material/lib/select/option-footer.component.ts","ng://ngx-jsonapi-material/lib/search-input/search-text.pipe.ts","ng://ngx-jsonapi-material/lib/search-input/search-input.component.ts","ng://ngx-jsonapi-material/lib/search-input/search-input.module.ts","ng://ngx-jsonapi-material/lib/select/select.module.ts","ng://ngx-jsonapi-material/lib/submit/submit.component.ts","ng://ngx-jsonapi-material/lib/submit/submit.module.ts","ng://ngx-jsonapi-material/lib/floating-filters/floating-filters.component.ts","null","ng://ngx-jsonapi-material/lib/floating-filters/avoid-disabled-style.directive.ts","ng://ngx-jsonapi-material/lib/floating-filters/floating-filters.module.ts","ng://ngx-jsonapi-material/lib/picture-manager/picture/picture-manager.component.ts","ng://ngx-jsonapi-material/lib/picture-manager/gallery/gallery-manager.component.ts","ng://ngx-jsonapi-material/lib/picture-manager/upload/upload.component.ts","ng://ngx-jsonapi-material/lib/delete-confirmation/confirmation-dialog/confirmation-dialog.component.ts","ng://ngx-jsonapi-material/lib/delete-confirmation/delete-confirmation.component.ts","ng://ngx-jsonapi-material/lib/delete-confirmation/delete-confirmation.module.ts","ng://ngx-jsonapi-material/lib/picture-manager/picture-manager.module.ts","ng://ngx-jsonapi-material/lib/chips-autocomplete/chips-autocomplete.component.ts","ng://ngx-jsonapi-material/lib/chips-autocomplete/chips-autocomplete.module.ts","ng://ngx-jsonapi-material/lib/edit-text-attribute-dialog/edit-text-attribute-dialog.component.ts","ng://ngx-jsonapi-material/lib/edit-text-attribute-dialog/edit-text-attribute-dialog.module.ts","ng://ngx-jsonapi-material/lib/top-warning/top-warning.service.ts","ng://ngx-jsonapi-material/lib/top-warning/top-warning.component.ts","ng://ngx-jsonapi-material/lib/top-warning/single-warning/single-warning.component.ts","ng://ngx-jsonapi-material/lib/top-warning/top-warning.module.ts","ng://ngx-jsonapi-material/lib/logged-state/dialog-logged-state.component.ts","ng://ngx-jsonapi-material/lib/error-handler/error-handler.service.ts","ng://ngx-jsonapi-material/lib/error-handler/error-handler.module.ts","ng://ngx-jsonapi-material/lib/range-datepicker/range-datepicker.component.ts","ng://ngx-jsonapi-material/lib/range-datepicker/range-datepicker.module.ts","ng://ngx-jsonapi-material/lib/fab-speed-dial/fab-speed-dial.component.ts","ng://ngx-jsonapi-material/lib/fab-speed-dial/fab-speed-dial-mini-button.ts","ng://ngx-jsonapi-material/lib/fab-speed-dial/fab-speed-dial.module.ts","ng://ngx-jsonapi-material/lib/refresh/refresh.component.ts","ng://ngx-jsonapi-material/lib/refresh/refresh.module.ts","ng://ngx-jsonapi-material/lib/menu/menu-elements/menu-elements.ts","ng://ngx-jsonapi-material/lib/menu/menu-elements/menu.ts","ng://ngx-jsonapi-material/lib/menu/menu-elements/section.ts","ng://ngx-jsonapi-material/lib/menu/menu-elements/button.ts","ng://ngx-jsonapi-material/lib/menu/dropdown-menu/dropdown-menu.component.ts","ng://ngx-jsonapi-material/lib/menu/bottom-sheet/bottom-sheet.component.ts","ng://ngx-jsonapi-material/lib/menu/menu.component.ts","ng://ngx-jsonapi-material/lib/menu/menu.module.ts","ng://ngx-jsonapi-material/lib/floating-button/floating-button.component.ts","ng://ngx-jsonapi-material/lib/floating-button/floating-button.module.ts","ng://ngx-jsonapi-material/lib/dynamic-forms/dynamic-inputs.ts","ng://ngx-jsonapi-material/lib/dynamic-forms/formly-form-flex.component.ts","ng://ngx-jsonapi-material/lib/dynamic-forms/dynamic-forms.module.ts","ng://ngx-jsonapi-material/lib/tabs/tabs.directive.ts","ng://ngx-jsonapi-material/lib/tabs/tabs.module.ts","ng://ngx-jsonapi-material/lib/expansion-panel/remember-state.directive.ts","ng://ngx-jsonapi-material/lib/expansion-panel/remember-state.module.ts","ng://ngx-jsonapi-material/lib/floating-input/floating-input.component.ts","ng://ngx-jsonapi-material/lib/floating-input/floating-input.module.ts","ng://ngx-jsonapi-material/lib/filters/interfaces/filter.interface.ts","ng://ngx-jsonapi-material/lib/filters/interfaces/filter-date-range.interface.ts","ng://ngx-jsonapi-material/lib/filters/basics/filter-options.component.ts","ng://ngx-jsonapi-material/lib/filters/basics/filter-checks.component.ts","ng://ngx-jsonapi-material/lib/filters/filters.module.ts","ng://ngx-jsonapi-material/lib/slide/slide-element.ts","ng://ngx-jsonapi-material/lib/slide/slide.ts","ng://ngx-jsonapi-material/lib/slide/slide-group.ts","ng://ngx-jsonapi-material/lib/slide/slide-element-wrapper.ts","ng://ngx-jsonapi-material/lib/slide/slide-header.ts","ng://ngx-jsonapi-material/lib/slide/slide-module.ts","ng://ngx-jsonapi-material/lib/slide/slide-animations.ts","ng://ngx-jsonapi-material/lib/pin-option-button/pin-option-button.component.ts","ng://ngx-jsonapi-material/lib/ngx-jsonapi-material.component.ts","ng://ngx-jsonapi-material/lib/material.module.ts","ng://ngx-jsonapi-material/lib/ngx-jsonapi-material.module.ts","ng://ngx-jsonapi-material/lib/pin-option-button/pin-option-button.module.ts","ng://ngx-jsonapi-material/lib/autocomplete/autocomplete.component.ts","ng://ngx-jsonapi-material/lib/autocomplete/autocomplete.module.ts","ng://ngx-jsonapi-material/lib/info-button/info-button.component.ts","ng://ngx-jsonapi-material/lib/info-button/info-button.module.ts","ng://ngx-jsonapi-material/lib/selection-bar/dom.service.ts","ng://ngx-jsonapi-material/lib/selection-bar/selection-bar.service.ts","ng://ngx-jsonapi-material/lib/selection-bar/selection-bar-container/selection-bar-container.component.ts","ng://ngx-jsonapi-material/lib/selection-bar/selection-bar-info/selection-bar-info.component.ts","ng://ngx-jsonapi-material/lib/selection-bar/selection-bar.module.ts"],"names":["CustomValidators","prototype","patternValidator","regex","error","control","value","test","passwordMatchValidator","get","setErrors","NoPassswordMatch","trackById","index","resource","id","filterOrRequest","params","pipe","startWith","debounceTime","filter","filterValue","switchMap","includes","last_filter_value","collection","data","length","page_size","of","resourcesArray","attributes","attribute_to_search","toLowerCase","indexOf","getAllFc","catchError","map","Destroyer","takeUntil","this","takeuntil","destroy","next","complete","Subject","SelectComponent","ngOnInit","limit","adaptiveArray","slice","Number","toRelate","find","updateFilter","search_text","searchText","updateRelationships","toRelateChange","emit","Component","args","selector","styles","template","Input","Output","appareance","floatLabel","hasRefresh","EventEmitter","refresh","clear_relationships","JamOptionFooterComponent","goTo","target","routerLink","router","navigate","relativeTo","activatedRoute","queryParams","url","window","open","ActivatedRoute","Router","openNewTab","FilterPipe","items","term","toCompare","item","property","sub_property","toString","transform","Pipe","name","SearchInputComponent","_this","showSearch","opened","searchCtrl","valueChanges","destroyer","x","subscribe","newValue","textChange","ngOnDestroy","showInput","setTimeout","document","getElementById","focus","switch","setValue","FormControl","JamSearchInputModule","NgModule","imports","FormsModule","FlexLayoutModule","ReactiveFormsModule","MatButtonModule","MatIconModule","CommonModule","declarations","exports","JamSelectModule","RouterModule","MatDividerModule","MatFormFieldModule","MatSelectModule","providers","SubmitComponent","changeState","event","noCancel","goBack","location","back","cancel","cancelState","cancelParamsState","submit","accept","Location","submitAppearance","submitColor","loading","JamSubmitModule","MatTooltipModule","MatProgressSpinnerModule","FloatingFiltersComponent","show_reset_button","resetFilters","observers","toggleStateExpansionPanel","state","open_expansion_panel","clearFilters","panel_state","hasAdvancedFilters","appearance","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__extends","__","constructor","create","__assign","assign","t","s","i","n","arguments","call","apply","__awaiter","thisArg","_arguments","P","generator","Promise","resolve","reject","fulfilled","step","e","rejected","result","done","then","__generator","body","f","y","g","_","label","sent","trys","ops","verb","throw","return","Symbol","iterator","v","op","TypeError","pop","push","__values","o","m","__read","r","ar","AvoidDisabledStyleDirective","changes","disconnect","preservingOriginalStyles","mutation","attributeName","elements","getElementsByTagName","nodeName","elements_1","tslib_1.__values","elements_1_1","style","color","Directive","ElementRef","elementRef","NATIVE_ELEMENT","nativeElement","MutationObserver","mutations","mutations_1","mutations_1_1","observe","childList","characterData","JamFloatingFiltersModule","MatExpansionModule","PictureManagerComponent","settingDefaultValues","dragAndDropStyles","drag_and_drop","showPreview","image","source","deleteUrl","uploadChange","status_change","delete","delete_url","creatDeleteUrl","httpClient","headers","jamHeaders","response","type","uploadUrl","img_name","split","HttpClient","showDeleteOption","GalleryManagerComponent","highlightedImage","img","addPicture","image_loading","responsePicture","file","updatePicture","UploadComponent","onUploadOutput","output","startUpload","previewImage","files","findIndex","JSON","stringify","dragOver","dragAndDropChange","redirect","fileReader","FileReader","readAsDataURL","nativeFile","onload","method","uploadInput","cancelUpload","removeFile","removeAllFiles","disabled","humanizeBytesFunction","humanizeBytes","ConfirmationDialogComponent","MatDialogRef","Inject","MAT_DIALOG_DATA","dialogRef","msg","DeleteConfirmationComponent","showConfirm","dialog","width","title","afterClosed","MatDialog","smartColor","mat-button","mat-raised-button","mat-flat-button","mat-stroked-button","mat-icon-button","JamDeleteConfirmationModule","MatDialogModule","entryComponents","JamPictureManagerModule","MatCardModule","NgxUploaderModule","ChipsAutocompleteComponent","service","newCollection","collection_relationships","relationships","relationAlias","filteredCollection","formControl","attributesDisplay","collectionArray","getAll","bind","collectionArrayLastFilterValue","page","size","remoteFilter","_a","all","remotefilter","number","filterCollection","addResource","addRelationship","resourceInput","displayName","removeResource","removeRelationship","ViewChild","addOnBlur","selectable","removable","JamChipsAutocompleteModule","MatAutocompleteModule","MatOptionModule","MatChipsModule","EditTextAttributeDialogComponent","onKeyUp","key","shiftKey","updateAttributeAndClose","attribute","text_value","close","HostListener","JamEditTextAttributeModule","MatInputModule","TopWarningService","setWarningMessage","warning","warnings","search_warning","msj_warning","getWarningMessage","clearMessage","warning_keys","_b","_c","splice","Injectable","TopWarningComponent","onMouseEnter","button_state","onMouseLeave","toggleOpenAccordion","localStorage","setItem","defaultAccordionState","getItem","topWarningService","button_icons","expanded","contracted","standby","SingleWarningComponent","backgroundColor","custom_styles","textColor","actionButtonClick","actionIconButtonClick","JamTopWarningModule","DialogLoggedStateComponent","onCloseConfirm","thisDialogRef","onCloseCancel","tslib_1.__extends","ErrorHandler","JamErrorHandler","handleError","status","message","unhandledError","errors","handleJsonapiErrors","rejection","console","show_angular_errors","_super","Notification","use_error_cache","actual_error","lastErrorCached","time","Date","now","detail","ngZone","run","logOut","singleError","token_dialog_is_open","matDialog","disableClose","success","globalStateService","logout","setForm","form","messages","messages_1","messages_1_1","each","toasterService","server-error","warn","NgZone","ToasterService","JamErrorHandlerModule","start_time","end_time","RangeDatepickerComponent","onDateInput","lastDateInput","updateDateChange","begin","end","onDateChange","lastDateChange","applyCustomRange","picker","stopPropagation","applyLastWeek","endDate","startDate","setDate","getDate","date","applyToday","applyCurrentMonth","today","getFullYear","getMonth","clearRange","applylastMonth","start_date","end_date","togglePreviewText","startDateChange","formatDateAndAddTime","endDateChange","updateDate","createPreviewText","toUpperCase","getDays","datePipe","compareDaysOfTheSameMonth","setHours","DatePipe","JamRangeDatepickerModule","SatNativeDateModule","SatDatepickerModule","FabSpeedDialComponent","snapshot","toggleFabStatus","fab_status","animationMode","tooltip","spin","icon","fabSpeedDialMiniButtons","fabSpeedDialClick","actionsClick","FabSpeedDialMiniButton","setRouterLink","router_link","getRouterLink","setQueryParams","query_params","getQueryParams","shouldNavigate","EcoFabSpeedDialModule","FabSpeedDialModule","JamRefreshService","refreshSubject","collection_to_refresh","RefreshComponent","collectionToRefresh","jamRefreshService","changeDetectorRef","detectChanges","refreshCollection","serviceToRefresh","clearCacheMemory","ChangeDetectorRef","colorProgressCircular","reload","JamRefreshModule","defineProperty","MenuElement","_id","setAttributes","addAttributes","hide","hidden","show","isShown","disable","enable","MenuElementsCollection","element","log","add","concat","Menu","removeEmptySections","hasShownElements","setMainImage","image_data","main_image","findSection","addSections","Section","findButton","addButtons","Button","class","DropdownMenuComponent","selected","BottomSheetComponent","matBottomSheetRef","dismiss","option","MAT_BOTTOM_SHEET_DATA","MatBottomSheetRef","MenuComponent","menu","border-radius","height","matBottomSheet","sections","afterDismissed","undefined","formatEmission","selectedOption","source_data","MatBottomSheet","JamMenuModule","MatMenuModule","MatListModule","MatBottomSheetModule","FloatingButtonComponent","JamFloatingButtonModule","DynamicInput","setFocus","required","templateOptions","fxFlex","set","setTemplateOption","addTemplateOptions","template_options","setTranslatedTemplateOptions","translateService","load","fieldConfig","TextDynamicInput","placeholder","instant","NumberDynamicInput","min","CheckboxDynamicInput","indeterminate","TextareaDynamicInput","matAutosizeMinRows","matAutosizeMaxRows","SelectDynamicInput","setOptions","options","FormlyForm","FormlyFormFlexComponent","JamDynamicFormsModule","FormlyModule","forRoot","FormlyMaterialModule","JamTabsDirective","ngAfterViewInit","selected_tab","tabNames","tab_selected","keys","defaultTabIndex","tabGroup","selectedIndex","selectedIndexChange","onTabChange","new_index","JamTabsModule","MatTabsModule","RemembermeStateDirective","mat_expansion_pane_id","mat_expansion_panel","changeExpandedExpansionPanel","onClick","updateLocalStoreage","ContentChild","MatExpansionPanel","JamRememberStateModule","FloatingInputComponent","statusToggle","lock","focusInput","bindingEntryValue","entryValueChange","keyPress","keyCode","resourceChange","searchParams","parseUrl","JamFloatingInputModule","FilterConfig","JsonapiFilterRangedateConfig","setProperty","property_name","property_value","since","until","JamFilterOptionsComponent","filterConfigArray","filterConfig","text","optionSelected","jsonvalue","filter_list","remoteFilterChange","JamFilterChecksComponent","filterConfigOptionsUpdate","filter_config_options","sort","a","localeCompare","showInputSearch","show_input_search","clearSelected","filterConfigChange","JamFilterModule","JamSlideElement","CdkPortal","JamSlideBase","_JamSlideMixinBase","mixinDisabled","JamSlide","_contentPortal","ngOnChanges","_stateChanges","TemplatePortal","_explicitContent","_implicitContent","_viewContainerRef","inputs","changeDetection","ChangeDetectionStrategy","OnPush","encapsulation","ViewEncapsulation","None","exportAs","ViewContainerRef","TemplateRef","textLabel","position","origin","isActive","nextId","JamSlideChangeEvent","MAT_TABS_CONFIG","InjectionToken","JamSlideGroupBase","_elementRef","_JamSlideGroupMixinBase","mixinColor","mixinDisableRipple","JamSlideGroup","_dynamicHeight","coerceBooleanProperty","_selectedIndex","_indexToSelect","coerceNumberProperty","_animationDuration","_backgroundColor","classList","remove","ngAfterContentChecked","indexToSelect","_clampTabIndex","isFirstRun_1","selectedTabChange","_createChangeEvent","_slides","forEach","slide","_changeDetectorRef","markForCheck","ngAfterContentInit","_subscribeToTabLabels","_slidesSubscription","slides","toArray","unsubscribe","_slideElementSubscription","_focusChanged","focusChange","_getTabLabelId","_groupId","_getTabContentId","_setTabBodyWrapperHeight","slideHeight","_slideBodyWrapperHeight","wrapper","_slideBodyWrapper","offsetHeight","_removeTabBodyWrapperHeight","clientHeight","animationDone","_handleClick","slideHeader","focusIndex","_getTabIndex","idx","merge","__spread","Math","max","host","[class.jam-slide-group-dynamic-height]","[class.jam-slide-group-inverted-header]","Optional","ContentChildren","defaultConfig","headerPosition","Subscription","EMPTY","animationDuration","JamSlideElementWrapperBase","_JamSlideElementWrapperMixinBase","JamSlideElementWrapper","getOffsetLeft","offsetLeft","getOffsetWidth","offsetWidth","[class.jam-slide-disabled]","[attr.aria-disabled]","hasModifierKey","modifiers","_i","some","modifier","altKey","ctrlKey","metaKey","passiveEventListenerOptions","normalizePassiveListenerOptions","passive","JamSlideHeaderBase","_JamSlideHeaderMixinBase","JamSlideHeader","_selectedIndexChanged","_keyManager","updateActiveItem","_slideElementCount","_elementWrappers","updatePagination","_scrollToLabel","_checkScrollingControls","_scrollDistanceChanged","_updateTabScrollPosition","_handleKeydown","setFirstItemActive","preventDefault","setLastItemActive","selectFocusedIndex","onKeydown","dirChange","_dir","change","observableOf","resize","_viewportRuler","realign","FocusKeyManager","withHorizontalOrientation","_getLayoutDirection","withWrap","requestAnimationFrame","_destroyed","newFocusIndex","indexFocused","_setTabFocus","fromEvent","_previousPaginator","_handlePaginatorPress","_nextPaginator","_stopScrolling","_onContentChanges","textContent","_currentTextContent","zoneCallback","_ngZone","_checkPaginationEnabled","activeItemIndex","_isValidIndex","setActiveItem","slideIndex","_showPaginationControls","containerEl","_slideListContainer","dir","scrollLeft","scrollWidth","scrollDistance","platform","_platform","translateX","_slideList","round","TRIDENT","EDGE","_scrollDistance","_scrollTo","_scrollHeader","direction","scrollAmount","_handlePaginatorClick","_stopInterval","labelIndex","selectedLabel","labelBeforePos","labelAfterPos","viewLength","beforeVisiblePos","afterVisiblePos","isEnabled","_disableScrollBefore","_disableScrollAfter","_getMaxScrollDistance","timer","maxScrollDistance","distance","[class.jam-slide-header-pagination-controls-enabled]","[class.jam-slide-header-rtl]","ViewportRuler","Directionality","decorators","Platform","bindEvent","runOutsideAngular","JamSlideModule","MatCommonModule","PortalModule","MatRippleModule","ObserversModule","A11yModule","jamSlidesAnimations","translateTab","trigger","minHeight","transition","animate","PinOptionButtonComponent","populateMenu","selected_option","defaultSelectedOption","matIconRegistry","addSvgIconSet","domSanitizer","bypassSecurityTrustResourceUrl","pinnedOption","button","specialKey","pinButton","count","buttons","local_storage_item","parse","MatIconRegistry","DomSanitizer","jamColor","NgxJsonapiMaterialComponent","MatNativeDateModule","MatDatepickerModule","MatToolbarModule","MatPaginatorModule","MatTableModule","MaterialModule","NgxJsonapiMaterialModule","JamPinOptionButtonModule","JamAutocompleteComponent","services","filtered_resource","autocompleteCtrl","displayAttributes","resourceArray","resourceArrayLastFilterValue","collectionPerPage","closeAutocomplete","autocompleteResource","optionSelections","timeout","selection","closePanel","err","selectedResource","previewSelected","toggleResource","toggleResourceChange","displayFn","use_is_loading","include","builded","tap","clearDisplay","filterResourceByName","showList","resource_max_on_list","MatAutocompleteTrigger","dataArrived","JamAutocompleteModule","MatProgressBarModule","InfoButtonComponent","checkIcon","jamTooltip","JamInfoButtonModule","DomService","appendComponentTo","parentId","child","childConfig","child_node","child_dom_element_id","parentNode","removeChild","childComponentRef","componentFactoryResolver","resolveComponentFactory","injector","attachConfig","appRef","attachView","hostView","childDomElem","rootNodes","setAttribute","appendChild","className","removeComponent","detachView","config","componentRef","outputs","instance","ComponentFactoryResolver","ApplicationRef","Injector","SelectionBarService","selected$","callMethod","methodRef","callMethod$","clearMethod","init","component","componentConfig","selectionBarElementId","created_component_instance","domService","BehaviorSubject","SelectionModel","SelectionBarContainerComponent","selectionBarService","events","NavigationStart","SelectionBarInfoComponent","clear","JamSelectionBarModule","batchAll","concatMap"],"mappings":"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","sourcesContent":["import { ValidationErrors, ValidatorFn, AbstractControl } from '@angular/forms';\n\nexport class CustomValidators {\n    public patternValidator(regex: RegExp, error: ValidationErrors): ValidatorFn {\n        return (control: AbstractControl): { [key: string]: any } => {\n            if (!control.value) return null; // if control is empty return no error\n\n            const VALID = regex.test(control.value); // test the value of the control against the regexp supplied\n\n            return VALID ? null : error; // if true, return no error (no error), else return error passed in the second parameter\n        };\n    }\n\n    /**\n     * @description NoPassswordMatch allows you to display an error if the password does not match.\n     * @usageNotes\n     * ### Ejemplo\n     * ```typescript\n     * validation: {\n     *     message: {\n     *         NoPassswordMatch: 'Mi mensaje'\n     *     }\n     * }\n     * ```\n     */\n    public passwordMatchValidator(control: AbstractControl) {\n        const PASSWORD: string = control.get('password').value; // get password from our password form control\n        const CONFIRM_PASSWORD: string = control.get('confirm_password').value; // get password from our confirmPassword form control\n\n        // compare is the password math\n        if (PASSWORD !== CONFIRM_PASSWORD) {\n            // if they don't match, set an error in our confirmPassword form control\n            control.get('confirm_password').setErrors({ NoPassswordMatch: true });\n        }\n    }\n}\n","import { Resource } from 'ngx-jsonapi';\n\nexport function trackById(index, resource: Resource) {\n    return resource.id;\n}\n","// tslint:disable: rxjs-no-wholesale rxjs-deep-operators\n\nimport { map, concatMap, startWith , filter , switchMap , skip , debounceTime , catchError } from 'rxjs/operators';\nimport { Observable , pipe , of , UnaryFunction } from 'rxjs';\n\nimport { Service } from 'ngx-jsonapi/service';\nimport { Resource } from 'ngx-jsonapi/resource';\nimport { DocumentCollection, IParamsCollection } from 'ngx-jsonapi';\n\nexport function batchAll<T extends Service<R>, R extends Resource>(service: T, params: IParamsCollection): Observable<DocumentCollection<R>> {\n    return <Observable<DocumentCollection<R>>>service.all(params).pipe(concatMap(collection => {\n        if (collection.data.length < params.page.size) {\n            return of(collection);\n        }\n\n        params.page.number += 1;\n\n        return batchAll(service, params).pipe(startWith(collection));\n    }));\n}\n\nexport const filterOrRequest = <T extends Resource>(params: {\n    attribute_to_search?: string;\n    resourcesArray: Array<T>;\n    getAllFc: ((filter: string) => Observable<DocumentCollection<T>>);\n    last_filter_value: string;\n    collection: DocumentCollection<T>;\n    page_size: number;\n}): UnaryFunction<Observable<string>, Observable<Array<T>>> =>\n    pipe(\n        startWith(''),\n        debounceTime(400),\n        filter(filterValue => typeof filterValue === 'string'),\n        switchMap((filterValue: string) => {\n            if (filterValue.includes(params.last_filter_value) && params.collection.data.length < params.page_size) {\n                return of(params.resourcesArray.filter((resource: T) =>\n                    resource.attributes[params.attribute_to_search].toLowerCase().indexOf(filterValue) >= 0));\n            }\n\n            return params\n                .getAllFc(filterValue)\n                .pipe(\n                    catchError(() => [])\n                ).pipe(\n                map((collection: DocumentCollection<T>) => {\n                    params.collection = collection;\n                    params.resourcesArray = collection.data;\n                    params.last_filter_value = filterValue;\n\n                    return params.resourcesArray;\n                }));\n        })\n    );\n","import { Subject , UnaryFunction , Observable , pipe } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\n\nexport class Destroyer {\n    private takeuntil: Subject<void> = new Subject();\n\n    public pipe(): UnaryFunction<Observable<any>, Observable<any>> {\n        return pipe(takeUntil(this.takeuntil));\n    }\n\n    public destroy(): void {\n        this.takeuntil.next();\n        this.takeuntil.complete();\n    }\n}\n","import { Component, Input, Output, EventEmitter, OnInit, ViewChild } from '@angular/core';\nimport { Resource, DocumentCollection } from 'ngx-jsonapi';\n\n@Component({\n    selector: 'jam-select',\n    styles: [`.mat-option-footer,.mat-option-header{position:-webkit-sticky;position:sticky;background:inherit;z-index:999!important;width:100%}.mat-option-header{padding-left:0;padding-right:0;top:0}.mat-option-footer{bottom:0}.mat-icon{margin:0!important}mat-form-field{width:100%}`],\n    template: `<mat-form-field\n    [floatLabel]=\"floatLabel\"\n    [appearance]=\"appareance\"\n>\n    <mat-label>\n        {{ label || 'Seleccione una opciÃ³n' }}\n        <i *ngIf=\"!toRelate\">(Ninguna)</i>\n    </mat-label>\n    <mat-select\n        [ngModel]=\"toRelate\"\n        (ngModelChange)=\"updateRelationships($event)\"\n        [disabled]=\"disabled || false\"\n        [placeholder]=\"placeholder || 'Seleccione una opciÃ³n'\"\n        [multiple]=\"multiple || false\"\n        >\n\n        <div class=\"mat-option-header\" *ngIf=\"adaptiveArray.length >= 10\">\n            <jam-search-input\n                [text]=\"searchText\"\n                [opened]=\"true\"\n                (textChange)=\"updateFilter($event)\"\n            ></jam-search-input>\n        </div>\n\n        <mat-divider></mat-divider>\n\n        <mat-option *ngIf=\"removeRelationships\" [value]=\"clear_relationships\">-- Ninguna --</mat-option>\n\n        <ng-container *ngFor=\"let resource of adaptiveArray | filter: searchText\">\n            <mat-option [value]=\"resource\" *ngIf=\"parentId && resource.id !== parentId\">\n                {{ resource.attributes[displayAttribute] }}\n            </mat-option>\n            <mat-option [value]=\"resource\" *ngIf=\"!parentId\">\n                {{ resource.attributes[displayAttribute] }}\n            </mat-option>\n        </ng-container>\n\n        <div class=\"mat-option-footer\">\n            <ng-content></ng-content>\n        </div>\n    </mat-select>\n\n    <button matSuffix mat-icon-button class=\"mat-button\" *ngIf=\"hasRefresh\"\n        (click)=\"refresh.emit()\">\n        <div fxLayout=\"row\" fxLayoutAlign=\"center center\">\n            <mat-icon class=\"mat-hint\">refresh</mat-icon>\n        </div>\n    </button>\n</mat-form-field>\n`\n})\nexport class SelectComponent implements OnInit {\n    @Input() public appareance: 'fill' | 'outline' | 'legacy' | 'standard' = 'outline';\n    @Input() public floatLabel: 'never' | 'always' = 'always';\n    @Input() public multiple: boolean;\n    @Input() public parentId: string;\n    @Input() public toRelate: Resource;\n    @Input() public placeholder: string;\n    @Input() public label: string;\n    @Input() public displayAttribute: string;\n    @Input() public collection: DocumentCollection;\n    @Input() public removeRelationships: boolean;\n    @Input() public disabled: boolean;\n    @Input() public limit: number;\n    @Input() public hasRefresh: boolean = false;\n\n    @Output() public toRelateChange = new EventEmitter<Resource>();\n    @Output() public refresh = new EventEmitter<any>();\n\n    public adaptiveArray: Array<Resource> = [];\n    public clear_relationships = null;\n\n    public searchText: string = '';\n\n    public ngOnInit() {\n        if (this.limit) {\n            this.adaptiveArray = this.collection.data.slice(0, Number(this.limit));\n        } else {\n            this.adaptiveArray = this.collection.data;\n        }\n\n        if (this.toRelate) {\n            this.toRelate = this.collection.find(this.toRelate.id);\n        }\n    }\n\n    public updateFilter(search_text: string): void {\n        this.searchText = search_text;\n    }\n\n    public updateRelationships(resource: Resource) {\n        this.toRelateChange.emit(resource);\n    }\n}\n","import { Component, Input } from '@angular/core';\nimport { Params, Router, ActivatedRoute } from '@angular/router';\n\n@Component({\n    selector: 'jam-option-footer',\n    styles: [`.mouseover * .mouseover-child{display:none}.mouseover:hover * .mouseover-child{display:inherit}`],\n    template: `<mat-option class=\"mat-elevation-z1 mouseover\"\n    (click)=\"goTo()\">\n    <div fxLayout=\"row\" fxLayoutAlign=\"space-between center\">\n        <div>\n            <mat-icon class=\"mat-hint\">add_circle</mat-icon>\n            <span>{{ labelOption || 'Add'}}</span>\n        </div>\n        <div *ngIf=\"openNewTab && !routerLink\">\n            <a mat-icon-button class=\"mat-button mouseover-child\" target=\"_blank\"\n                (click)=\"$event.stopPropagation(); goTo('_blank')\">\n                <mat-icon class=\"mat-hint\" [style.margin]=\"'0'\">open_in_new</mat-icon>\n            </a>\n        </div>\n    </div>\n</mat-option>\n`\n})\nexport class JamOptionFooterComponent {\n    @Input() public url: string;\n    @Input() public labelOption: string;\n    @Input() public routerLink: Array<string>;\n    @Input() public queryParams: Params;\n    @Input() public openNewTab: boolean = false;\n\n    public constructor(\n        private activatedRoute: ActivatedRoute,\n        private router: Router\n    ) {}\n\n    public goTo(target: '_self' | '_blank' = '_self') {\n        if (this.routerLink) {\n            this.router.navigate(this.routerLink, {\n                relativeTo: this.activatedRoute,\n                queryParams: this.queryParams\n            });\n        } else if (this.url) {\n            window.open(\n                this.url,\n                target\n            );\n        }\n    }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { isArray, isObject, isFunction, isUndefined } from 'util';\n\n@Pipe({\n    name: 'filter'\n})\nexport class FilterPipe implements PipeTransform {\n    /**\n     *\n     * @param items List of items to filter\n     * @param term  a string term to compare with every property of the list\n     *\n     */\n    public static filter(items: Array<any>, term: string): Array<any> {\n        const toCompare = term.toLowerCase();\n\n        return items.filter((item: any) => {\n            for (let property in item) {\n                if (property !== 'attributes') {\n                    continue;\n                }\n\n                for (let sub_property in item[property]) {\n                    if (!['string', 'number'].includes(typeof item[property][sub_property])) {\n                        continue;\n                    }\n\n                    if (\n                        item[property][sub_property]\n                            .toString()\n                            .toLowerCase()\n                            .includes(toCompare)\n                    ) {\n                        return true;\n                    }\n                }\n            }\n\n            return false;\n        });\n    }\n\n    /**\n     * @param items object or resource from array\n     * @param searchText search term\n     */\n    public transform(items: any, searchText: string): any {\n        if (!searchText || !items) return items;\n\n        return FilterPipe.filter(items, searchText);\n    }\n}\n","/***\n * Copyright (C) 1997-2017 Reyesoft <info@reyesoft.com>\n *\n * This file is part of Multinexo. Multinexo can not be copied and/or\n * distributed without the express permission of Reyesoft\n */\n\nimport { Component, Input, Output, EventEmitter, OnInit, OnDestroy } from '@angular/core';\nimport { FormControl } from '@angular/forms';\nimport { debounceTime, map } from 'rxjs/operators';\nimport { Destroyer } from '../destroyer';\n\n@Component({\n    selector: 'jam-search-input',\n    styles: [`div.opened{background-color:rgba(0,0,0,.12)}.jam-input{border:0;background:0 0;height:48px;padding:16px;outline:0!important}.mat-icon{margin:0!important}@media only screen and (max-width:600px){div.opened{position:absolute;top:0;left:0;right:0;z-index:333;background:#fff;height:48px;max-height:48px;box-shadow:0 2px 1px -1px rgba(0,0,0,.2),0 1px 1px 0 rgba(0,0,0,.14),0 1px 3px 0 rgba(0,0,0,.12)}div.opened:active,div.opened:focus,div.opened:hover{box-shadow:0 2px 4px -1px rgba(0,0,0,.2),0 4px 5px 0 rgba(0,0,0,.14),0 1px 10px 0 rgba(0,0,0,.12)}}`],\n    template: `<div fxLayout=\"row\" fxLayoutAlign=\"space-between center\">\n    <button mat-icon-button class=\"mat-button\" matTooltip=\"Buscar\"\n        *ngIf=\"!showSearch\"\n        (click)=\"showInput()\">\n        <mat-icon class=\"mat-hint\">search</mat-icon>\n    </button>\n    <div class=\"reset-input-default\" fxFlex=\"100\" [style.padding-left]=\"'16px'\"\n        *ngIf=\"showSearch\"\n        [ngClass]=\"showSearch ? 'opened' : ''\"\n        fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"16\">\n        <mat-icon class=\"mat-hint\">search</mat-icon>\n        <input class=\"jam-input\" fxFlex id=\"search-input\" autocomplete=\"off\"\n            [formControl]=\"searchCtrl\" placeholder=\"Buscar...\">\n\n        <button mat-icon-button class=\"mat-button\" (click)=\"switch()\">\n            <mat-icon class=\"mat-hint\">clear</mat-icon>\n        </button>\n    </div>\n</div>\n`\n})\nexport class SearchInputComponent implements OnInit, OnDestroy {\n    @Input() public text: string;\n    @Input() public opened: boolean = false;\n    @Output() public textChange: EventEmitter<string> = new EventEmitter();\n\n    public searchCtrl: FormControl = new FormControl();\n\n    public showSearch = false;\n\n    private destroyer = new Destroyer();\n\n    public ngOnInit() {\n        this.showSearch = this.opened || this.showSearch;\n\n        this.searchCtrl.valueChanges\n            .pipe(\n                this.destroyer.pipe(),\n                map(x => x),\n                debounceTime(400)\n            ).subscribe(newValue => this.textChange.emit(newValue));\n    }\n\n    public ngOnDestroy() {\n        this.destroyer.destroy();\n    }\n\n    public showInput() {\n        if (this.opened) {\n            this.showSearch = this.opened;\n        } else {\n            this.showSearch = !this.showSearch;\n            setTimeout(() => { if (this.showSearch) document.getElementById('search-input').focus(); }, 0);\n        }\n\n    }\n\n    public switch() {\n        if (this.opened) {\n            this.showSearch = this.opened;\n        } else {\n            this.showSearch = false;\n        }\n\n        if (this.searchCtrl.value !== '') {\n            this.searchCtrl.setValue('');\n            this.textChange.emit(this.searchCtrl.value);\n        }\n    }\n}\n","/**\n * @license\n * Copyright Reyesoft All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MatButtonModule, MatIconModule } from '@angular/material';\nimport { SearchInputComponent } from './search-input.component';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { FilterPipe } from './search-text.pipe';\n\n@NgModule({\n    imports: [\n        FormsModule,\n        FlexLayoutModule,\n        ReactiveFormsModule,\n        MatButtonModule,\n        MatIconModule,\n        CommonModule\n    ],\n    declarations: [SearchInputComponent, FilterPipe],\n    exports: [SearchInputComponent, FilterPipe]\n})\nexport class JamSearchInputModule {}\n","/**\n * @license\n * Copyright Reyesoft All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MatSelectModule, MatFormFieldModule, MatIconModule, MatDividerModule, MatButtonModule } from '@angular/material';\nimport { SelectComponent } from './select.component';\nimport { FilterPipe } from '../search-input/search-text.pipe';\nimport { JamSearchInputModule } from '../search-input/search-input.module';\nimport { JamOptionFooterComponent } from './option-footer.component';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { RouterModule } from '@angular/router';\n\n@NgModule({\n    imports: [\n        RouterModule,\n        JamSearchInputModule,\n        FormsModule,\n        ReactiveFormsModule,\n        FlexLayoutModule,\n        MatButtonModule,\n        MatIconModule,\n        MatDividerModule,\n        MatFormFieldModule,\n        MatSelectModule,\n        CommonModule\n    ],\n    providers: [FilterPipe],\n    declarations: [SelectComponent, JamOptionFooterComponent],\n    exports: [ SelectComponent, JamOptionFooterComponent]\n})\nexport class JamSelectModule {}\n","/***\n * Copyright (C) 1997-2017 Reyesoft <info@reyesoft.com>\n *\n * This file is part of Multinexo. Multinexo can not be copied and/or\n * distributed without the express permission of Reyesoft\n */\n\nimport { Component, Input, Output, EventEmitter } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { Resource } from 'ngx-jsonapi';\nimport { Location } from '@angular/common';\n\n@Component({\n    selector: 'jam-submit',\n    styles: [`div,div button[type=submit]{width:inherit}div button[type=submit]{min-height:36px}`],\n    template: `<div fxLayout=\"row\" fxLayoutAlign=\"end center\">\n    <button type=\"button\" mat-button color=\"accent\" *ngIf=\"!noCancel\" (click)=\"changeState($event)\" class=\"accent pull-right\" rs-esc-key>Cancelar</button>\n    <button mat-button  type=\"submit\" aria-label=\"Guardar\" class=\"pull-right\"\n        [color]=\"submitColor\"\n        [ngClass]=\"submitAppearance\"\n        [disabled]=\"loading || disabled\"\n        (click)=\"submit()\">\n        <div fxLayout=\"row\" fxLayoutAlign=\"center center\">\n            <span *ngIf=\"!loading\" class=\"elements-up\">{{ (submitLabel ? submitLabel : 'Guardar') | uppercase }}</span>\n            <mat-progress-spinner class=\"elements-up default\"\n                *ngIf=\"loading\"\n                mode=\"indeterminate\"\n                value=\"value\"\n                diameter=\"20\"\n                aria-label=\"Cargando Espere\">\n            </mat-progress-spinner>\n        </div>\n    </button>\n</div>\n`\n})\nexport class SubmitComponent {\n    @Input() public submitAppearance: 'mat-flat-button' | 'mat-stroked-button' | 'mat-raised-button' | 'mat-button' = 'mat-flat-button';\n    @Input() public submitColor: 'primary' | 'warn' = 'primary';\n    @Input() public disabled: boolean;\n    @Input() public noCancel: boolean;\n    @Input() public cancelParamsState: object;\n    @Input() public submitLabel: string;\n    @Input() public cancelState: string;\n    @Input() public goBack = false;\n    @Input() public loading: boolean = false;\n    @Output() public accept: EventEmitter<any> = new EventEmitter();\n    @Output() public cancel: EventEmitter<any> = new EventEmitter();\n\n    public constructor(\n        private location: Location,\n        public router: Router,\n        public activatedRoute: ActivatedRoute\n    ) {}\n\n    public changeState(event): void {\n        if (!this.noCancel && this.goBack) {\n            this.location.back();\n            this.cancel.emit('goBack');\n        } else if (this.cancel) {\n            this.cancel.emit();\n        } else if (this.cancelState && (this.cancelState.slice(0, 2) === '..')) {\n            this.router.navigate([this.cancelState], { relativeTo: this.activatedRoute });\n        } else {\n            this.router.navigate([this.cancelState], { queryParams: this.cancelParamsState });\n        }\n    }\n\n    public submit(): void {\n        this.accept.emit();\n    }\n}\n","/**\n * @license\n * Copyright Reyesoft All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MatButtonModule, MatProgressSpinnerModule, MatTooltipModule } from '@angular/material';\nimport { SubmitComponent } from './submit.component';\nimport { FlexLayoutModule } from '@angular/flex-layout';\n\n@NgModule({\n    imports: [\n        FormsModule,\n        ReactiveFormsModule,\n        FlexLayoutModule,\n        MatTooltipModule,\n        MatButtonModule,\n        MatProgressSpinnerModule,\n        CommonModule\n    ],\n    declarations: [SubmitComponent],\n    exports: [SubmitComponent]\n})\nexport class JamSubmitModule {}\n","/***\n * Copyright (C) 1997-2018 Reyesoft <info@reyesoft.com>\n *\n * This file is part of Multinexo. Multinexo can not be copied and/or\n * distributed without the express permission of Reyesoft\n */\n\nimport { Component, Input, Output, EventEmitter, OnInit } from '@angular/core';\n\n/**\n * Este component trabaja con 2 ng-content.\n * En el component que se use, debe definirse dos ng-container con las clases css:\n * header-filters, y filters, de esta forma el component sabe en que ng-content ubicar el contenido que se le pasa.\n */\n\n@Component({\n    selector: 'jam-floating-filters',\n    styles: [`/deep/ .filter-button,/deep/ .filter-button-round,/deep/ .filter-button-square{padding:0;color:currentColor;font-weight:900!important;box-sizing:border-box}/deep/ .filter-button mat-icon,/deep/ .filter-button-round mat-icon,/deep/ .filter-button-square mat-icon{color:currentColor!important}/deep/ .filter-button-round::before,/deep/ .filter-button-square::before,/deep/ .filter-button::before{content:'';background-color:currentColor;position:absolute;left:0;top:0;right:0;bottom:0;border-radius:inherit!important;opacity:.08}.filter-button-round{border-radius:100px!important}.filter-button-square{border-radius:6px}.filter-button-square button{border-radius:6px!important}mat-expansion-panel-header{background:0 0!important}`],\n    template: `<mat-expansion-panel\n    [disabled]=\"!hasAdvancedFilters\"\n    [hideToggle]=\"true\"\n    (opened)=\"toggleStateExpansionPanel(false)\"\n    (closed)=\"toggleStateExpansionPanel(true)\"\n    [style.box-shadow]=\"'none'\"\n    class=\"width-100\" [expanded]=\"open_expansion_panel\" [style.background]=\"'transparent'\">\n    <mat-expansion-panel-header jamAvoidDisabledStyle [style.padding]=\"'0'\">\n        <mat-panel-description fxLayout=\"row\" fxLayoutAlign=\"space-between center\">\n            <div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"16px\" (click)=\"$event.stopPropagation()\">\n                <button mat-button [ngClass]=\"'filter-button-' + appearance\" color=\"accent\"\n                    *ngIf=\"hasAdvancedFilters\"\n                    (click)=\"toggleStateExpansionPanel(open_expansion_panel)\">\n                    <div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"4px\">\n                        <button mat-icon-button class=\"mat-button\" (click)=\"clearFilters(open_expansion_panel)\">\n                            <mat-icon\n                                [innerHtml]=\"!open_expansion_panel ? 'filter_list' : 'close'\"\n                                [matTooltip]=\"open_expansion_panel ? 'Borrar filtros' : 'Ver filtros'\"\n                            ></mat-icon>\n                        </button>\n\n                        <span>FILTROS</span>\n\n                        <mat-icon matSuffix\n                            [style.width.px]=\"'40'\"\n                            [innerHtml]=\"open_expansion_panel ? 'arrow_drop_up' : 'arrow_drop_down'\"\n                        ></mat-icon>\n                    </div>\n                </button>\n            </div>\n\n            <div fxLayout=\"row\" fxLayoutAlign=\"end center\" fxLayoutGap=\"16px\" (keydown)=\"$event.stopPropagation()\" (click)=\"$event.stopPropagation()\">\n                <ng-content select=\"ng-container.jam-filter-header\"></ng-content>\n            </div>\n        </mat-panel-description>\n    </mat-expansion-panel-header>\n\n    <div fxLayout=\"row wrap\" fxLayoutAlign=\"start center\" fxLayoutGap=\"16px grid\">\n        <ng-content select=\"ng-container.jam-filter-content\">\n        </ng-content>\n    </div>\n</mat-expansion-panel>\n`\n})\nexport class FloatingFiltersComponent implements OnInit {\n    @Input() public hasAdvancedFilters: boolean = true;\n    @Input() public appearance: 'round' | 'square' = 'square';\n    @Output() public resetFilters: EventEmitter<void> = new EventEmitter();\n    public show_reset_button: boolean = false;\n    public open_expansion_panel = false;\n\n    public ngOnInit() {\n        this.show_reset_button = this.resetFilters.observers.length > 0;\n    }\n\n    public toggleStateExpansionPanel(state: boolean): void {\n        this.open_expansion_panel = !state;\n    }\n\n    public clearFilters(panel_state: boolean): void {\n        if (!panel_state) {\n            return;\n        }\n        this.resetFilters.emit();\n    }\n}\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","import { Directive, ElementRef, AfterViewInit, OnChanges, OnDestroy, Output, EventEmitter } from '@angular/core';\n\n/**\n * Esta directive se usa en conjunto con la directive/attribute [disabled].\n * Es especial para los matExpansionPanel, cuando se aplican botones de acciones al header de este\n * y no se quiere abrir el matExpansionPanel, entonces esta directiv lo que harÃ¡ es no aplicar los estilos apagado\n * que proporciona material cuando un elemento/tag esta des habilitado.\n */\n\n@Directive({\n    selector: '[jamAvoidDisabledStyle]'\n})\nexport class AvoidDisabledStyleDirective implements OnDestroy {\n    private changes: MutationObserver;\n\n    public constructor(private elementRef: ElementRef) {\n        const NATIVE_ELEMENT = this.elementRef.nativeElement;\n\n        this.changes = new MutationObserver((mutations: Array<MutationRecord>): void => {\n            for (let mutation of mutations) {\n                this.preservingOriginalStyles(mutation);\n            }\n        });\n\n        this.changes.observe(NATIVE_ELEMENT, {\n            attributes: true,\n            childList: false,\n            characterData: false\n        });\n    }\n\n    public ngOnDestroy() {\n        this.changes.disconnect();\n    }\n\n    private preservingOriginalStyles(mutation: MutationRecord): void {\n        if (mutation.attributeName !== 'aria-disabled') {\n            return;\n        }\n\n        let elements: any = document.getElementsByTagName(mutation.target.nodeName);\n        for (let element of elements) {\n            element.style.color = 'inherit';\n        }\n    }\n}\n","/**\n * @license\n * Copyright Reyesoft All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { MatExpansionModule, MatIconModule, MatButtonModule, MatTooltipModule } from '@angular/material';\nimport { FloatingFiltersComponent } from './floating-filters.component';\nimport { AvoidDisabledStyleDirective } from './avoid-disabled-style.directive';\nimport { FlexLayoutModule } from '@angular/flex-layout';\n\n@NgModule({\n    imports: [\n        MatExpansionModule,\n        MatButtonModule,\n        MatTooltipModule,\n        MatIconModule,\n        FlexLayoutModule,\n        CommonModule\n    ],\n    declarations: [FloatingFiltersComponent, AvoidDisabledStyleDirective],\n    exports: [FloatingFiltersComponent, AvoidDisabledStyleDirective]\n})\nexport class JamFloatingFiltersModule {}\n","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { ImageChange } from './image-change-interface';\nimport { UploadOutput } from 'ngx-uploader';\n\n@Component({\n    selector: 'jam-picture-manager',\n    template: `<jam-upload [uploadUrl]=\"uploadUrl\" (dragAndDropChange)=\"dragAndDropStyles($event)\" (showPreview)=\"showPreview($event)\" mat-icon-button fxLayout=\"row\" fxLayoutAlign=\"center center\"\n    [jamHeaders]=\"jamHeaders\"\n    (response)=\"response.emit($event)\"\n    >\n    <div *ngIf=\"drag_and_drop\" [ngClass]=\"type + '-drag-and-drop-styles'\"></div>\n    <div *ngIf=\"!drag_and_drop\" id=\"picture-manager\" class=\"mouseover\">\n        <div [ngClass]=\"type\" [style.background-image]=\"'url(' + source + ')'\">\n            <div class=\"mouseover-child\">\n                <div class=\"blur\" [style.background-image]=\"'url(' + source + ')'\"></div>\n                <div class=\"overlay\"></div>\n                <div class=\"menu\">\n                    <div fxLayout=\"column\" fxLayoutAlign=\"center center\" fxLayoutGap=\"8px\">\n                        <mat-icon matTooltip=\"Subir imagen\">add_a_photo</mat-icon>\n                        <mat-divider *ngIf=\"showDeleteOption\"></mat-divider>\n                        <jam-delete-confirmation *ngIf=\"showDeleteOption\"\n                            [styled]=\"{ color: 'white' }\"\n                            (delete)=\"delete()\"\n                        ></jam-delete-confirmation>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</jam-upload>\n`,\n    styles: [`jam-upload #picture-manager *,jam-upload #picture-manager *>mat-icon{width:auto;height:auto}.square{border-radius:2%;overflow:hidden}.round{border-radius:50%;overflow:hidden}.round-drag-and-drop-styles{background-color:rgba(0,0,0,.05);position:relative;width:180px;height:180px;top:0;left:0;z-index:333;background-image:url(/assets/images/drag_and_drop.png);border-radius:50%}.square-drag-and-drop-styles{background-color:rgba(0,0,0,.05);position:relative;width:180px;height:180px;top:0;left:0;z-index:333;background-image:url(/assets/images/drag_and_drop.png)}jam-upload #picture-manager *>mat-icon{color:#fff;font-size:4.5rem}jam-upload #picture-manager.mouseover:hover{background-color:transparent}jam-upload #picture-manager.mouseover div>.mouseover-child{display:none;-webkit-transition:display .3s;transition:display .3s}jam-upload #picture-manager.mouseover:hover div>.mouseover-child{display:inherit}jam-upload #picture-manager.mouseover:hover div>.mouseover-child .blur{top:0;bottom:0;left:0;right:0;-webkit-filter:blur(10px);-moz-filter:blur(10px);-ms-filter:blur(10px);-o-filter:blur(10px);filter:blur(10px);width:calc(100% + 40px);height:calc(100% + 40px);position:absolute;z-index:1;margin:-20px}jam-upload #picture-manager div mat-divider{width:60%;position:relative;border-color:#fff}jam-upload #picture-manager div{width:180px;height:180px;position:relative;background-size:cover;background-position:center}jam-upload #picture-manager.mouseover div>.mouseover-child .menu{z-index:3;position:absolute;top:0}jam-upload #picture-manager div>div.overlay{top:0;bottom:0;left:0;right:0;width:100%;height:100%;position:absolute;z-index:1;background-color:rgba(0,0,0,.376)}`]\n})\nexport class PictureManagerComponent implements OnInit {\n    /**\n     * Inputs\n     * @param type: describes the shape of the image container, this parameter is optional..\n     * @param source: is a url to reference an image.\n     * @param deleteUrl: is a url for deleting an image, this parameter is optional.\n     * @param uploadUrl: is a url for uploading an image, this parameter is optional.\n     */\n    @Input() public type: 'square' | 'round';\n    @Input() public source: string;\n    @Input() public deleteUrl: string;\n    @Input() public uploadUrl: string;\n    @Input() public showDeleteOption: boolean = true;\n    @Input() public jamHeaders: { [key: string]: any };\n\n    /**\n     * Outputs\n     * @param uploadChange: updates the image and returns the url for it.\n     */\n    @Output() public uploadChange = new EventEmitter<ImageChange>();\n    @Output() public response = new EventEmitter<UploadOutput>();\n\n    public drag_and_drop: boolean = false;\n\n    public constructor(protected httpClient: HttpClient) {}\n\n    public ngOnInit() {\n        this.settingDefaultValues();\n    }\n\n    public dragAndDropStyles(drag_and_drop: boolean) {\n        this.drag_and_drop = drag_and_drop;\n    }\n\n    public showPreview(image: string): void {\n        this.source = image;\n        this.deleteUrl = this.deleteUrl || this.source;\n        this.uploadChange.emit({ status_change: 'update', source: this.source });\n    }\n\n    public delete() {\n        let delete_url = this.creatDeleteUrl(this.source);\n        this.httpClient.delete(delete_url, {\n            headers: this.jamHeaders\n        }).subscribe(\n            (response): void => {\n                this.uploadChange.emit({ status_change: 'delete', source: this.source });\n            }\n        );\n    }\n\n    private settingDefaultValues() {\n        this.type = this.type || 'square';\n        this.deleteUrl = this.deleteUrl || this.source;\n        this.uploadUrl = this.uploadUrl || this.source;\n    }\n\n    private creatDeleteUrl(source: string): string {\n        let img_url_parties: Array<string> = source.split('/');\n        let img_name: string = img_url_parties.pop();\n\n        return this.deleteUrl + img_name;\n    }\n}\n","import { Component, OnInit, Output, Input, EventEmitter } from '@angular/core';\nimport { Resource } from 'ngx-jsonapi';\n\n@Component({\n    selector: 'jam-gallery-manager',\n    template: `<div *ngFor=\"let picture of pictures; let position = index\">\n    <mat-card class=\"mat-card-flat padding-0 container-gallery-manager\"\n        *ngIf=\"limit ? position <= limit : true\"\n        [matTooltip]=\"highlightedImage == position ? 'Imagen principal' : null\"\n        [ngClass]=\"highlightedImage == position ? 'mat-icon mat-accent highlighted-image-container' : null\"\n    >\n        <mat-icon color=\"accent\" *ngIf=\"highlightedImage == position\"\n            class=\"highlighted-image\"\n        >collections_bookmark</mat-icon>\n        <jam-picture-manager\n            [showDeleteOption]=\"showDeleteOption\"\n            [source]=\"picture.attributes.url\"\n            [uploadUrl]=\"uploadUrl + updatePicture + picture.id\"\n            [jamHeaders]=\"jamHeaders\"\n        ></jam-picture-manager>\n    </mat-card>\n</div>\n<jam-upload id=\"gallery-manager\" [uploadUrl]=\"uploadUrl\" (showPreview)=\"showPreview($event)\"\n    *ngIf=\"pictures && pictures.length < limit\" class=\"container-gallery-manager\"\n    [disabled]=\"image_loading\"\n    (response)=\"response($event)\"\n    mat-icon-button matTooltip=\"Subir imagen\"\n    [jamHeaders]=\"jamHeaders\">\n    <mat-icon id=\"base-icon\" [ngClass]=\"image_loading ? 'disabled-update' : null\">add_a_photo</mat-icon>\n    <mat-progress-spinner class=\"elements-up default\"\n        class=\"loading-position\"\n        *ngIf=\"image_loading\"\n        mode=\"indeterminate\"\n        value=\"value\"\n        diameter=\"42\"\n        aria-label=\"Cargando Espere\">\n    </mat-progress-spinner>\n</jam-upload>\n`,\n    styles: [`jam-upload #gallery-manager{width:auto;height:100%}#base-icon{width:auto;height:auto;font-size:8rem}.container-gallery-manager{position:relative;border-radius:inherit}.highlighted-image-container{height:auto!important;width:auto!important;--color:currentColor;border:2px solid var(--color)}.highlighted-image{padding:2px;box-sizing:content-box;background:inherit;border-radius:10%;position:absolute;top:-10px;left:calc(100% - 14px);z-index:2}.loading-position{position:absolute;top:54px;left:48px}.disabled-update{opacity:.3}`]\n})\nexport class GalleryManagerComponent implements OnInit {\n    @Input() public pictures: Array<Resource | any>;\n    @Input() public uploadUrl: string;\n    @Input() public updatePicture: string = '/photos/';\n    @Input() public limit: number;\n    @Input() public showDeleteOption: boolean = true;\n    @Input() public jamHeaders: { [key: string]: any };\n    /**\n     * @param  {number} highlightedImage\n     * Position in the array of the highlighted image, by default is the position 0.\n     */\n    @Input() public highlightedImage: number = 0;\n\n    @Output() public addPicture = new EventEmitter<string>();\n    @Output() public responsePicture = new EventEmitter<Resource>();\n\n    public image_loading: boolean = false;\n\n    public ngOnInit() {\n        this.highlightedImage = this.highlightedImage || 0;\n    }\n\n    public showPreview(img) {\n        this.addPicture.emit(img);\n    }\n\n    public response(event): void {\n        if (event.type !== 'done') {\n            this.image_loading = true;\n\n            return;\n        }\n        this.image_loading = false;\n        this.responsePicture.emit(event.file.response.data);\n    }\n}\n","import { Component, EventEmitter, Output, Input } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { UploadOutput, UploadInput, UploadFile, humanizeBytes, UploaderOptions } from 'ngx-uploader';\n\n@Component({\n    selector: 'jam-upload',\n    template: `<div>\n    <div fxLayout=\"column\" fxLayoutAlign=\"center center\" ngFileDrop [options]=\"options\" (uploadOutput)=\"onUploadOutput($event)\" [uploadInput]=\"uploadInput\">\n        <label class=\"upload-button margin-0\"\n            style=\"display: inline-block;\n                border: none;\n                outline: none;\n                cursor: pointer;\"\n            >\n            <input style=\"display: none\" type=\"file\" class=\"layout-margin\" ngFileSelect\n                [uploadInput]=\"uploadInput\"\n                [disabled]=\"disabled\"\n                [options]=\"options\"\n                (change)=\"previewImage($event)\"\n                (uploadOutput)=\"onUploadOutput($event)\"\n                multiple>\n            <ng-content></ng-content>\n        </label>\n    </div>\n</div>\n<div *ngFor=\"let f of files; let i = index;\">\n    <mat-spinner *ngIf=\"f.progress.data < 100\"></mat-spinner>\n</div>\n`\n})\nexport class UploadComponent {\n    @Input() public uploadUrl: string;\n    @Input() public data: { [key: string]: string } = {};\n    @Input() public redirect: boolean;\n    @Input() public jamHeaders: { [key: string]: any };\n    @Input() public disabled: boolean = false;\n    public httpClient: HttpClient;\n    public options: UploaderOptions;\n    public formData: FormData;\n    public files: Array<UploadFile>;\n    @Output() public uploadInput: EventEmitter<UploadInput>;\n    @Output() public showPreview: EventEmitter<any> = new EventEmitter();\n    @Output() public response: EventEmitter<UploadOutput> = new EventEmitter();\n    @Output() public dragAndDropChange: EventEmitter<boolean> = new EventEmitter();\n    public humanizeBytesFunction: Function;\n    public dragOver: boolean = false;\n\n    public constructor(public router: Router) {\n        this.files = []; // local uploading files array\n        this.uploadInput = new EventEmitter<UploadInput>(); // input events, we use this to emit data to ngx-uploader\n        this.humanizeBytesFunction = humanizeBytes;\n    }\n\n    public onUploadOutput(output: UploadOutput): void {\n        switch (output.type) {\n            case 'allAddedToQueue':\n                this.startUpload();\n                break;\n            case 'addedToQueue':\n                if (typeof output.file !== 'undefined') {\n                    this.previewImage(output.file);\n                    this.files.push(output.file);\n                }\n                break;\n            case 'uploading':\n                if (typeof output.file !== 'undefined') {\n                    // update current data in files array for uploading file\n                    const index = this.files.findIndex(file => typeof output.file !== 'undefined' && file.id === output.file.id);\n                    this.files[index] = output.file;\n                }\n                break;\n            case 'removed':\n                // remove file from array when removed\n                this.files = this.files.filter((file: UploadFile) => JSON.stringify(file) !== JSON.stringify(output.file));\n                break;\n            case 'dragOver':\n                this.dragOver = true;\n                this.dragAndDropChange.emit(this.dragOver);\n                break;\n            case 'dragOut':\n            case 'drop':\n                this.dragOver = false;\n                this.dragAndDropChange.emit(this.dragOver);\n                break;\n            case 'done':\n                if (this.redirect) {\n                    this.router.navigate([this.router.url + '/' + output.file.response.id]);\n                }\n                break;\n        }\n        this.response.emit(output);\n    }\n\n    // The preview function\n    public previewImage(file: any) {\n        const fileReader = new FileReader();\n\n        fileReader.readAsDataURL(file.nativeFile || file.target.files[0]);\n        fileReader.onload = (image: any): any => {\n            this.showPreview.emit(image.target.result);\n        };\n    }\n\n    public startUpload(): void {\n        const event: UploadInput = {\n            type: 'uploadAll',\n            url: this.uploadUrl,\n            method: 'POST',\n            data: this.data, // agergar datos\n            headers: this.jamHeaders\n        };\n        this.uploadInput.emit(event);\n    }\n\n    public cancelUpload(id: string): void {\n        this.uploadInput.emit({ type: 'cancel', id: id });\n    }\n\n    public removeFile(id: string): void {\n        this.uploadInput.emit({ type: 'remove', id: id });\n    }\n\n    public removeAllFiles(): void {\n        this.uploadInput.emit({ type: 'removeAll' });\n    }\n}\n","/***\n * Copyright (C) 1997-2018 Reyesoft <info@reyesoft.com>\n *\n * This file is part of Multinexo. Multinexo can not be copied and/or\n * distributed without the express permission of Reyesoft\n */\n\nimport { Component, Inject } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\n\n@Component({\n    selector: 'jam-confirmation-dialog',\n    template: `<h2 *ngIf=\"data.title\" mat-dialog-title [innerHtml]=\"data.title\"></h2>\n<mat-dialog-content>\n    <p [innerHtml]=\"data.msg\"></p>\n</mat-dialog-content>\n<mat-dialog-actions fxLayout=\"row\" fxLayoutAlign=\"end center\">\n    <button mat-button mat-dialog-close>No</button>\n    <button mat-button [mat-dialog-close]=\"true\" [innerHtml]=\"data.accept\"></button>\n</mat-dialog-actions>\n`\n})\nexport class ConfirmationDialogComponent {\n    public constructor(public dialogRef: MatDialogRef<ConfirmationDialogComponent>, @Inject(MAT_DIALOG_DATA) public data: any) {\n        if (!data.accept) {\n            data.accept = 'SÃ­';\n        }\n        if (!data.msg) {\n            data.msg = 'Â¿EstÃ¡ seguro que desea continuar?';\n        }\n    }\n}\n","/***\n * Copyright (C) 1997-2018 Reyesoft <info@reyesoft.com>\n *\n * This file is part of Multinexo. Multinexo can not be copied and/or\n * distributed without the express permission of Reyesoft\n */\n\nimport { Component, Input, Output, EventEmitter } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { ConfirmationDialogComponent } from './confirmation-dialog/confirmation-dialog.component';\n\n@Component({\n    selector: 'jam-delete-confirmation',\n    template: `<div>\n    <button mat-button type=\"button\"\n        [ngClass]=\"appearance || 'mat-icon-button mat-button'\"\n        (click)=\"showConfirm()\"\n        [color]=\"smartColor[appearance]\"\n        [ngStyle]=\"styled\"\n        [matTooltip]=\"tooltip || text || 'Eliminar'\"\n        >\n        <div fxLayout=\"row\" fxLayoutAlign=\"center center\" fxLayoutGap=\"8px\">\n            <mat-icon\n                [ngStyle]=\"styleIcon ? styleIcon : ''\"\n            >\n                {{ icon ? icon : 'delete' }}\n            </mat-icon>\n            <span *ngIf=\"text && appearance !== 'mat-icon-button'\" [innerHtml]=\"text\"></span>\n        </div>\n    </button>\n</div>\n`\n})\nexport class DeleteConfirmationComponent {\n    @Input() public type: 'icon' | 'button' = 'icon'; /** @Deprecated */\n    @Input() public icon: string;\n    @Input() public tooltip: string;\n    @Input() public msg: string;\n    @Input() public text: string;\n    @Input() public title: string;\n    @Input() public classed: string; /** @Deprecated */\n    @Input() public styled: {};\n    @Input() public styleIcon: string;\n    @Input() public accept: string;\n    @Input() public appearance: 'mat-button' | 'mat-raised-button' |\n        'mat-flat-button' | 'mat-stroked-button' | 'mat-icon-button' = 'mat-icon-button';\n    @Output() public delete: EventEmitter<any> = new EventEmitter();\n\n    public smartColor = {\n        'mat-button': 'accent',\n        'mat-raised-button': 'primary',\n        'mat-flat-button': 'primary',\n        'mat-stroked-button': 'accent',\n        'mat-icon-button': 'default'\n    };\n\n    public constructor(\n        public dialog: MatDialog\n    ) {\n        this.msg = this.msg || 'Â¿EstÃ¡ seguro de eliminar?';\n        this.accept = this.accept || 'SÃ­';\n    }\n\n    public showConfirm(): void {\n        let dialogRef = this.dialog.open(ConfirmationDialogComponent, {\n            width: 'auto',\n            data: { title: this.title, msg: this.msg, accept: this.accept }\n        });\n\n        dialogRef.afterClosed().subscribe(result => {\n            if (result) {\n                this.delete.emit();\n            }\n        });\n    }\n}\n","/**\n * @license\n * Copyright Reyesoft All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { MatIconModule, MatButtonModule, MatDialogModule, MatTooltipModule } from '@angular/material';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { DeleteConfirmationComponent } from './delete-confirmation.component';\nimport { ConfirmationDialogComponent } from './confirmation-dialog/confirmation-dialog.component';\n\n@NgModule({\n    imports: [\n        MatTooltipModule,\n        MatDialogModule,\n        MatButtonModule,\n        MatIconModule,\n        FlexLayoutModule,\n        CommonModule\n    ],\n    declarations: [DeleteConfirmationComponent, ConfirmationDialogComponent],\n    entryComponents: [ConfirmationDialogComponent],\n    exports: [DeleteConfirmationComponent, ConfirmationDialogComponent]\n})\nexport class JamDeleteConfirmationModule {}\n","/**\n * @license\n * Copyright Reyesoft All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { NgxUploaderModule } from 'ngx-uploader';\nimport { MatProgressSpinnerModule, MatDividerModule, MatIconModule, MatTooltipModule, MatButtonModule, MatCardModule } from '@angular/material';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { UploadComponent } from './upload/upload.component';\nimport { PictureManagerComponent } from './picture/picture-manager.component';\nimport { GalleryManagerComponent } from './gallery/gallery-manager.component';\nimport { JamDeleteConfirmationModule } from '../delete-confirmation/delete-confirmation.module';\n\n@NgModule({\n    imports: [\n        JamDeleteConfirmationModule,\n        MatCardModule,\n        MatProgressSpinnerModule,\n        MatTooltipModule,\n        MatButtonModule,\n        MatProgressSpinnerModule,\n        MatDividerModule,\n        MatIconModule,\n        NgxUploaderModule,\n        FlexLayoutModule,\n        CommonModule\n    ],\n    declarations: [UploadComponent, PictureManagerComponent, GalleryManagerComponent],\n    exports: [PictureManagerComponent, GalleryManagerComponent]\n})\nexport class JamPictureManagerModule {}\n","import { Component, OnInit, Input, ViewChild, ElementRef } from '@angular/core';\nimport { Resource, DocumentCollection, Service } from 'ngx-jsonapi';\nimport { FormControl } from '@angular/forms';\nimport { Observable } from 'rxjs';\nimport { tap } from 'rxjs/operators';\nimport { filterOrRequest } from '../batch';\nimport { trackById } from '../track-by-id';\nimport { IPage } from 'ngx-jsonapi/interfaces/page';\n\n@Component({\n    selector: 'jam-chips-autocomplete',\n    template: `<mat-form-field [style.width.%]=\"'100'\" [appearance]=\"appearance\">\n    <mat-label *ngIf=\"matLabel\">{{ matLabel }}</mat-label>\n    <mat-chip-list #chipList>\n        <mat-chip\n            *ngFor=\"let resource_resource of collection_relationships.data; trackBy: collection_relationships.trackBy\"\n            [selectable]=\"selectable\"\n            [removable]=\"removable\"\n            (removed)=\"removeResource(resource_resource)\">\n            {{ resource_resource.attributes[attributesDisplay[0]] }}\n        <mat-icon matChipRemove *ngIf=\"removable\">cancel</mat-icon>\n        </mat-chip>\n        <input\n            [placeholder]=\"placeholder || ''\"\n            #resourceInput\n            [formControl]=\"formControl\"\n            [matAutocomplete]=\"auto\"\n            [matChipInputFor]=\"chipList\"\n            [matChipInputAddOnBlur]=\"addOnBlur\">\n    </mat-chip-list>\n\n    <mat-autocomplete autoActiveFirstOption #auto=\"matAutocomplete\" (optionSelected)=\"addResource($event.option.value)\">\n        <ng-container *ngFor=\"let resource of filteredCollection | async; trackBy: trackById\">\n            <mat-option *ngIf=\"!collection_relationships.find(resource.id)\" [value]=\"resource\">\n                <div fxLayout=\"row\" fxLayoutAlign=\"start center\">\n                    <mat-icon class=\"layout-margin\">person</mat-icon>\n                    <strong>{{ resource.attributes[attributesDisplay[0]] }}</strong>\n                    &nbsp;\n                    <small fxLayout=\"row\" fxLayoutAlign=\"start center\" *ngFor=\"let attribute_name of attributesDisplay; let attr_id = index\">\n                        <span *ngIf=\"attr_id >= 1\">| {{ resource.attributes[attribute_name] }}</span>\n                    </small>\n                </div>\n            </mat-option>\n        </ng-container>\n    </mat-autocomplete>\n</mat-form-field>\n`\n})\nexport class ChipsAutocompleteComponent implements OnInit {\n    @ViewChild('resourceInput') public resourceInput: ElementRef;\n    @Input() public placeholder: string;\n    @Input() public resource: Resource;\n    @Input() public remoteFilter: { [key: string]: any };\n    @Input() public service: Service;\n    @Input() public relationAlias: string;\n    @Input() public attributesDisplay: Array<string>;\n    @Input() public appearance: 'standard' | 'outline' | 'legacy' | 'fill';\n    @Input() public matLabel: string;\n    @Input() public page: IPage = {\n        number: 1,\n        size: 50\n    };\n\n    public trackById = trackById;\n    public filteredCollection: Observable<Array<Resource>>;\n    public formControl: FormControl;\n    public collection: DocumentCollection;\n    public addOnBlur: boolean = true;\n    public selectable: boolean = true;\n    public removable: boolean = true;\n    public collection_relationships: DocumentCollection;\n\n    private collectionArray: Array<Resource> = [];\n    private collectionArrayLastFilterValue: string;\n\n    public constructor() {\n        this.formControl = new FormControl();\n     }\n\n    public ngOnInit(): void {\n        this.collection = this.service.newCollection();\n        this.collection_relationships = <DocumentCollection>this.resource.relationships[this.relationAlias];\n\n        this.filteredCollection = this.formControl.valueChanges.pipe(\n            filterOrRequest({\n                attribute_to_search: this.attributesDisplay[0],\n                resourcesArray: this.collectionArray,\n                getAllFc: this.getAll.bind(this),\n                last_filter_value: this.collectionArrayLastFilterValue,\n                collection: this.collection,\n                page_size: this.page.size\n            })\n        );\n    }\n\n    public getAll(search_text: string): Observable<DocumentCollection> {\n        if (search_text) {\n            this.remoteFilter = { ...this.remoteFilter, ...{ [this.attributesDisplay[0]]: search_text }};\n\n            return this.service\n                .all({\n                    remotefilter: this.remoteFilter,\n                    page: { number: 1, size: this.page.size }\n                });\n        }\n\n        return this.service\n            .all({\n                remotefilter: this.remoteFilter,\n                page: { number: 1, size: this.page.size }\n            });\n    }\n\n    public filterCollection(search_text: string | Resource): Array<Resource> {\n        const filterValue = typeof search_text === 'string' ? search_text.toLowerCase() : '';\n\n        return this.collection.data.filter((resource: Resource) => resource.attributes[this.attributesDisplay[0]]\n                .toLowerCase()\n                .indexOf(filterValue) >= 0);\n    }\n\n    public addResource(resource: Resource): void {\n        this.resource.addRelationship(resource, this.relationAlias);\n        this.resourceInput.nativeElement.value = '';\n        this.formControl.setValue(null);\n    }\n\n    public displayName(resource: Resource): '' {\n        return '';\n    }\n\n    public removeResource(resource: Resource): void {\n        this.resource.removeRelationship(this.relationAlias, resource.id);\n    }\n}\n","/**\n * @license\n * Copyright Reyesoft All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MatFormFieldModule, MatChipsModule, MatIconModule, MatOptionModule, MatAutocompleteModule } from '@angular/material';\nimport { ChipsAutocompleteComponent } from './chips-autocomplete.component';\nimport { FlexLayoutModule } from '@angular/flex-layout';\n\n@NgModule({\n    imports: [\n        FormsModule,\n        FlexLayoutModule,\n        ReactiveFormsModule,\n        MatAutocompleteModule,\n        MatFormFieldModule,\n        MatOptionModule,\n        MatChipsModule,\n        MatIconModule,\n        CommonModule\n    ],\n    declarations: [ChipsAutocompleteComponent],\n    exports: [ChipsAutocompleteComponent]\n})\nexport class JamChipsAutocompleteModule {}\n","/***\n * Copyright (C) 1997-2018 Reyesoft <info@reyesoft.com>\n *\n * This file is part of Multinexo. Multinexo can not be copied and/or\n * distributed without the express permission of Reyesoft\n */\n\nimport { Component, Inject, HostListener } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { Resource } from 'ngx-jsonapi';\n\nexport interface IEditTextAttributeData {\n    resource: Resource;\n    attribute: string;\n    title: string;\n    accept?: string;\n    message?: string;\n    textarea_label?: string;\n}\n\n@Component({\n    selector: 'jam-edit-text-attribute',\n    template: `<form name=\"myForm\" novalidate (ngSubmit)=\"updateAttributeAndClose(data.attribute, text_value)\">\n    <h2 *ngIf=\"data.title\" mat-dialog-title [innerHtml]=\"data.title\"></h2>\n    <mat-dialog-content>\n        <p *ngIf=\"data.message\">{{ data.message }}</p>\n        <mat-form-field\n            appearance=\"outline\"\n            fxFlex\n        >\n            <mat-label>{{ data.textarea_label }}</mat-label>\n            <textarea maxlength=\"140\"\n                name=\"text_attribute\"\n                type=\"text\"\n                #textarea\n                [(ngModel)]=\"text_value\"\n                matInput\n            ></textarea>\n            <mat-hint align=\"end\">{{textarea.value.length}} / 140</mat-hint>\n        </mat-form-field>\n    </mat-dialog-content>\n\n    <mat-dialog-actions fxLayout=\"row\" fxLayoutAlign=\"end center\">\n        <jam-submit\n            (cancel)=\"dialogRef.close()\"\n            [submitLabel]=\"data.accept\"\n        ></jam-submit>\n    </mat-dialog-actions>\n</form>\n`\n})\nexport class EditTextAttributeDialogComponent {\n    public text_value = '';\n\n    public constructor(\n        public dialogRef: MatDialogRef<EditTextAttributeDialogComponent>,\n        @Inject(MAT_DIALOG_DATA) public data: IEditTextAttributeData) {\n        if (!data.accept) {\n            data.accept = 'Aceptar';\n        }\n    }\n\n    @HostListener('window: keyup', ['$event']) public onKeyUp(event: KeyboardEvent) {\n        if (event.key === 'Enter' && !event.shiftKey)   {\n            this.updateAttributeAndClose(this.data.attribute, this.text_value);\n        }\n    }\n\n    public updateAttributeAndClose(attribute: string, value: string) {\n        this.data.resource.attributes[attribute] = value;\n        this.dialogRef.close(true);\n    }\n}\n","/**\n * @license\n * Copyright Reyesoft All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { JamSubmitModule } from '../submit/submit.module';\nimport {\n    EditTextAttributeDialogComponent\n} from './edit-text-attribute-dialog.component';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\n@NgModule({\n    imports: [\n        FormsModule,\n        ReactiveFormsModule,\n        MatTooltipModule,\n        MatDialogModule,\n        MatButtonModule,\n        MatFormFieldModule,\n        MatIconModule,\n        MatInputModule,\n        FlexLayoutModule,\n        JamSubmitModule,\n        CommonModule\n    ],\n    declarations: [EditTextAttributeDialogComponent],\n    entryComponents: [EditTextAttributeDialogComponent],\n    exports: [EditTextAttributeDialogComponent]\n})\nexport class JamEditTextAttributeModule {}\n","/***\n * Copyright (C) 1997-2018 Reyesoft <info@reyesoft.com>\n *\n * This file is part of Multinexo. Multinexo can not be copied and/or\n * distributed without the express permission of Reyesoft\n */\n\nimport { Injectable } from '@angular/core';\n\n/**\n * @param id: The id must be composed of the resource followed by a period and a short,\n * descriptive message of the warning in question.\n * @param message: It must be a descriptive warning message.\n * @param link: It is optional, and must contain a route.\n */\nexport interface IWarning {\n    id: string;\n    attributes: {\n        message: string;\n        link?: string;\n        linkQueryParams?: {[key: string]: string};\n        externalLink?: string;\n        linkText?: string;\n    };\n}\n\n@Injectable()\nexport class TopWarningService {\n    public warnings: Array<IWarning> = [];\n\n    /**\n     * Receives a warning resource.\n     *\n     * @param warning\n     */\n    public setWarningMessage(warning: IWarning): void {\n        if (!warning) return;\n\n        if (this.warnings.length <= 0) {\n            this.warnings.push(warning);\n        }\n\n        let search_warning = this.warnings.find(msj_warning => msj_warning.id === warning.id);\n        if (!search_warning || search_warning.id !== warning.id) {\n            this.warnings.push(warning);\n        }\n    }\n\n    public getWarningMessage(): Array<IWarning> {\n        return this.warnings;\n    }\n\n    public clearMessage(warning_keys: Array<string>): void {\n        for (let warning of this.warnings) {\n            if (!warning_keys.includes(warning.id)) continue;\n            let index = this.warnings.indexOf(warning);\n            this.warnings.splice(index, 1);\n        }\n    }\n}\n","import { Component, Input, HostListener } from '@angular/core';\nimport { TopWarningService } from './top-warning.service';\n\n@Component({\n    selector: 'jam-top-warning',\n    template: `<mat-accordion *ngIf=\"topWarningService.warnings.length > 0\">\n    <mat-expansion-panel id=\"rsTopWarning\" class=\"yellow-bg-400\"\n        [expanded]=\"opened\"\n        [ngClass]=\"opened ? 'hidden-header' : ''\"\n        [hideToggle]=\"true\"\n        (expandedChange)=\"toggleOpenAccordion($event)\">\n        <mat-expansion-panel-header *ngIf=\"!opened\">\n            <mat-panel-description fxLayout=\"column\" fxLayoutAlign=\"end center\">\n                <mat-icon>{{ button_icons[button_state] }}</mat-icon>\n            </mat-panel-description>\n        </mat-expansion-panel-header>\n        <div fxLayout=\"column\" class=\"text-center\">\n            <div *ngFor=\"let warn of topWarningService.warnings\">\n                <jam-single-warning\n                    [message]=\"warn.attributes.message\"\n                    [link]=\"warn.attributes.link\"\n                    [linkQueryParams]=\"warn.attributes.linkQueryParams\"\n                    [externalLink]=\"warn.attributes.externalLink\"\n                    [linkText]=\"warn.attributes.linkText\"\n                    >\n                </jam-single-warning>\n                <mat-divider></mat-divider>\n            </div>\n            <div [style.cursor]=\"'pointer'\" class=\"action-button\" fxLayout=\"column\" fxLayoutAlign=\"center center\"\n                (click)=\"opened = false\">\n                <button mat-icon-button>\n                    <mat-icon *ngIf=\"opened\"\n                    >{{ button_icons[button_state] }}</mat-icon>\n                </button>\n            </div>\n        </div>\n    </mat-expansion-panel>\n</mat-accordion>\n`,\n    styles: [`.yellow-bg-400{background:#ffee58}.overlay{z-index:999}.text-center{text-align:center}mat-expansion-panel-header{height:15px!important}:host /deep/ .mat-expansion-panel-body{padding-bottom:0}mat-divider{border-color:#fbc02d!important}mat-icon{color:#757575}.action-button{height:24px}`]\n})\nexport class TopWarningComponent {\n    @Input() public opened: boolean = true;\n    public button_state: 'expanded' | 'contracted' | 'standby' = 'standby';\n    public button_icons = {\n        expanded: 'keyboard_arrow_down',\n        contracted: 'keyboard_arrow_up',\n        standby: 'remove'\n    };\n\n    public constructor(public topWarningService: TopWarningService) {\n        this.defaultAccordionState();\n    }\n\n    @HostListener('mouseenter')\n    public onMouseEnter() {\n        this.opened ? this.button_state = 'contracted' : this.button_state = 'expanded';\n    }\n\n    @HostListener('mouseleave')\n    public onMouseLeave() {\n        this.button_state = 'standby';\n    }\n\n    public toggleOpenAccordion(opened: boolean): void {\n        this.opened = opened;\n        localStorage.setItem('opened', this.opened.toString());\n    }\n\n    public defaultAccordionState(): void {\n        this.opened = localStorage.getItem('opened') === 'false' ? false : true;\n    }\n}\n","/***\n * Copyright (C) 1997-2018 Reyesoft <info@reyesoft.com>\n *\n * This file is part of Multinexo. Multinexo can not be copied and/or\n * distributed without the express permission of Reyesoft\n */\n\nimport { Component, Input, Output, EventEmitter, OnInit } from '@angular/core';\n\n@Component({\n    selector: 'jam-single-warning',\n    template: `<mat-card class=\"mat-card-flat yellow-bg-400 width-100\"\n    *ngIf=\"message\"\n    [ngStyle]=\"custom_styles\"\n>\n    <span>{{ message }}</span>\n    <a\n        [routerLink]=\"link\"\n        [queryParams]=\"linkQueryParams || {}\"\n        *ngIf=\"link\"\n        >\n        {{ linkText || 'MÃ¡s informaciÃ³n' }}\n    </a>\n    <a\n        [href]=\"externalLink\"\n        target=\"_blank\"\n        *ngIf=\"externalLink\"\n        >\n        {{ linkText || 'MÃ¡s informaciÃ³n' }}\n    </a>\n\n    <button\n        *ngIf=\"actionButtonText\"\n        mat-button\n        type=\"button\"\n        name=\"button\"\n        (click)=\"actionButtonClick.emit()\"\n        >\n        {{ actionButtonText }}\n    </button>\n    <button\n        *ngIf=\"actionIconButton\"\n        mat-icon-button\n        [matTooltip]=\"actionIconButtonTooltip\"\n        type=\"button\"\n        name=\"button\"\n        (click)=\"actionIconButtonClick.emit()\"\n        >\n        <mat-icon>\n            {{ actionIconButton }}\n        </mat-icon>\n    </button>\n</mat-card>\n`,\n    styles: [`.yellow-bg-400{box-sizing:border-box;background:#ffee58;color:#212121}`]\n})\nexport class SingleWarningComponent implements OnInit {\n    @Input() public message: string;\n    @Input() public backgroundColor: string;\n    @Input() public textColor: string;\n    @Input() public link: string;\n    @Input() public linkQueryParams: {[key: string]: string};\n    @Input() public externalLink: string;\n    @Input() public linkText: string;\n    @Input() public actionButtonText: string;\n    @Input() public actionIconButton: string;\n    @Input() public actionIconButtonTooltip: string;\n    @Output() public actionButtonClick: EventEmitter<void> = new EventEmitter<void>();\n    @Output() public actionIconButtonClick: EventEmitter<void> = new EventEmitter<void>();\n\n    public custom_styles: {\n        color?: string;\n        'background-color'?: string;\n    } = {};\n\n    public ngOnInit() {\n        if (this.backgroundColor) {\n            this.custom_styles['background-color'] = this.backgroundColor;\n        }\n        if (this.textColor) {\n            this.custom_styles.color = this.textColor;\n        }\n    }\n\n}\n","/**\n * @license\n * Copyright Reyesoft All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport { CommonModule } from '@angular/common';\nimport { RouterModule } from '@angular/router';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MatFormFieldModule, MatExpansionModule, MatIconModule, MatButtonModule, MatDividerModule, MatCardModule } from '@angular/material';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { TopWarningComponent } from './top-warning.component';\nimport { SingleWarningComponent } from './single-warning/single-warning.component';\nimport { TopWarningService } from './top-warning.service';\nimport { FlexLayoutModule } from '@angular/flex-layout';\n\n@NgModule({\n    imports: [\n        MatFormFieldModule,\n        MatExpansionModule,\n        MatCardModule,\n        MatIconModule,\n        FlexLayoutModule,\n        MatButtonModule,\n        MatDividerModule,\n        // ReactiveFormsModule,\n        MatTooltipModule,\n        FormsModule,\n        RouterModule,\n        CommonModule\n    ],\n    declarations: [TopWarningComponent, SingleWarningComponent],\n    providers: [TopWarningService],\n    exports: [TopWarningComponent, SingleWarningComponent]\n})\nexport class JamTopWarningModule {}\n","import { Component, Inject } from '@angular/core';\nimport { MatDialogRef } from '@angular/material/dialog';\n\n@Component({\n    selector: 'jam-dialog-logged-state',\n    template: `<h3 mat-dialog-title>Tu sesiÃ³n se ha cerrado.</h3>\n<hr>\n<mat-dialog-content>\n    <p>Es necesario que vuelvas a ingresar tu usuario y contraseÃ±a. Â¡Vamos a ello!</p>\n</mat-dialog-content>\n<mat-dialog-actions fxLayout=\"row\" fxLayoutAlign=\"end center\">\n    <jam-submit (accept)=\"onCloseConfirm()\" [noCancel]=\"true\" submitLabel=\"Aceptar\"></jam-submit>\n</mat-dialog-actions>\n`\n})\nexport class DialogLoggedStateComponent {\n    public constructor(protected thisDialogRef: MatDialogRef<DialogLoggedStateComponent>) {}\n\n    public onCloseConfirm(): void {\n        this.thisDialogRef.close('Confirm');\n    }\n\n    public onCloseCancel(): void {\n        this.thisDialogRef.close('Cancel');\n    }\n}\n","import { ErrorHandler, Injectable, Injector, NgZone } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { FormGroup } from '@angular/forms';\nimport { MatDialog } from '@angular/material/dialog';\nimport { JsonapiCore } from 'ngx-jsonapi';\nimport { ToasterService } from 'angular2-toaster';\nimport { DialogLoggedStateComponent } from '../logged-state/dialog-logged-state.component';\n\nexport interface IGlobalStateService {\n    logout(): void;\n}\n\n@Injectable()\nexport class JamErrorHandler extends ErrorHandler {\n    public lastErrorCached = { title: '', time: 0 };\n    public token_dialog_is_open: boolean;\n    public globalStateService: IGlobalStateService;\n    public show_angular_errors = true;\n\n    private form: FormGroup;\n\n    public constructor(\n        public ngZone: NgZone,\n        public matDialog: MatDialog,\n        public toasterService: ToasterService\n    ) {\n        super();\n    }\n\n    public handleError(error) {\n        if (error.status === 404) {\n            this.Notification('Error al contactar con el servidor, intenta nuevamente mÃ¡s tarde.');\n\n            return;\n        }\n        if (error.status === 500 || error.message && error.message === 'Server Error') {\n            this.unhandledError(error.status);\n\n            return;\n        }\n        if (error.errors) {\n            this.handleJsonapiErrors(error);\n\n            return;\n        }\n        if (error.rejection) {\n            // this first case is for guest module rejections\n            if (error.rejection.error && error.rejection.error.errors) this.handleJsonapiErrors(error.rejection.error);\n            if (error.rejection.errors) this.handleJsonapiErrors(error.rejection);\n            console.error('Rejection:', error.rejection);\n\n            return;\n        }\n\n        if (error.status) {\n            this.unhandledError(error.status);\n        } else if (error.message && this.show_angular_errors) {\n            this.unhandledError(error.message);\n        }\n\n        super.handleError(error);\n    }\n\n    public handleJsonapiErrors(error, use_error_cache = true) {\n        for (let actual_error of error.errors) {\n\n            if (use_error_cache) {\n                // si es ultimo mensaje recibido y solo han pasado 2 segundos, no muestra error\n                if (this.lastErrorCached.title === actual_error.title && this.lastErrorCached.time > Date.now() - 2000) return;\n\n                this.lastErrorCached.title = actual_error.title;\n                this.lastErrorCached.time = Date.now();\n            }\n\n            switch (actual_error.title) {\n                case 'Internal server error':\n                    this.Notification(actual_error.detail, 'error');\n\n                    return;\n                case 'Bad request':\n                    if (actual_error.detail.includes('Token required')) {\n                        this.ngZone.run(async () => this.logOut());\n\n                        return;\n                    }\n                    break;\n                case 'Invalid data received':\n                    if (actual_error.detail === 'The refresh token must be at least 20 characters.') {\n                        this.ngZone.run(async () => this.logOut());\n\n                        return;\n                    }\n                    break;\n                case 'Token has expired':\n                case 'Token not provided':\n                    this.ngZone.run(async () => this.logOut());\n\n                    return;\n                case 'Too many attempts':\n                    this.Notification('Has agotado el lÃ­mite de intentos, espera un momento antes de continuar.', 'error');\n\n                    return;\n            }\n\n            // cannot use special conditions to SWITCH statement without changing the data inside switch to \"true\"\n            if (actual_error.detail.includes('Token required')) {\n                this.ngZone.run(async () => this.logOut());\n\n                return;\n            }\n\n            switch (actual_error.detail) {\n                case 'Expired access token.':\n                case 'The refresh token is invalid. Cannot decrypt the refresh token':\n                case 'Invalid access token':\n                    this.ngZone.run(async () => this.logOut());\n\n                    return;\n            }\n\n            this.singleError(actual_error);\n        }\n    }\n\n    public logOut(): void {\n        if (this.token_dialog_is_open) {\n            return;\n        }\n        this.token_dialog_is_open = true;\n        const dialog_ref = this.matDialog.open(DialogLoggedStateComponent, {\n            width: '600px',\n            disableClose: true\n        });\n\n        dialog_ref.afterClosed().subscribe(success => {\n            this.token_dialog_is_open = false;\n            this.globalStateService.logout();\n        });\n    }\n\n    public setForm(form: FormGroup) {\n        this.form = form;\n    }\n\n    public Notification(title: string, type?: 'success' | 'error' | 'info' | 'warning', body?: string) {\n        let messages = title.split('|');\n        type = type || 'error';\n        if (messages.length === 1) {\n            this.toasterService.pop(type, title, body);\n\n            return;\n        }\n        for (let each of messages) {\n            if (each !== '\\n') {\n                this.toasterService.pop(type, each);\n            }\n        }\n    }\n\n    public singleError(error) {\n        if (!error.detail && !error.title) {\n            console.warn('Error cant be handled:', error);\n\n            return;\n        }\n\n        if (this.form && error.source && this.form.get(error.source.attribute)) {\n            this.form.get(error.source.attribute).setErrors({ 'server-error': error.detail });\n        } else {\n            this.Notification(error.detail || error.title);\n        }\n    }\n\n    public unhandledError(message: string) {\n        this.Notification(\n            'Ups, ha ocurrido un error. ContÃ¡ctanos por correo a soporte@multinexo.com',\n            'error',\n            `CÃ³digo de error: ${message}`\n        );\n    }\n}\n","/**\n * @license\n * Copyright Reyesoft All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport { CommonModule } from '@angular/common';\nimport { JamSubmitModule } from '../submit/submit.module';\nimport { JamErrorHandler } from './error-handler.service';\nimport { DialogLoggedStateComponent } from '../logged-state/dialog-logged-state.component';\nimport { NgModule } from '@angular/core';\nimport { MatButtonModule, MatDialogModule } from '@angular/material';\nimport { FlexLayoutModule } from '@angular/flex-layout';\n\n@NgModule({\n    imports: [\n        MatDialogModule,\n        MatButtonModule,\n        FlexLayoutModule,\n        JamSubmitModule,\n        CommonModule\n    ],\n    declarations: [DialogLoggedStateComponent],\n    providers: [JamErrorHandler],\n    entryComponents: [DialogLoggedStateComponent],\n    exports: [DialogLoggedStateComponent]\n})\nexport class JamErrorHandlerModule {}\n","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { SatDatepickerRangeValue, SatDatepickerInputEvent } from 'saturn-datepicker';\nimport { DatePipe } from '@angular/common';\n\nconst start_time = [0, 0, 0];\nconst end_time = [23, 59, 59];\n\n@Component({\n    selector: 'jam-range-datepicker',\n    template: `<mat-form-field [matTooltip]=\"label\">\n    <mat-select [placeholder]=\"label\">\n        <mat-option (click)=\"applyCustomRange($event, resultPicker); $event.stopPropagation()\" fxLayout=\"row\" fxLayoutAlign=\"space-between center\">\n            <sat-datepicker-toggle matPrefix [for]=\"resultPicker\"></sat-datepicker-toggle>\n            <input matInput\n                placeholder=\"Rango personalizado\"\n                #resultPickerModel=\"ngModel\"\n                [satDatepicker]=\"resultPicker\"\n                [(ngModel)]=\"date\"\n                (dateInput)=\"onDateInput($event)\"\n                (dateChange)=\"onDateChange($event)\">\n            <sat-datepicker\n                [disabled]=\"false\"\n                #resultPicker [rangeMode]=\"true\">\n            </sat-datepicker>\n\n            <div matSuffix fxFlex=\"10\">\n                <button mat-icon-button matTooltip=\"Limpiar filtro\" (click)=\"clearRange($event)\">\n                    <mat-icon>clear</mat-icon>\n                </button>\n            </div>\n        </mat-option>\n\n        <mat-option (click)=\"applyToday()\">Hoy</mat-option>\n        <mat-option (click)=\"applyLastWeek()\">Ãltima semana</mat-option>\n        <mat-option (click)=\"applyCurrentMonth()\">Este mes</mat-option>\n        <mat-option (click)=\"applylastMonth()\">El mes pasado</mat-option>\n    </mat-select>\n</mat-form-field>\n`,\n    providers: [DatePipe],\n    styles: [`mat-form-field{font-size:15px}`]\n})\nexport class RangeDatepickerComponent implements OnInit {\n    public date: SatDatepickerRangeValue<Date>;\n    public lastDateInput: SatDatepickerRangeValue<Date> | null;\n    public lastDateChange: SatDatepickerRangeValue<Date> | null;\n    public label: string;\n\n    @Input() public startDate: Date;\n    @Input() public endDate: Date;\n\n    @Output() public startDateChange = new EventEmitter<Date>();\n    @Output() public endDateChange = new EventEmitter<Date>();\n    @Output() public updateDate = new EventEmitter<any>();\n\n    public constructor(protected datePipe: DatePipe) {}\n\n    public ngOnInit() {\n        this.label = 'Rango de fecha';\n    }\n\n    public onDateInput(event: SatDatepickerInputEvent<Date>): void {\n        this.lastDateInput = event.value as SatDatepickerRangeValue<Date>;\n        this.updateDateChange(this.lastDateInput.begin, this.lastDateInput.end);\n    }\n\n    public onDateChange(event: SatDatepickerInputEvent<Date>): void {\n        this.lastDateChange = event.value as SatDatepickerRangeValue<Date>;\n        this.updateDateChange(this.lastDateChange.begin, this.lastDateChange.end);\n    }\n\n    public applyCustomRange(event, picker): void {\n        event.stopPropagation();\n        picker.open();\n    }\n\n    public applyLastWeek(): void {\n        this.endDate = new Date();\n        this.startDate = new Date();\n        this.startDate.setDate(this.endDate.getDate() - 6);\n        this.date = { begin: this.startDate, end: this.endDate };\n        this.updateDateChange(this.startDate, this.endDate);\n    }\n\n    public applyToday(): void {\n        this.startDate = this.endDate = new Date();\n        this.date = { begin: this.startDate, end: this.endDate };\n        this.updateDateChange(this.startDate, this.endDate);\n    }\n\n    public applyCurrentMonth(): void {\n        let today = new Date();\n        this.startDate = new Date(today.getFullYear(), today.getMonth(), 1);\n        this.endDate = new Date(today.getFullYear(), today.getMonth() + 1, 0);\n        this.date = { begin: this.startDate, end: this.endDate };\n        this.updateDateChange(this.startDate, this.endDate);\n    }\n\n    public clearRange(event): void {\n        event.stopPropagation();\n        this.date = null;\n        this.updateDateChange(null, null);\n        this.label = 'Rango de fecha';\n    }\n\n    public applylastMonth(): void {\n        let today = new Date();\n        this.startDate = new Date(today.getFullYear(), today.getMonth() - 1, 1);\n        this.endDate = new Date(today.getFullYear(), today.getMonth(), 0);\n        this.date = { begin: this.startDate, end: this.endDate };\n        this.updateDateChange(this.startDate, this.endDate);\n    }\n\n    private updateDateChange(start_date: Date, end_date: Date): void {\n        this.startDate = start_date;\n        this.endDate = end_date;\n        this.label = this.togglePreviewText(start_date, end_date);\n        this.startDateChange.emit(this.formatDateAndAddTime(start_date, start_time));\n        this.endDateChange.emit(this.formatDateAndAddTime(end_date, end_time));\n        this.updateDate.emit();\n    }\n\n    private togglePreviewText(start_date: Date, end_date?: Date): string {\n        if (start_date && end_date) {\n            return this.createPreviewText(start_date, end_date).toUpperCase();\n        }\n\n        if (start_date) {\n            return this.getDays(start_date).toUpperCase();\n        }\n\n        if (end_date) {\n            return this.getDays(end_date).toUpperCase();\n        }\n    }\n\n    private getDays(date: Date): string {\n        let today = new Date();\n        if (date.getDate() === today.getDate()) {\n            return 'hoy';\n        }\n\n        return this.datePipe.transform(date, 'dd MMM yyyy');\n    }\n\n    private createPreviewText(start_date: Date, end_date: Date): string {\n        if (start_date.getFullYear() !== end_date.getFullYear()) {\n            return (\n                this.datePipe.transform(start_date, 'dd MMM yyyy - ') +\n                this.datePipe.transform(end_date, 'dd MMM yyyy')\n            );\n        }\n\n        if (start_date.getMonth() === end_date.getMonth()) {\n            if (this.compareDaysOfTheSameMonth()) return this.getDays(start_date);\n\n            return (\n                this.datePipe.transform(start_date, 'dd - ') +\n                this.datePipe.transform(end_date, 'dd') +\n                this.datePipe.transform(end_date, ' MMM yyyy')\n            );\n        }\n\n        return (\n            this.datePipe.transform(start_date, 'dd MMM - ') +\n            this.datePipe.transform(end_date, 'dd MMM') +\n            this.datePipe.transform(end_date, ' yyyy')\n        );\n    }\n\n    private compareDaysOfTheSameMonth(): boolean {\n        if (this.startDate.getDate() === this.endDate.getDate()) return true;\n    }\n\n    private formatDateAndAddTime(date: Date, time: Array<number>): Date {\n        date.setHours(time[0], time[1], time[2]);\n\n        return date;\n    }\n}\n","/**\n * @license\n * Copyright Reyesoft All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MatSelectModule, MatFormFieldModule, MatOptionModule, MatButtonModule, MatIconModule, MatTooltipModule } from '@angular/material';\nimport { RangeDatepickerComponent } from './range-datepicker.component';\nimport { SatDatepickerModule, SatNativeDateModule } from 'saturn-datepicker';\n\n@NgModule({\n    imports: [\n        FormsModule,\n        SatNativeDateModule,\n        SatDatepickerModule,\n        ReactiveFormsModule,\n        MatFormFieldModule,\n        MatOptionModule,\n        MatButtonModule,\n        MatSelectModule,\n        MatTooltipModule,\n        MatIconModule,\n        CommonModule\n    ],\n    declarations: [RangeDatepickerComponent],\n    exports: [RangeDatepickerComponent]\n})\nexport class JamRangeDatepickerModule {}\n","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { FabSpeedDialMiniButton } from './fab-speed-dial-mini-button';\n\n@Component({\n    selector: 'jam-fab-speed-dial',\n    template: `<eco-fab-speed-dial\n    class=\"rs-speed-dial--position\"\n    [animationMode]=\"animationMode\"\n    (mouseover)=\"toggleFabStatus('open')\"\n    (mouseleave)=\"toggleFabStatus('close')\"\n    [(open)]=\"fab_status.opened\"\n    [fixed]=\"true\"\n    >\n    <eco-fab-speed-dial-trigger [spin]=\"spin\">\n        <button\n            mat-fab\n            matTooltipPosition=\"before\"\n            [matTooltip]=\"tooltip\"\n            (click)=\"fabSpeedDialClick.emit()\"\n            [routerLink]=\"routerLink || []\"\n            [queryParams]=\"queryParams\"\n            >\n            <mat-icon>{{ fab_status.opened ? icon : 'add' }}</mat-icon>\n        </button>\n    </eco-fab-speed-dial-trigger>\n\n    <eco-fab-speed-dial-actions [hidden]=\"!fab_status.opened\">\n        <button\n            *ngFor=\"let fabSpeedDialMiniButton of fabSpeedDialMiniButtons\"\n            mat-mini-fab\n            matTooltipPosition=\"before\"\n            [matTooltip]=\"fabSpeedDialMiniButton.tooltip\"\n            (click)=\"actionsClick.emit(fabSpeedDialMiniButton.key)\"\n            [routerLink]=\"fabSpeedDialMiniButton.router_link || []\"\n            [queryParams]=\"fabSpeedDialMiniButton.query_params || queryParams\"\n            >\n            <mat-icon *ngIf=\"fabSpeedDialMiniButton.icon.type === 'svg-icon'\" [svgIcon]=\"fabSpeedDialMiniButton.icon.name\"></mat-icon>\n            <mat-icon *ngIf=\"fabSpeedDialMiniButton.icon.type === 'mat-icon'\">{{ fabSpeedDialMiniButton.icon.name }}</mat-icon>\n        </button>\n    </eco-fab-speed-dial-actions>\n</eco-fab-speed-dial>\n`,\n    styles: [``]\n})\nexport class FabSpeedDialComponent implements OnInit {\n\n    @Input() public animationMode: string = 'scale';\n    @Input() public tooltip: string = '';\n    @Input() public spin: boolean = true;\n    @Input() public icon: string = 'add';\n    @Input() public routerLink: Array<string> = [];\n    @Input() public queryParams: {[key: string]: any};\n    @Input() public fabSpeedDialMiniButtons: Array<FabSpeedDialMiniButton> = [];\n\n    @Output() public fabSpeedDialClick: EventEmitter<void> = new EventEmitter();\n    @Output() public actionsClick: EventEmitter<string> = new EventEmitter();\n\n    public fab_status = {\n        opened: false,\n        status: 'closed'\n    };\n\n    public constructor(private activatedRoute: ActivatedRoute) {}\n\n    public ngOnInit() {\n        if (!this.queryParams) {\n            this.queryParams = this.activatedRoute.snapshot.queryParams;\n        }\n    }\n\n    public toggleFabStatus(status) {\n        if (status === 'open') {\n            this.fab_status.status = 'opened';\n            this.fab_status.opened = true;\n        } else {\n            this.fab_status.status = 'closed';\n            setTimeout(() => {\n                if (this.fab_status.status === 'closed') {\n                    this.fab_status.opened = false;\n                }\n            }, 300);\n        }\n    }\n\n}\n","export class FabSpeedDialMiniButton {\n    public key: string;\n    public navigate: boolean = false;\n    public tooltip: string;\n    public router_link: Array<string>;\n    public query_params: {[key: string]: any};\n    public icon: { name: string; type: 'svg-icon'|'mat-icon' } = { name: 'add', type: 'mat-icon' };\n\n    public constructor(\n        key: string,\n        tooltip: string,\n        router_link?: Array<string>,\n        query_params?: {[key: string]: any}\n    ) {\n        this.key = key;\n        this.tooltip = tooltip;\n        if (router_link) {\n            this.router_link = router_link;\n            this.query_params = query_params || {};\n        }\n    }\n\n    public setRouterLink(router_link: Array<string>): this {\n        this.router_link = router_link;\n        this.navigate = true;\n\n        return this;\n    }\n\n    public getRouterLink() {\n        return this.router_link;\n    }\n\n    public setQueryParams(query_params: {[key: string]: any}): this {\n        this.query_params = query_params;\n\n        return this;\n    }\n\n    public getQueryParams(): {[key: string]: any} {\n        return this.query_params;\n    }\n\n    public shouldNavigate() {\n        return this.navigate;\n    }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule } from '@angular/router';\nimport { EcoFabSpeedDialModule } from '@ecodev/fab-speed-dial';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { MatButtonModule } from '@angular/material/button';\nimport { FabSpeedDialComponent } from './fab-speed-dial.component';\n\n@NgModule({\n    imports: [CommonModule, RouterModule, EcoFabSpeedDialModule, MatIconModule, MatTooltipModule, MatButtonModule],\n    declarations: [FabSpeedDialComponent],\n    exports: [FabSpeedDialComponent]\n})\nexport class FabSpeedDialModule {}\n","/***\n * Copyright (C) 1997-2017 Reyesoft <info@reyesoft.com>\n *\n * This file is part of Multinexo. Multinexo can not be copied and/or\n * distributed without the express permission of Reyesoft\n */\n\nimport { Component, Input, Output, EventEmitter, Injectable, OnInit, OnDestroy, ChangeDetectorRef } from '@angular/core';\nimport { Destroyer } from '../destroyer';\nimport { Service, DocumentCollection } from 'ngx-jsonapi';\nimport { Observable , Subject } from 'rxjs';\n\n@Injectable()\nexport class JamRefreshService {\n    public collection_to_refresh = new Subject<DocumentCollection>();\n    public refreshSubject = new Subject<boolean>();\n\n    public refresh(): void {\n        this.refreshSubject.next(true);\n    }\n}\n\n@Component({\n    selector: 'jam-refresh',\n    template: `<button\n    *ngIf=\"collectionToRefresh\"\n    mat-icon-button\n    matTooltip=\"Actualizar\"\n    mat-ink-ripple=\"false\"\n    class=\"mat-icon-button mat-button\"\n    (click)=\"refreshCollection()\"\n    fxLayout=\"row\"\n    fxLayoutAlign=\"center center\"\n    >\n    <mat-icon\n        *ngIf=\"!collectionToRefresh.is_loading\"\n        class=\"material-icons\"\n        >\n        {{ icon || 'refresh' }}\n    </mat-icon>\n    <mat-spinner\n        class=\"material-icons elements-up padding-0 margin-0\"\n        *ngIf=\"collectionToRefresh.is_loading\"\n        color=\"accent\"\n        diameter=\"24\"\n        >\n    </mat-spinner>\n</button>\n`\n})\nexport class RefreshComponent implements OnInit, OnDestroy {\n    @Input() public collectionToRefresh: DocumentCollection;\n    @Input() public serviceToRefresh: Service;\n    @Input() public colorProgressCircular = 'white';\n    @Input() public icon: string;\n    @Output() public reload = new EventEmitter<any>();\n\n    public destroyer = new Destroyer();\n\n    public constructor(public changeDetectorRef: ChangeDetectorRef, public jamRefreshService: JamRefreshService) {}\n\n    public ngOnInit() {\n        if (!this.collectionToRefresh) {\n            this.jamRefreshService.collection_to_refresh.pipe(this.destroyer.pipe()).subscribe((collection: DocumentCollection) => {\n                this.collectionToRefresh = collection;\n                this.changeDetectorRef.detectChanges();\n            });\n        }\n    }\n\n    public ngOnDestroy() {\n        this.destroyer.destroy();\n    }\n\n    public refreshCollection() {\n        this.serviceToRefresh.clearCacheMemory();\n        this.jamRefreshService.refresh();\n    }\n}\n","/**\n * @license\n * Copyright Reyesoft All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RefreshComponent, JamRefreshService } from './refresh.component';\nimport { MatButtonModule, MatTooltipModule, MatIconModule, MatProgressSpinnerModule } from '@angular/material';\nimport { FlexLayoutModule } from '@angular/flex-layout';\n\n@NgModule({\n    imports: [\n        CommonModule,\n        MatProgressSpinnerModule,\n        MatButtonModule,\n        MatTooltipModule,\n        FlexLayoutModule,\n        MatIconModule\n    ],\n    providers: [JamRefreshService],\n    declarations: [RefreshComponent],\n    exports: [RefreshComponent]\n})\nexport class JamRefreshModule {}\n","export class MenuElement {\n    public attributes: {[key: string]: any} = {};\n\n    protected _id: string;\n    public get id(): string { return this._id; }\n\n    public constructor(id?: string) {\n        this._id = id;\n    }\n\n    public setAttributes(attribute: string, value: any): this {\n        this.attributes[attribute] = value;\n\n        return this;\n    }\n\n    public addAttributes(attributes: {[key: string]: any}): this {\n        this.attributes = { ...this.attributes, ...attributes };\n\n        return this;\n    }\n\n    public hide(): this {\n        this.attributes.hidden = true;\n\n        return this;\n    }\n\n    public show(): this {\n        this.attributes.hidden = false;\n\n        return this;\n    }\n\n    public isShown() {\n        return !this.attributes.hidden;\n    }\n\n    public disable(): this {\n        this.attributes.disabled = true;\n\n        return this;\n    }\n\n    public enable(): this {\n        this.attributes.disabled = false;\n\n        return this;\n    }\n}\n\nexport class MenuElementsCollection <T extends MenuElement | MenuElementsCollection<MenuElement>> {\n    public data: Array<MenuElementsCollection<T> | T> = [];\n    public hidden: boolean;\n\n    protected _id: string;\n    public get id(): string { return this._id; }\n\n    public constructor(id?: string) {\n        this._id = id;\n    }\n\n    public hide(): this {\n        this.hidden = true;\n\n        return this;\n    }\n\n    public show(): this {\n        this.hidden = false;\n\n        return this;\n    }\n\n    public isShown() {\n        return !this.hidden;\n    }\n\n    public find(id: string): MenuElementsCollection<T> | T | undefined {\n        return this.data.find(element => {\n            if (this.data.length === 0) {\n                console.log('--------------- no data! ---------------');\n\n                return false;\n            }\n\n            return element.id === id;\n        });\n    }\n\n    public add(data: Array<MenuElementsCollection<T> | T>): this {\n        this.data = this.data.concat(data);\n\n        return this;\n    }\n}\n","import { Section } from './section';\nimport { Button } from './button';\nimport { MenuElementsCollection, MenuElement } from './menu-elements';\n\nexport class Menu extends MenuElementsCollection<Section> {\n    public data: Array<Section> = <Array<Section>>[];\n    public main_image: {url: string; styles?: {[key: string]: string}};\n    public findSection: (arg: string) => Section = <(arg: string) => Section>this.find;\n    public addSections = this.add;\n    public removeEmptySections() {\n        for (let section of this.data) {\n            if (section.hasShownElements()) {\n                return true;\n            }\n        }\n\n        return false;\n    }\n    public setMainImage(image_data: {url: string; styles?: {[key: string]: string}}): Menu {\n        this.main_image = image_data;\n\n        return this;\n    }\n}\n","import { Button } from './button';\nimport { MenuElementsCollection, MenuElement } from './menu-elements';\n\nexport class Section extends MenuElementsCollection<MenuElement> {\n    public findButton: (arg: string) => Button = <(arg: string) => Button>this.find;\n    public addButtons = this.add;\n\n    public hasShownElements() {\n        for (let element of this.data) {\n            if (element.isShown()) {\n                return true;\n            }\n        }\n\n        return false;\n    }\n}\n","import { MenuElement } from './menu-elements';\n\nexport class Button extends MenuElement {\n    public attributes: MenuButtonAttributes = {\n        icon: '',\n        label: '',\n        class: '',\n        disabled: false,\n        hidden: false\n    };\n\n    public setAttributes(\n        attribute: 'label' | 'icon' | 'class' | 'hidden' | 'disabled' | 'svg_icon' | 'icon_font', // TODO: improve typing\n        value: string | boolean\n    ): this {\n        this.attributes[attribute] = value;\n\n        return this;\n    }\n\n    public addAttributes(attributes: MenuButtonAttributes): this {\n        this.attributes = { ...this.attributes, ...attributes };\n\n        return this;\n    }\n}\n\nexport interface MenuButtonAttributes {\n    label: string;\n    icon?: string;\n    class?: string;\n    hidden?: boolean;\n    disabled?: boolean;\n    svg_icon?: string;\n    icon_font?: string;\n}\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { Section } from '../menu-elements/section';\n\n@Component({\n    selector: 'jam-dropdown-menu',\n    styles: [`/deep/ h3{font-size:10pt;margin:16px;font-weight:500}jam-dropdown-menu{display:block}.jam-bottom-sheet{display:none}.disabled{opacity:.5}@media only screen and (max-width:599px){jam-dropdown-menu{display:none}.jam-bottom-sheet{display:block}}`],\n    template: `<button\n    mat-icon-button\n    class=\"mat-icon-button mat-button\"\n    matTooltip=\"MÃ¡s\"\n    fxLayout=\"row\"\n    fxLayoutAlign=\"center center\"\n    [matMenuTriggerFor]=\"menuRef\"\n    >\n    <img\n        *ngIf=\"main_image\"\n        [src]=\"main_image?.url\"\n        [ngStyle]=\"main_image?.styles\"\n        />\n    <mat-icon *ngIf=\"!main_image\">more_vert</mat-icon>\n</button>\n\n<mat-menu #menuRef=\"matMenu\">\n    <ng-container *ngFor=\"let section of sections; let position = index\">\n        <mat-divider *ngIf=\"section.hasShownElements() && !section.hidden && position > 0\"></mat-divider>\n\n        <h3 class=\"mat-hint\" *ngIf=\"section.hasShownElements() && !section.hidden && section.id\">\n            <span [innerHtml]=\"section.id\"></span>\n        </h3>\n\n        <ng-container *ngFor=\"let button of section.data\">\n            <button\n                mat-menu-item\n                *ngIf=\"!button.attributes.hidden\"\n                [disabled]=\"button.attributes.disabled\"\n                [ngClass]=\"button.attributes.class\"\n                (click)=\"selected.emit(button.id)\"\n                >\n                <mat-icon\n                    *ngIf=\"button.attributes.icon\"\n                    [innerHtml]=\"button.attributes.icon\"\n                    >\n                </mat-icon>\n                <mat-icon\n                    *ngIf=\"button.attributes.svg_icon\"\n                    [svgIcon]=\"button.attributes.svg_icon\"\n                    >\n                </mat-icon>\n                <span [innerHtml]=\"button.attributes.label\"></span>\n            </button>\n        </ng-container>\n    </ng-container>\n</mat-menu>\n`\n})\nexport class DropdownMenuComponent {\n    @Input() public sections: Array<Section>;\n    @Input() public main_image: { url: string; styles: {[key: string]: string}};\n    @Output() public selected = new EventEmitter<string>();\n}\n","import { Component, OnInit, Inject } from '@angular/core';\nimport { MAT_BOTTOM_SHEET_DATA, MatBottomSheetRef } from '@angular/material';\n\n@Component({\n    selector: 'jam-bottom-sheet',\n    styles: [`/deep/ h3{font-size:10pt;margin:16px;font-weight:500}jam-dropdown-menu{display:block}.jam-bottom-sheet{display:none}.disabled{opacity:.5}@media only screen and (max-width:599px){jam-dropdown-menu{display:none}.jam-bottom-sheet{display:block}}`],\n    template: `<ng-template matMenuContent>\n    <mat-nav-list>\n        <ng-container *ngFor=\"let section of data.sections; let position = index\">\n            <h3 class=\"mat-hint\" *ngIf=\"!section.hidden || section.id\">\n                <span [innerHtml]=\"section.id\"></span>\n            </h3>\n\n            <ng-container *ngFor=\"let button of section.data\">\n                <mat-list-item *ngIf=\"!button.attributes.hidden\"\n                    [ngClass]=\"button.attributes.class + (button.attributes.disabled ? 'disabled' : null)\"\n                    (click)=\"button.attributes.disabled ? $event.stopPropagation() : selected(button.id)\">\n                    <mat-icon\n                        *ngIf=\"button.attributes.icon || button.attributes.svg_icon\"\n                        [innerHtml]=\"button.attributes.icon\"\n                        [svgIcon]=\"button.attributes.svg_con\"\n                         class=\"mat-hint\"\n                        >\n                    </mat-icon>\n                    <span mat-line [innerHtml]=\"button.attributes.label\"></span>\n                </mat-list-item>\n            </ng-container>\n\n            <mat-divider *ngIf=\"(position + 1) < data.sections.length\"></mat-divider>\n        </ng-container>\n    </mat-nav-list>\n</ng-template>\n`\n})\nexport class BottomSheetComponent {\n    public constructor(\n        @Inject(MAT_BOTTOM_SHEET_DATA) public data: any,\n        private matBottomSheetRef: MatBottomSheetRef<BottomSheetComponent>\n    ) { }\n\n    public close(): void {\n        this.matBottomSheetRef.dismiss();\n    }\n\n    public selected(option: string): void {\n        this.matBottomSheetRef.dismiss(option);\n    }\n}\n","import { Component, Input, Output, EventEmitter, OnDestroy, OnChanges, OnInit } from '@angular/core';\nimport { Menu } from './menu-elements/menu';\nimport { Section } from './menu-elements/section';\nimport { BottomSheetComponent } from './bottom-sheet/bottom-sheet.component';\nimport { MatBottomSheet } from '@angular/material';\nimport { filter } from 'rxjs/operators';\nimport { Destroyer } from '../destroyer';\nimport { Button } from './menu-elements/button';\n\n@Component({\n    selector: 'jam-menu',\n    styles: [`/deep/ h3{font-size:10pt;margin:16px;font-weight:500}jam-dropdown-menu{display:block}.jam-bottom-sheet{display:none}.disabled{opacity:.5}@media only screen and (max-width:599px){jam-dropdown-menu{display:none}.jam-bottom-sheet{display:block}}`],\n    template: `<jam-dropdown-menu\n    [sections]=\"menu.data\"\n    [main_image]=\"menu.main_image\"\n    (selected)=\"selectedOption($event)\"\n></jam-dropdown-menu>\n\n<div class=\"jam-bottom-sheet\">\n    <button\n        mat-icon-button\n        class=\"mat-button mat-icon-button\"\n        matTooltip=\"MÃ¡s\"\n        fxLayout=\"row\"\n        fxLayoutAlign=\"center center\"\n        (click)=\"open()\">\n        <img *ngIf=\"menu.main_image?.url\" [src]=\"menu.main_image?.url\" [ngStyle]=\"menu.main_image?.styles\"/>\n        <mat-icon *ngIf=\"!menu.main_image?.url\">more_vert</mat-icon>\n    </button>\n</div>\n`\n})\nexport class MenuComponent implements OnInit, OnDestroy {\n    @Input() public menu: Menu;\n    @Input() public source_data: Array<any>;\n    @Output() public selected = new EventEmitter<{ key: string; data?: Array<any> }>();\n\n    public destroyer = new Destroyer();\n\n    public constructor(\n        private matBottomSheet: MatBottomSheet\n    ) {}\n\n    public ngOnInit() {\n        if (this.menu.main_image && !this.menu.main_image.styles) {\n            this.menu.main_image.styles = { 'border-radius': '100px', width: '40px', height: '40px' };\n        }\n        this.menu.removeEmptySections();\n    }\n\n    public ngOnDestroy(): void {\n        this.destroyer.destroy();\n    }\n\n    public open() {\n        this.matBottomSheet.open(BottomSheetComponent, {\n            data: { sections: this.menu.data }\n        })\n        .afterDismissed()\n        .pipe(\n            this.destroyer.pipe(),\n            filter(response => ![null, undefined, ''].includes(response))\n        )\n        .subscribe(response => this.selected.emit(this.formatEmission(response)));\n    }\n\n    public selectedOption(selected: string): void {\n        this.selected.emit(this.formatEmission(selected));\n    }\n\n    private formatEmission(response: string) {\n        return { key: response, data: this.source_data || null };\n    }\n}\n","/**\n * @license\n * Copyright Reyesoft All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { MatMenuModule, MatBottomSheetModule, MatTooltipModule, MatIconModule, MatDividerModule, MatListModule } from '@angular/material';\nimport { MenuComponent } from './menu.component';\nimport { DropdownMenuComponent } from './dropdown-menu/dropdown-menu.component';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { BottomSheetComponent } from './bottom-sheet/bottom-sheet.component';\n\n@NgModule({\n    imports: [\n        FlexLayoutModule,\n        MatMenuModule,\n        MatIconModule,\n        MatListModule,\n        MatDividerModule,\n        MatTooltipModule,\n        MatBottomSheetModule,\n        CommonModule\n    ],\n    declarations: [MenuComponent, DropdownMenuComponent, BottomSheetComponent],\n    entryComponents: [BottomSheetComponent],\n    exports: [MenuComponent]\n})\nexport class JamMenuModule {}\n","/** This's component @deprecated */\n\nimport { Component, Input } from '@angular/core';\n\n@Component({\n    selector: 'jam-floating-button',\n    styles: [`a.mat-fab{position:fixed;bottom:24px;right:24px;z-index:333}`],\n    template: `<a\n    mat-fab href\n    *ngIf=\"show || true\"\n    [matTooltip]=\"tooltip\"\n    matTooltipPosition=\"before\"\n    [target]=\"target || '_self'\"\n    [routerLink]=\"rsRouterLink\"\n    [queryParams]=\"rsQueryParams\">\n    <mat-icon style=\"color: white\">{{ iconName ? iconName : 'add' }}</mat-icon>\n</a>\n`\n})\nexport class FloatingButtonComponent {\n    public show: boolean;\n\n    @Input() public rsBackground: string;\n    @Input() public iconName: string;\n    @Input() public tooltip: string;\n    @Input() public target: string;\n    @Input() public rsRouterLink: string;\n    @Input() public rsQueryParams: object;\n}\n","/**\n * @license\n * Copyright Reyesoft All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { MatButtonModule, MatTooltipModule, MatIconModule } from '@angular/material';\nimport { FloatingButtonComponent } from './floating-button.component';\nimport { RouterModule } from '@angular/router';\n\n@NgModule({\n    imports: [\n        CommonModule,\n        MatButtonModule,\n        RouterModule,\n        MatTooltipModule,\n        MatIconModule\n    ],\n    declarations: [FloatingButtonComponent],\n    exports: [FloatingButtonComponent]\n})\nexport class JamFloatingButtonModule {}\n","// @mergeflag los cambios en este componente no deben llegar a 21\nimport { Injectable } from '@angular/core';\nimport { AbstractControl } from '@angular/forms';\nimport { TranslateService } from '@ngx-translate/core';\nimport { FormlyFieldConfig, FormlyTemplateOptions } from '@ngx-formly/core';\nimport { Resource } from 'ngx-jsonapi';\n\nexport class DynamicInput implements FormlyFieldConfig {\n    public readonly model: any;\n    public readonly parent: FormlyFieldConfig;\n\n    public key: string;\n    public id: string;\n    public name: string;\n    public templateOptions: FormlyTemplateOptions;\n    public optionsTypes: Array<string>;\n    public validation: {\n        messages?: {\n            [messageProperties: string]: string | ((error: any, field: FormlyFieldConfig) => string);\n        };\n        show?: boolean;\n        [additionalProperties: string]: any;\n    };\n    public validators: any;\n    public asyncValidators: any;\n    public template: string;\n    public wrappers: Array<string>;\n    public hide: boolean;\n    public hideExpression: boolean | string | ((model: any, formState: any) => boolean);\n    public expressionProperties: { [property: string]: string | ((model: any, formState: any) => boolean) } | any;\n    public formControl: AbstractControl;\n    public className: string;\n    public fieldGroupClassName: string;\n    public fieldGroup: Array<FormlyFieldConfig>;\n    public fieldArray: FormlyFieldConfig;\n    public type: string;\n    public component: any;\n    public focus: boolean;\n    public modelOptions: {\n        debounce?: {\n            default: number;\n        };\n        updateOn?: 'change' | 'blur' | 'submit';\n    };\n\n    // public lifecycle?: FormlyLifeCycleOptions;\n    public defaultValue: any;\n    public parsers: Array<((value: any) => {})>;\n\n    public constructor(key: string) {\n        this.key = this.id = this.name = key;\n    }\n\n    public setFocus() {\n        this.focus = true;\n\n        return this;\n    }\n\n    public required() {\n        this.templateOptions.required = true;\n\n        return this;\n    }\n\n    public fxFlex(value) {\n        this.templateOptions.fxFlex = value;\n\n        return this;\n    }\n\n    public set(property: string, value: any) {\n        this[property] = value;\n\n        return this;\n    }\n\n    public setTemplateOption(property: string, value: any) {\n        this.templateOptions[property] = value;\n\n        return this;\n    }\n\n    public addTemplateOptions(template_options: FormlyTemplateOptions) {\n        this.templateOptions = { ...this.templateOptions, ...template_options };\n\n        return this;\n    }\n\n    public setTranslatedTemplateOptions(translateService: TranslateService) {\n        return this;\n    }\n\n    public load(fieldConfig: FormlyFieldConfig) {\n        for (let key in fieldConfig) {\n            this[key] = fieldConfig[key];\n        }\n\n        return this;\n    }\n}\n\nexport class TextDynamicInput extends DynamicInput implements FormlyFieldConfig {\n    public constructor(public key) {\n        super(key);\n        this.type = 'input';\n        this.templateOptions = {\n            placeholder: key\n        };\n    }\n    public setTranslatedTemplateOptions(translateService: TranslateService) {\n        this.templateOptions.placeholder = translateService.instant(this.key);\n\n        return this;\n    }\n}\n\nexport class NumberDynamicInput extends DynamicInput implements FormlyFieldConfig {\n    public constructor(public key) {\n        super(key);\n        this.type = 'input';\n        this.key = this.id = this.name = key;\n        this.templateOptions = {\n            type: 'number',\n            step: 0.01,\n            min: 0,\n            placeholder: key\n        };\n    }\n    public setTranslatedTemplateOptions(translateService: TranslateService) {\n        this.templateOptions.placeholder = translateService.instant(this.key);\n\n        return this;\n    }\n}\n\nexport class CheckboxDynamicInput extends DynamicInput implements FormlyFieldConfig {\n    public constructor(public key) {\n        super(key);\n        this.type = 'checkbox';\n        this.templateOptions = {\n            indeterminate: false,\n            label: key\n        };\n    }\n    public setTranslatedTemplateOptions(translateService: TranslateService) {\n        this.templateOptions.label = translateService.instant(this.key);\n\n        return this;\n    }\n}\n\nexport class TextareaDynamicInput extends DynamicInput implements FormlyFieldConfig {\n    public constructor(public key) {\n        super(key);\n        this.type = 'textarea';\n        this.templateOptions = {\n            matAutosizeMinRows: 2,\n            matAutosizeMaxRows: 150,\n            label: key\n        };\n    }\n    public setTranslatedTemplateOptions(translateService: TranslateService) {\n        this.templateOptions.placeholder = translateService.instant(this.key);\n        this.templateOptions.label = translateService.instant(this.key);\n\n        return this;\n    }\n}\n\nexport class SelectDynamicInput extends DynamicInput implements FormlyFieldConfig {\n    public constructor(public key) {\n        super(key);\n        this.type = 'select';\n        this.templateOptions = {\n            label: key,\n            options: []\n        };\n    }\n    public setTranslatedTemplateOptions(translateService: TranslateService) {\n        this.templateOptions.label = translateService.instant(this.key);\n\n        return this;\n    }\n\n    public setOptions(options: Array<{ value: any; label: string }>): SelectDynamicInput {\n        this.templateOptions.options = options;\n\n        return this;\n    }\n}\n","import { Component } from '@angular/core';\nimport { FormlyForm } from '@ngx-formly/core';\n\n@Component({\n    selector: 'jam-formly-form-flex',\n    template: `\n      <formly-field *ngFor=\"let field of fields\"\n        [fxFlex]=\"field.templateOptions.fxFlex\"\n        [model]=\"model\" [form]=\"form\"\n        [field]=\"field\"\n        [ngClass]=\"field.className\"\n        [options]=\"options\">\n      </formly-field>\n      <ng-content></ng-content>\n  `\n})\nexport class FormlyFormFlexComponent extends FormlyForm {}\n","/**\n * @license\n * Copyright Reyesoft All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { FormlyModule } from '@ngx-formly/core';\nimport { FormlyMaterialModule } from '@ngx-formly/material';\nimport { FormlyFormFlexComponent } from './formly-form-flex.component';\n\n@NgModule({\n    imports: [\n        CommonModule,\n        FlexLayoutModule,\n        FormlyModule.forRoot(),\n        FormlyMaterialModule\n    ],\n    declarations: [FormlyFormFlexComponent],\n    exports: [FormlyFormFlexComponent]\n})\nexport class JamDynamicFormsModule {}\n","import { Directive, AfterViewInit, Input } from '@angular/core';\nimport { Params, Router, ActivatedRoute } from '@angular/router';\nimport { MatTabGroup } from '@angular/material/tabs';\n\n@Directive({\n  selector: '[jamTabs]'\n})\nexport class JamTabsDirective implements AfterViewInit {\n\n    @Input() public tabNames: {[key: string]: number};\n    @Input() public tabGroup: MatTabGroup;\n    @Input() public defaultTabIndex: number = 0;\n    public selected_tab: number;\n    public query_params: Params;\n\n    public constructor(\n        protected router: Router,\n        protected activatedRoute: ActivatedRoute\n    ) {\n        activatedRoute.queryParams.subscribe(queryParams => this.query_params = queryParams);\n    }\n\n    public ngAfterViewInit() {\n        this.selected_tab = this.tabNames[this.query_params.tab_selected || Object.keys(this.tabNames)[this.defaultTabIndex]];\n        this.tabGroup.selectedIndex = this.selected_tab;\n        this.tabGroup.selectedIndexChange.subscribe(index => this.onTabChange(index));\n    }\n\n    public onTabChange(new_index: number): void {\n        let tab_selected;\n        for (let each in this.tabNames) {\n            if (this.tabNames[each] !== new_index) continue;\n            tab_selected = each;\n        }\n        this.router.navigate([], { queryParams: { ...this.query_params, ...{tab_selected: tab_selected} } });\n    }\n\n}\n","/**\n * @license\n * Copyright Reyesoft All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { MatTabsModule } from '@angular/material/tabs';\nimport { JamTabsDirective } from './tabs.directive';\n\n@NgModule({\n    imports: [\n        MatTabsModule,\n        CommonModule\n    ],\n    declarations: [JamTabsDirective],\n    exports: [JamTabsDirective]\n})\nexport class JamTabsModule {}\n","import { Directive, AfterViewInit, ContentChild, ElementRef, HostListener } from '@angular/core';\nimport { MatExpansionPanel } from '@angular/material';\nimport { Router } from '@angular/router';\n\n@Directive({\n    selector: '[jamExpansionPanelStatus]'\n})\nexport class RemembermeStateDirective implements AfterViewInit {\n    @ContentChild(MatExpansionPanel) public mat_expansion_panel: MatExpansionPanel;\n\n    private mat_expansion_pane_id: string;\n\n    public constructor(\n        private router: Router,\n        private elementRef: ElementRef\n    ) {\n        this.mat_expansion_pane_id = elementRef.nativeElement.id;\n    }\n\n    public ngAfterViewInit() {\n        if (localStorage.getItem(this.mat_expansion_pane_id)) {\n            this.mat_expansion_panel.expanded = localStorage.getItem(this.mat_expansion_pane_id);\n        }\n\n        this.changeExpandedExpansionPanel();\n    }\n\n    @HostListener('click', ['$event'])\n    private onClick(event) {\n        this.updateLocalStoreage();\n    }\n\n    private changeExpandedExpansionPanel(): void {\n        this.updateLocalStoreage();\n    }\n\n    private updateLocalStoreage(): void {\n        localStorage.setItem(this.mat_expansion_pane_id, this.mat_expansion_panel.expanded);\n    }\n}\n","/**\n * @license\n * Copyright Reyesoft All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { MatExpansionModule } from '@angular/material';\nimport { RouterModule } from '@angular/router';\nimport { RemembermeStateDirective } from './remember-state.directive';\n\n@NgModule({\n    imports: [\n        MatExpansionModule,\n        CommonModule,\n        RouterModule\n    ],\n    declarations: [RemembermeStateDirective],\n    exports: [RemembermeStateDirective]\n})\nexport class JamRememberStateModule {}\n","import { Component, Input, Output, EventEmitter } from '@angular/core';\nimport { Router, UrlTree } from '@angular/router';\nimport { Resource } from 'ngx-jsonapi';\n\n@Component({\n    selector: 'jam-floating-input',\n    styles: [`mat-expansion-panel{width:auto;box-shadow:none!important;background:inherit!important;border:0!important}mat-form-field{width:100%}input[type^=number]{text-align:end}`],\n    template: `<div class=\"floating-input\" [ngClass]=\"status ? 'mat-elevation-z1' : ''\">\n    <mat-expansion-panel\n        hideToggle=\"true\"\n        style=\"width: auto; box-shadow: none !important; background: inherit !important; border: 0 !important;\"\n        [disabled]=\"lock\"\n        [expanded]=\"status\"\n        (closed)=\"statusToggle(false)\"\n        (opened)=\"statusToggle(true)\">\n        <mat-expansion-panel-header *ngIf=\"!status\">\n            <mat-panel-title fxLayout=\"row\" [fxLayoutAlign]=\"(horPosition || 'end')\">\n                <ng-content></ng-content>\n            </mat-panel-title>\n        </mat-expansion-panel-header>\n\n        <mat-form-field *ngIf=\"status\">\n            <input matInput id=\"floatingInput\" type=\"number\" step=\"0.001\" name=\"floatingNumber\" aria-label=\"Modificar\"\n                [(ngModel)]=\"entryValue\"\n                (blur)=\"statusToggle(false)\"\n                (ngModelChange)=\"bindingEntryValue(entryValue)\"\n                (keydown)=\"keyPress($event.keyCode)\"\n                (focus)=\"status\">\n        </mat-form-field>\n    </mat-expansion-panel>\n</div>\n`\n})\nexport class FloatingInputComponent {\n    public searchParams: UrlTree;\n    public status: boolean;\n\n    @Input() public entryValue: number;\n    @Input() public resource: Resource;\n    @Input() public horPosition: 'start' | 'end';\n    @Input() public lock: boolean;\n\n    @Output() public entryValueChange = new EventEmitter<number>();\n    @Output() public resourceChange = new EventEmitter<Resource>();\n\n    public constructor(public router: Router) {\n        this.searchParams = router.parseUrl(router.url);\n        this.lock = this.lock || false;\n    }\n\n    public statusToggle(status: boolean): void {\n        if (!this.lock) {\n            this.status = status;\n            setTimeout(() => {\n                if (!status) {\n                    return;\n                }\n\n                this.focusInput();\n            }, 100);\n        }\n    }\n\n    public bindingEntryValue(value: number) {\n        this.entryValueChange.emit(value);\n    }\n\n    public keyPress(keyCode: number) {\n        switch (keyCode) {\n            case 13:\n                this.status = false;\n                break;\n        }\n    }\n\n    private focusInput(): void {\n        let input = document.getElementById('floatingInput');\n        input.focus();\n    }\n}\n","/**\n * @license\n * Copyright Reyesoft All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { MatExpansionModule, MatIconModule, MatButtonModule, MatCardModule, MatFormFieldModule, MatInputModule } from '@angular/material';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { FloatingInputComponent } from './floating-input.component';\nimport { FormsModule } from '@angular/forms';\n\n@NgModule({\n    imports: [\n        FormsModule,\n        MatFormFieldModule,\n        MatExpansionModule,\n        MatInputModule,\n        MatCardModule,\n        MatButtonModule,\n        MatIconModule,\n        FlexLayoutModule,\n        CommonModule\n    ],\n    declarations: [FloatingInputComponent],\n    exports: [FloatingInputComponent]\n})\nexport class JamFloatingInputModule {}\n","/***\n * Copyright (C) 1997-2017 Reyesoft <info@reyesoft.com>\n *\n * This file is part of Multinexo. Multinexo can not be copied and/or\n * distributed without the express permission of Reyesoft\n */\n\nimport { FilterOption } from './filter-option.interface';\nimport { RangeFilterInterface } from './filter-types/range-filter.interface';\nimport { StringFilterInterface } from './filter-types/string-filter.interface';\nimport { NumberFilterInterface } from './filter-types/number-filter.interface';\nimport { DateRangeFilterInterface } from './filter-types/date-range-filter.interface';\n\nexport type ResourceFilter =\n    string|number|Array<string>|object|RangeFilterInterface|StringFilterInterface|NumberFilterInterface|DateRangeFilterInterface;\n\nexport interface Filter {\n    type: 'options' | 'checks' | 'range_date';\n    attribute: string;\n    options: {\n        [jsonvalue: string]: FilterOption;\n    };\n    selected: ResourceFilter;\n    title?: string;\n    loaded?: boolean;\n}\n\nexport class FilterConfig {\n    public type: 'options' | 'checks' | 'range_date';\n    public attribute: string;\n    public options: {\n        [jsonvalue: string]: FilterOption;\n    };\n    public selected: ResourceFilter;\n    public title: string;\n}\n","import { Filter, FilterConfig } from './filter.interface';\nimport { DateRangeFilterInterface } from './filter-types/date-range-filter.interface';\n\nexport interface FilterDateRange extends Filter {\n    type: 'range_date';\n    selected: DateRangeFilterInterface;\n}\n\nexport class JsonapiFilterRangedateConfig extends FilterConfig implements FilterDateRange {\n    public type: 'range_date';\n    public attribute = 'date';\n    public options = {};\n    public selected = { since: '', until: '' };\n\n    public setProperty(property_name, property_value) {\n        this[property_name] = property_value;\n\n        return this;\n    }\n}\n","/***\n * Copyright (C) 1997-2017 Reyesoft <info@reyesoft.com>\n *\n * This file is part of Multinexo. Multinexo can not be copied and/or\n * distributed without the express permission of Reyesoft\n */\n\nimport { Component, Input, OnInit, EventEmitter, Output } from '@angular/core';\nimport { Filter } from '../interfaces/filter.interface';\nimport { FilterOption } from '../interfaces/filter-option.interface';\n\n@Component({\n    selector: 'jam-filter-options',\n    template: `<mat-form-field color=\"primary\" floatLabel=\"never\">\n    <mat-select\n        [(ngModel)]=\"filterConfig.selected\"\n        [placeholder]=\"filterConfig.title\">\n        <mat-option *ngFor=\"let config of filterConfigArray\"\n            [value]=\"config.text.key\"\n            (click)=\"optionSelected(config, filterConfig.selected)\">{{ config.text.name }}\n        </mat-option>\n    </mat-select>\n</mat-form-field>\n`\n})\nexport class JamFilterOptionsComponent implements OnInit {\n    @Input() public filterConfig: Filter;\n    @Input() public remoteFilter: object;\n    @Output() public remoteFilterChange = new EventEmitter<any>();\n\n    public filterConfigArray: Array<FilterOption>;\n\n    public ngOnInit() {\n        this.filterConfigArray = Object.keys(this.filterConfig.options).map(key => {\n            this.filterConfig.options[key].text = { key: key, name: this.filterConfig.options[key].text };\n\n            return this.filterConfig.options[key];\n        });\n    }\n\n    public optionSelected(jsonvalue, filter_list): void {\n        this.remoteFilter[this.filterConfig.attribute] = filter_list.toString();\n        this.remoteFilterChange.emit(this.remoteFilter);\n    }\n}\n","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { FilterChecks } from '../interfaces/filter-checks.interface';\nimport { FilterOption } from '../interfaces/filter-option.interface';\n\nexport interface IOption {\n    key: string;\n    name: string;\n}\n\n@Component({\n    selector: 'jam-filter-checks',\n    template: `<mat-form-field color=\"primary\" floatLabel=\"never\">\n    <mat-select\n        multiple\n        [(ngModel)]=\"filterConfig.selected\"\n        (focus)=\"filterConfigOptionsUpdate()\"\n        [placeholder]=\"filterConfig.title\">\n        <div mat-menu-item class=\"focus-element-4dp reset-input-default\"\n            *ngIf=\"filter_config_options.length > 10\"\n            fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"10\"\n            (click)=\"$event.stopPropagation()\">\n            <mat-icon>search</mat-icon>\n            <input fxFlex class=\"rs-input\" tabindex=\"1\" autofocus placeholder=\"Buscar\"\n                [(ngModel)]=\"searchText\">\n            <div style=\"height: 24px; width: 24px\" fxLayout=\"row\" fxLayoutAlign=\"start center\">\n                <mat-icon *ngIf=\"searchText\" (click)=\"searchText = ''\">clear</mat-icon>\n            </div>\n        </div>\n        <mat-divider></mat-divider>\n        <mat-option *ngFor=\"let option of filter_config_options | filter: searchText\"\n            [value]=\"option.text.key\"\n            (click)=\"optionSelected(option, filterConfig.selected)\">{{ option.text.name }}\n        </mat-option>\n    </mat-select>\n</mat-form-field>\n`\n})\nexport class JamFilterChecksComponent implements OnInit {\n    @Input() public filterConfig: FilterChecks;\n    @Input() public remoteFilter: object;\n\n    @Output() public filterConfigChange = new EventEmitter<any>();\n    @Output() public remoteFilterChange = new EventEmitter<any>();\n\n    public filter_config_options: Array<FilterOption>;\n\n    public searchText: string = '';\n    public show_input_search: boolean = false;\n\n    public ngOnInit() {\n        if (this.filterConfig.selected.length !== 0) {\n            this.remoteFilter[this.filterConfig.attribute] = this.filterConfig.selected;\n        }\n        this.filterConfigOptionsUpdate();\n\n        this.filter_config_options = this.filter_config_options.sort(\n            (a, b) => (<IOption>a.text).name.localeCompare((<IOption>b.text).name)\n        );\n\n        this.showInputSearch();\n    }\n\n    public showInputSearch() {\n        if (Object.keys(this.filterConfig.options).length > 10) {\n            this.show_input_search = true;\n        }\n    }\n\n    public filterConfigOptionsUpdate() {\n        this.filter_config_options = Object.keys(this.filterConfig.options).map(key => {\n            if (typeof this.filterConfig.options[key].text === 'string') {\n                this.filterConfig.options[key].text = { key: key, name: this.filterConfig.options[key].text };\n            }\n\n            return this.filterConfig.options[key];\n        });\n    }\n\n    public clearSelected() {\n        this.filterConfig.selected = [];\n    }\n\n    public optionSelected(jsonvalue, filter_list): void {\n        this.remoteFilter[this.filterConfig.attribute] = filter_list.toString();\n        this.remoteFilterChange.emit(this.remoteFilter);\n    }\n}\n","/**\n * @license\n * Copyright Reyesoft All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { MatFormFieldModule, MatSelectModule, MatIconModule, MatInputModule, MatDividerModule, MatOptionModule } from '@angular/material';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { JamFilterChecksComponent } from './basics/filter-checks.component';\nimport { JamFilterOptionsComponent } from './basics/filter-options.component';\nimport { FilterPipe } from '../search-input/search-text.pipe';\nimport { FormsModule } from '@angular/forms';\nimport { JamSearchInputModule } from '../search-input/search-input.module';\n\n@NgModule({\n    imports: [\n        FormsModule,\n        CommonModule,\n        MatIconModule,\n        MatInputModule,\n        MatOptionModule,\n        MatSelectModule,\n        MatDividerModule,\n        FlexLayoutModule,\n        MatFormFieldModule,\n        JamSearchInputModule\n    ],\n    providers: [FilterPipe],\n    declarations: [JamFilterChecksComponent, JamFilterOptionsComponent],\n    exports: [JamFilterChecksComponent, JamFilterOptionsComponent]\n})\nexport class JamFilterModule {}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport { Directive } from '@angular/core';\nimport { CdkPortal } from '@angular/cdk/portal';\n\n// tslint:disable: interface-name use-input-property-decorator use-host-property-decorator directive-selector\n\n/** Used to flag slide labels for use with the portal directive */\n@Directive({\n  selector: '[jam-slide-element], [jamSlideElement]'\n})\nexport class JamSlideElement extends CdkPortal {}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport { TemplatePortal } from '@angular/cdk/portal';\nimport {\n  ChangeDetectionStrategy,\n  Component,\n  ContentChild,\n  Input,\n  OnChanges,\n  OnDestroy,\n  OnInit,\n  SimpleChanges,\n  TemplateRef,\n  ViewChild,\n  ViewContainerRef,\n  ViewEncapsulation\n} from '@angular/core';\nimport { CanDisable, CanDisableCtor, mixinDisabled } from '@angular/material/core';\nimport { Subject } from 'rxjs';\n// import {JamSlideContent} from './slide-content';\nimport { JamSlideElement } from './slide-element';\n\n// tslint:disable: interface-name use-input-property-decorator use-host-property-decorator component-selector no-input-rename\n\n// Boilerplate for applying mixins to JamSlide.\n/** @docs-private */\nexport class JamSlideBase {}\nexport const _JamSlideMixinBase: CanDisableCtor & typeof JamSlideBase =\n    mixinDisabled(JamSlideBase);\n\n@Component({\n  selector: 'jam-slide',\n  template: `<!-- Create a template for the content of the <jam-slide> so that we can grab a reference to this\n    TemplateRef and use it in a Portal to render the slide content in the appropriate place in the\n    slide-group. -->\n<ng-template><ng-content></ng-content></ng-template>\n`,\n  inputs: ['disabled'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n  exportAs: 'jamSlide'\n})\nexport class JamSlide extends _JamSlideMixinBase implements OnInit, CanDisable, OnChanges, OnDestroy {\n  /** Content for the slide element given by `<ng-template jam-slide-element>`. */\n  @ContentChild(JamSlideElement) public templateLabel: JamSlideElement;\n\n  /**\n   * Template provided in the slide content that will be used if present, used to enable lazy-loading\n   */\n  /** Plain text element for the slide, used when there is no template label. */\n  @Input('label') public textLabel: string = '';\n\n  /** Aria element for the slide. */\n  @Input('aria-label') public ariaLabel: string;\n\n  /**\n   * Reference to the element that the slide is labelled by.\n   * Will be cleared if `aria-label` is set at the same time.\n   */\n  @Input('aria-labelledby') public ariaLabelledby: string;\n\n  /** @docs-private */\n  public get content(): TemplatePortal | null {\n    return this._contentPortal;\n  }\n\n  /** Emits whenever the internal state of the slide changes. */\n  public readonly _stateChanges = new Subject<void>();\n\n  /**\n   * The relatively indexed position where 0 represents the center, negative is left, and positive\n   * represents the right.\n   */\n  public position: number | null = null;\n\n  /**\n   * The initial relatively index origin of the slide if it was created and selected after there\n   * was already a selected slide. Provides context of what position the slide should originate from.\n   */\n  public origin: number | null = null;\n\n  /**\n   * Whether the slide is currently active.\n   */\n  public isActive = false;\n\n  /** Portal that will be the hosted content of the slide */\n  protected _contentPortal: TemplatePortal | null = null;\n\n  // @ContentChild(JamSlideContent, {read: TemplateRef, static: true})\n  protected _explicitContent: TemplateRef<any>;\n\n  /** Template inside the JamSlide view that contains an `<ng-content>`. */\n  @ViewChild(TemplateRef) protected _implicitContent: TemplateRef<any>;\n\n  public constructor(private _viewContainerRef: ViewContainerRef) {\n    super();\n  }\n\n  public ngOnChanges(changes: SimpleChanges): void {\n    if (changes.hasOwnProperty('textLabel') || changes.hasOwnProperty('disabled')) {\n      this._stateChanges.next();\n    }\n  }\n\n  public ngOnDestroy(): void {\n    this._stateChanges.complete();\n  }\n\n  public ngOnInit(): void {\n    this._contentPortal = new TemplatePortal(\n        this._explicitContent || this._implicitContent, this._viewContainerRef);\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport { coerceBooleanProperty, coerceNumberProperty } from '@angular/cdk/coercion';\nimport {\n  AfterContentChecked,\n  AfterContentInit,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ContentChildren,\n  ElementRef,\n  EventEmitter,\n  Input,\n  OnDestroy,\n  Output,\n  QueryList,\n  ViewChild,\n  ViewEncapsulation,\n  InjectionToken,\n  Inject,\n  Optional\n} from '@angular/core';\nimport {\n  CanColor,\n  CanColorCtor,\n  CanDisableRipple,\n  CanDisableRippleCtor,\n  mixinColor,\n  mixinDisableRipple,\n  ThemePalette\n} from '@angular/material/core';\nimport { merge, Subscription } from 'rxjs';\nimport { JamSlide } from './slide';\nimport { JamSlideHeader } from './slide-header';\n\n// tslint:disable: interface-name use-input-property-decorator use-host-property-decorator component-selector\n\n/** Used to generate unique ID's for each slide component */\nlet nextId = 0;\n\n/** A simple change event emitted on focus or selection changes. */\nexport class JamSlideChangeEvent {\n  /** Index of the currently-selected slide. */\n  public index: number;\n  /** Reference to the currently-selected slide. */\n  public slide: JamSlide;\n}\n\n/** Possible positions for the slide header. */\nexport type JamSlideHeaderPosition = 'above' | 'below';\n\n/** Object that can be used to configure the default options for the slides module. */\nexport interface JamSlidesConfig {\n  /** Duration for the slide animation. Must be a valid CSS value (e.g. 600ms). */\n  animationDuration?: string;\n}\n\n/** Injection token that can be used to provide the default options the slides module. */\nexport const MAT_TABS_CONFIG: InjectionToken<any> = new InjectionToken('MAT_TABS_CONFIG');\n\n// Boilerplate for applying mixins to JamSlideGroup.\n/** @docs-private */\nexport class JamSlideGroupBase {\n  public constructor(public _elementRef: ElementRef) {}\n}\nexport const _JamSlideGroupMixinBase: CanColorCtor & CanDisableRippleCtor & typeof JamSlideGroupBase =\n    mixinColor(mixinDisableRipple(JamSlideGroupBase), 'primary');\n\n/**\n * Material design slide-group component.  Supports basic slide pairs (label + content) and includes\n * animated ink-bar, keyboard navigation, and screen reader.\n * See: https://material.io/design/components/slides.html\n */\n@Component({\n  selector: 'jam-slide-group',\n  exportAs: 'jamSlideGroup',\n  template: `<jam-slide-header #slideHeader\n               [selectedIndex]=\"selectedIndex\"\n               [disableRipple]=\"disableRipple\"\n               (indexFocused)=\"_focusChanged($event)\"\n               (selectFocusedIndex)=\"selectedIndex = $event\">\n  <div class=\"jam-slide-element\" role=\"slide\" jamSlideElementWrapper mat-ripple cdkMonitorElementFocus\n       *ngFor=\"let slide of _slides; let i = index\"\n       [id]=\"_getTabLabelId(i)\"\n       [attr.tabIndex]=\"_getTabIndex(slide, i)\"\n       [attr.aria-posinset]=\"i + 1\"\n       [attr.aria-setsize]=\"_slides.length\"\n       [attr.aria-controls]=\"_getTabContentId(i)\"\n       [attr.aria-selected]=\"selectedIndex == i\"\n       [attr.aria-label]=\"slide.ariaLabel || null\"\n       [attr.aria-labelledby]=\"(!slide.ariaLabel && slide.ariaLabelledby) ? slide.ariaLabelledby : null\"\n       [class.jam-slide-element-active]=\"selectedIndex == i\"\n       [disabled]=\"slide.disabled\"\n       [matRippleDisabled]=\"slide.disabled || disableRipple\"\n       (click)=\"_handleClick(slide, slideHeader, i)\">\n\n\n    <div class=\"jam-slide-element-content\">\n      <!-- If there is a element template, use it. -->\n      <ng-template [ngIf]=\"slide.templateLabel\">\n        <ng-template [cdkPortalOutlet]=\"slide.templateLabel\"></ng-template>\n      </ng-template>\n\n      <!-- If there is not a element template, fall back to the text label. -->\n      <ng-template [ngIf]=\"!slide.templateLabel\">{{slide.textLabel}}</ng-template>\n    </div>\n  </div>\n</jam-slide-header>\n\n<!-- <div class=\"jam-slide-body-wrapper\" #slideBodyWrapper>\n  <jam-slide-body role=\"slidepanel\"\n               *ngFor=\"let slide of _slides; let i = index\"\n               [id]=\"_getTabContentId(i)\"\n               [attr.aria-labelledby]=\"_getTabLabelId(i)\"\n               [class.jam-slide-body-active]=\"selectedIndex == i\"\n               [content]=\"slide.content\"\n               [position]=\"slide.position\"\n               [origin]=\"slide.origin\"\n               [animationDuration]=\"animationDuration\"\n               (_onCentered)=\"_removeTabBodyWrapperHeight()\"\n               (_onCentering)=\"_setTabBodyWrapperHeight($event)\">\n  </jam-slide-body>\n</div> -->\n`,\n  styles: [`@-webkit-keyframes cdk-text-field-autofill-start{/*!*/}@-webkit-keyframes cdk-text-field-autofill-end{/*!*/}.mat-badge-content{font-weight:600;font-size:12px;font-family:Roboto,\"Helvetica Neue\",sans-serif}.mat-badge-small .mat-badge-content{font-size:6px}.mat-badge-large .mat-badge-content{font-size:24px}.mat-h1,.mat-headline,.mat-typography h1{font:400 24px/32px Roboto,\"Helvetica Neue\",sans-serif;margin:0 0 16px}.mat-h2,.mat-title,.mat-typography h2{font:500 20px/32px Roboto,\"Helvetica Neue\",sans-serif;margin:0 0 16px}.mat-h3,.mat-subheading-2,.mat-typography h3{font:400 16px/28px Roboto,\"Helvetica Neue\",sans-serif;margin:0 0 16px}.mat-h4,.mat-subheading-1,.mat-typography h4{font:400 15px/24px Roboto,\"Helvetica Neue\",sans-serif;margin:0 0 16px}.mat-h5,.mat-typography h5{font:400 11.62px/20px Roboto,\"Helvetica Neue\",sans-serif;margin:0 0 12px}.mat-h6,.mat-typography h6{font:400 9.38px/20px Roboto,\"Helvetica Neue\",sans-serif;margin:0 0 12px}.mat-body-2,.mat-body-strong{font:500 14px/24px Roboto,\"Helvetica Neue\",sans-serif}.mat-body,.mat-body-1,.mat-typography{font:400 14px/20px Roboto,\"Helvetica Neue\",sans-serif}.mat-body p,.mat-body-1 p,.mat-typography p{margin:0 0 12px}.mat-caption,.mat-small{font:400 12px/20px Roboto,\"Helvetica Neue\",sans-serif}.mat-display-4,.mat-typography .mat-display-4{font:300 112px/112px Roboto,\"Helvetica Neue\",sans-serif;margin:0 0 56px;letter-spacing:-.05em}.mat-display-3,.mat-typography .mat-display-3{font:400 56px/56px Roboto,\"Helvetica Neue\",sans-serif;margin:0 0 64px;letter-spacing:-.02em}.mat-display-2,.mat-typography .mat-display-2{font:400 45px/48px Roboto,\"Helvetica Neue\",sans-serif;margin:0 0 64px;letter-spacing:-.005em}.mat-display-1,.mat-typography .mat-display-1{font:400 34px/40px Roboto,\"Helvetica Neue\",sans-serif;margin:0 0 64px}.mat-bottom-sheet-container{font:400 14px/20px Roboto,\"Helvetica Neue\",sans-serif}.mat-button,.mat-fab,.mat-flat-button,.mat-icon-button,.mat-mini-fab,.mat-raised-button,.mat-stroked-button{font-family:Roboto,\"Helvetica Neue\",sans-serif;font-size:14px;font-weight:500}.mat-button-toggle,.mat-card{font-family:Roboto,\"Helvetica Neue\",sans-serif}.mat-card-title{font-size:24px;font-weight:500}.mat-card-header .mat-card-title{font-size:20px}.mat-card-content,.mat-card-subtitle{font-size:14px}.mat-checkbox{font-family:Roboto,\"Helvetica Neue\",sans-serif}.mat-checkbox-layout .mat-checkbox-label{line-height:24px}.mat-chip{font-size:14px;font-weight:500}.mat-chip .mat-chip-remove.mat-icon,.mat-chip .mat-chip-trailing-icon.mat-icon{font-size:18px}.mat-table{font-family:Roboto,\"Helvetica Neue\",sans-serif}.mat-header-cell{font-size:12px;font-weight:500}.mat-cell,.mat-footer-cell{font-size:14px}.mat-calendar{font-family:Roboto,\"Helvetica Neue\",sans-serif}.mat-calendar-body{font-size:13px}.mat-calendar-body-label,.mat-calendar-period-button{font-size:14px;font-weight:500}.mat-calendar-table-header th{font-size:11px;font-weight:400}.mat-dialog-title{font:500 20px/32px Roboto,\"Helvetica Neue\",sans-serif}.mat-expansion-panel-header{font-family:Roboto,\"Helvetica Neue\",sans-serif;font-size:15px;font-weight:400}.mat-expansion-panel-content{font:400 14px/20px Roboto,\"Helvetica Neue\",sans-serif}.mat-form-field{font-size:inherit;font-weight:400;line-height:1.125;font-family:Roboto,\"Helvetica Neue\",sans-serif}.mat-form-field-wrapper{padding-bottom:1.34375em}.mat-form-field-prefix .mat-icon,.mat-form-field-suffix .mat-icon{font-size:150%;line-height:1.125}.mat-form-field-prefix .mat-icon-button,.mat-form-field-suffix .mat-icon-button{height:1.5em;width:1.5em}.mat-form-field-prefix .mat-icon-button .mat-icon,.mat-form-field-suffix .mat-icon-button .mat-icon{height:1.125em;line-height:1.125}.mat-form-field-infix{padding:.5em 0;border-top:.84375em solid transparent}.mat-form-field-can-float .mat-input-server:focus+.mat-form-field-label-wrapper .mat-form-field-label,.mat-form-field-can-float.mat-form-field-should-float .mat-form-field-label{-webkit-transform:translateY(-1.34375em) scale(.75);transform:translateY(-1.34375em) scale(.75);width:133.33333%}.mat-form-field-can-float .mat-input-server[label]:not(:label-shown)+.mat-form-field-label-wrapper .mat-form-field-label{-webkit-transform:translateY(-1.34374em) scale(.75);transform:translateY(-1.34374em) scale(.75);width:133.33334%}.mat-form-field-label-wrapper{top:-.84375em;padding-top:.84375em}.mat-form-field-label{top:1.34375em}.mat-form-field-underline{bottom:1.34375em}.mat-form-field-subscript-wrapper{font-size:75%;margin-top:.66667em;top:calc(100% - 1.79167em)}.mat-form-field-appearance-legacy .mat-form-field-wrapper{padding-bottom:1.25em}.mat-form-field-appearance-legacy .mat-form-field-infix{padding:.4375em 0}.mat-form-field-appearance-legacy.mat-form-field-can-float .mat-input-server:focus+.mat-form-field-label-wrapper .mat-form-field-label,.mat-form-field-appearance-legacy.mat-form-field-can-float.mat-form-field-should-float .mat-form-field-label{-webkit-transform:translateY(-1.28125em) scale(.75) perspective(100px) translateZ(.001px);transform:translateY(-1.28125em) scale(.75) perspective(100px) translateZ(.001px);-ms-transform:translateY(-1.28125em) scale(.75);width:133.33333%}.mat-form-field-appearance-legacy.mat-form-field-can-float .mat-form-field-autofill-control:-webkit-autofill+.mat-form-field-label-wrapper .mat-form-field-label{-webkit-transform:translateY(-1.28125em) scale(.75) perspective(100px) translateZ(.00101px);transform:translateY(-1.28125em) scale(.75) perspective(100px) translateZ(.00101px);-ms-transform:translateY(-1.28124em) scale(.75);width:133.33334%}.mat-form-field-appearance-legacy.mat-form-field-can-float .mat-input-server[label]:not(:label-shown)+.mat-form-field-label-wrapper .mat-form-field-label{-webkit-transform:translateY(-1.28125em) scale(.75) perspective(100px) translateZ(.00102px);transform:translateY(-1.28125em) scale(.75) perspective(100px) translateZ(.00102px);-ms-transform:translateY(-1.28123em) scale(.75);width:133.33335%}.mat-form-field-appearance-legacy .mat-form-field-label{top:1.28125em}.mat-form-field-appearance-legacy .mat-form-field-underline{bottom:1.25em}.mat-form-field-appearance-legacy .mat-form-field-subscript-wrapper{margin-top:.54167em;top:calc(100% - 1.66667em)}@media print{.mat-form-field-appearance-legacy.mat-form-field-can-float .mat-input-server:focus+.mat-form-field-label-wrapper .mat-form-field-label,.mat-form-field-appearance-legacy.mat-form-field-can-float.mat-form-field-should-float .mat-form-field-label{-webkit-transform:translateY(-1.28122em) scale(.75);transform:translateY(-1.28122em) scale(.75)}.mat-form-field-appearance-legacy.mat-form-field-can-float .mat-form-field-autofill-control:-webkit-autofill+.mat-form-field-label-wrapper .mat-form-field-label{-webkit-transform:translateY(-1.28121em) scale(.75);transform:translateY(-1.28121em) scale(.75)}.mat-form-field-appearance-legacy.mat-form-field-can-float .mat-input-server[label]:not(:label-shown)+.mat-form-field-label-wrapper .mat-form-field-label{-webkit-transform:translateY(-1.2812em) scale(.75);transform:translateY(-1.2812em) scale(.75)}}.mat-form-field-appearance-fill .mat-form-field-infix{padding:.25em 0 .75em}.mat-form-field-appearance-fill .mat-form-field-label{top:1.09375em;margin-top:-.5em}.mat-form-field-appearance-fill.mat-form-field-can-float .mat-input-server:focus+.mat-form-field-label-wrapper .mat-form-field-label,.mat-form-field-appearance-fill.mat-form-field-can-float.mat-form-field-should-float .mat-form-field-label{-webkit-transform:translateY(-.59375em) scale(.75);transform:translateY(-.59375em) scale(.75);width:133.33333%}.mat-form-field-appearance-fill.mat-form-field-can-float .mat-input-server[label]:not(:label-shown)+.mat-form-field-label-wrapper .mat-form-field-label{-webkit-transform:translateY(-.59374em) scale(.75);transform:translateY(-.59374em) scale(.75);width:133.33334%}.mat-form-field-appearance-outline .mat-form-field-infix{padding:1em 0}.mat-form-field-appearance-outline .mat-form-field-label{top:1.84375em;margin-top:-.25em}.mat-form-field-appearance-outline.mat-form-field-can-float .mat-input-server:focus+.mat-form-field-label-wrapper .mat-form-field-label,.mat-form-field-appearance-outline.mat-form-field-can-float.mat-form-field-should-float .mat-form-field-label{-webkit-transform:translateY(-1.59375em) scale(.75);transform:translateY(-1.59375em) scale(.75);width:133.33333%}.mat-form-field-appearance-outline.mat-form-field-can-float .mat-input-server[label]:not(:label-shown)+.mat-form-field-label-wrapper .mat-form-field-label{-webkit-transform:translateY(-1.59374em) scale(.75);transform:translateY(-1.59374em) scale(.75);width:133.33334%}.mat-grid-tile-footer,.mat-grid-tile-header{font-size:14px}.mat-grid-tile-footer .mat-line,.mat-grid-tile-header .mat-line{white-space:nowrap;overflow:hidden;text-overflow:ellipsis;display:block;box-sizing:border-box}.mat-grid-tile-footer .mat-line:nth-child(n+2),.mat-grid-tile-header .mat-line:nth-child(n+2){font-size:12px}input.mat-input-element{margin-top:-.0625em}.mat-menu-item{font-family:Roboto,\"Helvetica Neue\",sans-serif;font-size:14px;font-weight:400}.mat-paginator,.mat-paginator-page-size .mat-select-trigger{font-family:Roboto,\"Helvetica Neue\",sans-serif;font-size:12px}.mat-radio-button,.mat-select{font-family:Roboto,\"Helvetica Neue\",sans-serif}.mat-select-trigger{height:1.125em}.mat-slide-toggle-content{font-family:Roboto,\"Helvetica Neue\",sans-serif}.mat-slider-thumb-label-text{font-family:Roboto,\"Helvetica Neue\",sans-serif;font-size:12px;font-weight:500}.mat-stepper-horizontal,.mat-stepper-vertical{font-family:Roboto,\"Helvetica Neue\",sans-serif}.mat-step-label{font-size:14px;font-weight:400}.mat-step-sub-label-error{font-weight:400}.mat-step-label-error{font-size:14px}.mat-step-label-selected{font-size:14px;font-weight:500}.mat-tab-group{font-family:Roboto,\"Helvetica Neue\",sans-serif}.mat-tab-label,.mat-tab-link{font-family:Roboto,\"Helvetica Neue\",sans-serif;font-size:14px;font-weight:500}.mat-toolbar,.mat-toolbar h1,.mat-toolbar h2,.mat-toolbar h3,.mat-toolbar h4,.mat-toolbar h5,.mat-toolbar h6{font:500 20px/32px Roboto,\"Helvetica Neue\",sans-serif;margin:0}.mat-tooltip{font-family:Roboto,\"Helvetica Neue\",sans-serif;font-size:10px;padding-top:6px;padding-bottom:6px}.mat-tooltip-handset{font-size:14px;padding-top:8px;padding-bottom:8px}.mat-list-item,.mat-list-option{font-family:Roboto,\"Helvetica Neue\",sans-serif}.mat-list-base .mat-list-item{font-size:16px}.mat-list-base .mat-list-item .mat-line{white-space:nowrap;overflow:hidden;text-overflow:ellipsis;display:block;box-sizing:border-box}.mat-list-base .mat-list-item .mat-line:nth-child(n+2){font-size:14px}.mat-list-base .mat-list-option{font-size:16px}.mat-list-base .mat-list-option .mat-line{white-space:nowrap;overflow:hidden;text-overflow:ellipsis;display:block;box-sizing:border-box}.mat-list-base .mat-list-option .mat-line:nth-child(n+2){font-size:14px}.mat-list-base .mat-subheader{font-family:Roboto,\"Helvetica Neue\",sans-serif;font-size:14px;font-weight:500}.mat-list-base[dense] .mat-list-item{font-size:12px}.mat-list-base[dense] .mat-list-item .mat-line{white-space:nowrap;overflow:hidden;text-overflow:ellipsis;display:block;box-sizing:border-box}.mat-list-base[dense] .mat-list-item .mat-line:nth-child(n+2),.mat-list-base[dense] .mat-list-option{font-size:12px}.mat-list-base[dense] .mat-list-option .mat-line{white-space:nowrap;overflow:hidden;text-overflow:ellipsis;display:block;box-sizing:border-box}.mat-list-base[dense] .mat-list-option .mat-line:nth-child(n+2){font-size:12px}.mat-list-base[dense] .mat-subheader{font-family:Roboto,\"Helvetica Neue\",sans-serif;font-size:12px;font-weight:500}.mat-option{font-family:Roboto,\"Helvetica Neue\",sans-serif;font-size:16px}.mat-optgroup-label{font:500 14px/24px Roboto,\"Helvetica Neue\",sans-serif}.mat-simple-snackbar{font-family:Roboto,\"Helvetica Neue\",sans-serif;font-size:14px}.mat-simple-snackbar-action{line-height:1;font-family:inherit;font-size:inherit;font-weight:500}.mat-tree{font-family:Roboto,\"Helvetica Neue\",sans-serif}.mat-nested-tree-node,.mat-tree-node{font-weight:400;font-size:14px}.mat-ripple{overflow:hidden;position:relative}.mat-ripple.mat-ripple-unbounded{overflow:visible}.mat-ripple-element{position:absolute;border-radius:50%;pointer-events:none;-webkit-transition:opacity,-webkit-transform cubic-bezier(0,0,.2,1);transition:opacity,transform cubic-bezier(0,0,.2,1),-webkit-transform cubic-bezier(0,0,.2,1);-webkit-transform:scale(0);transform:scale(0)}@media (-ms-high-contrast:active){.mat-ripple-element{display:none}}.cdk-visually-hidden{border:0;clip:rect(0 0 0 0);height:1px;margin:-1px;overflow:hidden;padding:0;position:absolute;width:1px;outline:0;-webkit-appearance:none;-moz-appearance:none}.cdk-global-overlay-wrapper,.cdk-overlay-container{pointer-events:none;top:0;left:0;height:100%;width:100%}.cdk-overlay-container{position:fixed;z-index:1000}.cdk-overlay-container:empty{display:none}.cdk-global-overlay-wrapper{display:-webkit-box;display:flex;position:absolute;z-index:1000}.cdk-overlay-pane{position:absolute;pointer-events:auto;box-sizing:border-box;z-index:1000;display:-webkit-box;display:flex;max-width:100%;max-height:100%}.cdk-overlay-backdrop{position:absolute;top:0;bottom:0;left:0;right:0;z-index:1000;pointer-events:auto;-webkit-tap-highlight-color:transparent;-webkit-transition:opacity .4s cubic-bezier(.25,.8,.25,1);transition:opacity .4s cubic-bezier(.25,.8,.25,1);opacity:0}.cdk-overlay-backdrop.cdk-overlay-backdrop-showing{opacity:1}@media screen and (-ms-high-contrast:active){.cdk-overlay-backdrop.cdk-overlay-backdrop-showing{opacity:.6}}.cdk-overlay-dark-backdrop{background:rgba(0,0,0,.32)}.cdk-overlay-transparent-backdrop,.cdk-overlay-transparent-backdrop.cdk-overlay-backdrop-showing{opacity:0}.cdk-overlay-connected-position-bounding-box{position:absolute;z-index:1000;display:-webkit-box;display:flex;-webkit-box-orient:vertical;-webkit-box-direction:normal;flex-direction:column;min-width:1px;min-height:1px}.cdk-global-scrollblock{position:fixed;width:100%;overflow-y:scroll}@keyframes cdk-text-field-autofill-start{/*!*/}@keyframes cdk-text-field-autofill-end{/*!*/}.cdk-text-field-autofill-monitored:-webkit-autofill{-webkit-animation-name:cdk-text-field-autofill-start;animation-name:cdk-text-field-autofill-start}.cdk-text-field-autofill-monitored:not(:-webkit-autofill){-webkit-animation-name:cdk-text-field-autofill-end;animation-name:cdk-text-field-autofill-end}textarea.cdk-textarea-autosize{resize:none}textarea.cdk-textarea-autosize-measuring{height:auto!important;overflow:hidden!important;padding:2px 0!important;box-sizing:content-box!important}.jam-slide-group{display:-webkit-box;display:flex;-webkit-box-orient:vertical;-webkit-box-direction:normal;flex-direction:column}.jam-slide-group.jam-slide-group-inverted-header{-webkit-box-orient:vertical;-webkit-box-direction:reverse;flex-direction:column-reverse}.jam-slide-element{height:auto;padding:0 16px;cursor:pointer;box-sizing:border-box;opacity:.6;min-width:160px;text-align:center;display:-webkit-inline-box;display:inline-flex;-webkit-box-pack:center;justify-content:center;-webkit-box-align:center;align-items:center;white-space:nowrap;position:relative}.jam-slide-element:focus{outline:0}.jam-slide-element:focus:not(.jam-slide-disabled){opacity:1}.jam-slide-element.jam-slide-disabled{cursor:default}.jam-slide-element .jam-slide-element-content{display:-webkit-inline-box;display:inline-flex;-webkit-box-pack:center;justify-content:center;-webkit-box-align:center;align-items:center;white-space:nowrap}@media (-ms-high-contrast:active){.jam-slide-element:focus{outline:dotted 2px}.jam-slide-element.jam-slide-disabled{opacity:.5}.jam-slide-element{opacity:1}}@media (max-width:599px){.jam-slide-element{padding:0 12px}}@media (max-width:959px){.jam-slide-element{padding:0 12px}}.jam-slide-group[mat-stretch-slides]>.jam-slide-header .jam-slide-element{flex-basis:0;-webkit-box-flex:1;flex-grow:1}.jam-slide-body-wrapper{position:relative;overflow:hidden;display:-webkit-box;display:flex;-webkit-transition:height .5s cubic-bezier(.35,0,.25,1);transition:height .5s cubic-bezier(.35,0,.25,1)}.jam-slide-body{top:0;left:0;right:0;bottom:0;position:absolute;display:block;overflow:hidden;flex-basis:100%}.jam-slide-body.jam-slide-body-active{position:relative;overflow-x:hidden;overflow-y:auto;z-index:1;-webkit-box-flex:1;flex-grow:1}.jam-slide-group.jam-slide-group-dynamic-height .jam-slide-body.jam-slide-body-active{overflow-y:hidden}`],\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  inputs: ['color', 'disableRipple'],\n  host: {\n    'class': 'jam-slide-group',\n    '[class.jam-slide-group-dynamic-height]': 'dynamicHeight',\n    '[class.jam-slide-group-inverted-header]': 'headerPosition === \"below\"'\n  }\n})\nexport class JamSlideGroup extends _JamSlideGroupMixinBase implements AfterContentInit,\n    AfterContentChecked, OnDestroy, CanColor, CanDisableRipple {\n\n  @ContentChildren(JamSlide) public _slides: QueryList<JamSlide>;\n\n  @ViewChild('slideBodyWrapper') public _slideBodyWrapper: ElementRef;\n\n  @ViewChild('slideHeader') public _slideHeader: JamSlideHeader;\n\n  /** Output to enable support for two-way binding on `[(selectedIndex)]` */\n  @Output() public readonly selectedIndexChange: EventEmitter<number> = new EventEmitter<number>();\n\n  /** Event emitted when focus has changed within a slide group. */\n  @Output() public readonly focusChange: EventEmitter<JamSlideChangeEvent> =\n      new EventEmitter<JamSlideChangeEvent>();\n\n  /** Event emitted when the body animation has completed */\n  @Output() public readonly animationDone: EventEmitter<void> = new EventEmitter<void>();\n\n  /** Event emitted when the slide selection has changed. */\n  @Output() public readonly selectedTabChange: EventEmitter<JamSlideChangeEvent> =\n      new EventEmitter<JamSlideChangeEvent>(true);\n\n  /** Position of the slide header. */\n  @Input() public headerPosition: JamSlideHeaderPosition = 'above';\n\n  /** The slide index that should be selected after the content has been checked. */\n  private _indexToSelect: number | null = 0;\n\n  /** Snapshot of the height of the slide body wrapper before another slide is activated. */\n  private _slideBodyWrapperHeight: number = 0;\n\n  /** Subscription to slides being added/removed. */\n  private _slidesSubscription = Subscription.EMPTY;\n\n  /** Subscription to changes in the slide labels. */\n  private _slideElementSubscription = Subscription.EMPTY;\n\n  /** Whether the slide group should grow to the size of the active slide. */\n  @Input()\n  public get dynamicHeight(): boolean { return this._dynamicHeight; }\n  public set dynamicHeight(value: boolean) { this._dynamicHeight = coerceBooleanProperty(value); }\n  private _dynamicHeight: boolean = false;\n\n  /** The index of the active slide. */\n  @Input()\n  public get selectedIndex(): number | null { return this._selectedIndex; }\n  public set selectedIndex(value: number | null) {\n    this._indexToSelect = coerceNumberProperty(value, null);\n  }\n  private _selectedIndex: number | null = null;\n\n  /** Duration for the slide animation. Will be normalized to milliseconds if no units are set. */\n  @Input()\n  public get animationDuration(): string { return this._animationDuration; }\n  public set animationDuration(value: string) {\n    this._animationDuration = /^\\d+$/.test(value) ? value + 'ms' : value;\n  }\n  private _animationDuration: string;\n\n  /** Background color of the slide group. */\n  @Input()\n  public get backgroundColor(): ThemePalette { return this._backgroundColor; }\n  public set backgroundColor(value: ThemePalette) {\n    const nativeElement: HTMLElement = this._elementRef.nativeElement;\n\n    nativeElement.classList.remove(`mat-background-${this.backgroundColor}`);\n\n    if (value) {\n      nativeElement.classList.add(`mat-background-${value}`);\n    }\n\n    this._backgroundColor = value;\n  }\n  private _backgroundColor: ThemePalette;\n\n  private _groupId: number;\n\n  public constructor(\n      elementRef: ElementRef,\n      private _changeDetectorRef: ChangeDetectorRef,\n      @Inject(MAT_TABS_CONFIG) @Optional() defaultConfig?: JamSlidesConfig\n    ) {\n    super(elementRef);\n    this._groupId = nextId += 1;\n    this.animationDuration = defaultConfig && defaultConfig.animationDuration ?\n        defaultConfig.animationDuration : '500ms';\n  }\n\n  /**\n   * After the content is checked, this component knows what slides have been defined\n   * and what the selected index should be. This is where we can know exactly what position\n   * each slide should be in according to the new selected index, and additionally we know how\n   * a new selected slide should transition in (from the left or right).\n   */\n  public ngAfterContentChecked() {\n    // Don't clamp the `indexToSelect` immediately in the setter because it can happen that\n    // the amount of slides changes before the actual change detection runs.\n    const indexToSelect = this._indexToSelect = this._clampTabIndex(this._indexToSelect);\n\n    // If there is a change in selected index, emit a change event. Should not trigger if\n    // the selected index has not yet been initialized.\n    if (this._selectedIndex !== indexToSelect) {\n      const isFirstRun = !this._selectedIndex;\n\n      if (!isFirstRun) {\n        this.selectedTabChange.emit(this._createChangeEvent(indexToSelect));\n      }\n\n      // Changing these values after change detection has run\n      // since the checked content may contain references to them.\n      Promise.resolve().then(() => {\n        this._slides.forEach((slide, index) => slide.isActive = index === indexToSelect);\n\n        if (!isFirstRun) {\n          this.selectedIndexChange.emit(indexToSelect);\n        }\n      });\n    }\n\n    // Setup the position for each slide and optionally setup an origin on the next selected slide.\n    this._slides.forEach((slide: JamSlide, index: number) => {\n      slide.position = index - indexToSelect;\n\n      // If there is already a selected slide, then set up an origin for the next selected slide\n      // if it doesn't have one already.\n      if (!this._selectedIndex && slide.position === 0 && !slide.origin) {\n        slide.origin = indexToSelect - this._selectedIndex;\n      }\n    });\n\n    if (this._selectedIndex !== indexToSelect) {\n      this._selectedIndex = indexToSelect;\n      this._changeDetectorRef.markForCheck();\n    }\n  }\n\n  public ngAfterContentInit() {\n    this._subscribeToTabLabels();\n\n    // Subscribe to changes in the amount of slides, in order to be\n    // able to re-render the content as new slides are added or removed.\n    this._slidesSubscription = this._slides.changes.subscribe(() => {\n      const indexToSelect = this._clampTabIndex(this._indexToSelect);\n\n      // Maintain the previously-selected slide if a new slide is added or removed and there is no\n      // explicit change that selects a different slide.\n      if (indexToSelect === this._selectedIndex) {\n        const slides = this._slides.toArray();\n\n        for (let i = 0; i < slides.length; i += 1) {\n          if (slides[i].isActive) {\n            // Assign both to the `_indexToSelect` and `_selectedIndex` so we don't fire a changed\n            // event, otherwise the consumer may end up in an infinite loop in some edge cases like\n            // adding a slide within the `selectedIndexChange` event.\n            this._indexToSelect = this._selectedIndex = i;\n            break;\n          }\n        }\n      }\n\n      this._subscribeToTabLabels();\n      this._changeDetectorRef.markForCheck();\n    });\n  }\n\n  public ngOnDestroy() {\n    this._slidesSubscription.unsubscribe();\n    this._slideElementSubscription.unsubscribe();\n  }\n\n  /** Re-aligns the ink bar to the selected slide element. */\n  // realignInkBar() {\n  //   if (this._slideHeader) {\n  //     this._slideHeader._alignInkBarToSelectedTab();\n  //   }\n  // }\n\n  public _focusChanged(index: number) {\n    this.focusChange.emit(this._createChangeEvent(index));\n  }\n\n  /** Returns a unique id for each slide element element */\n  public _getTabLabelId(i: number): string {\n    return `jam-slide-element-${this._groupId}-${i}`;\n  }\n\n  /** Returns a unique id for each slide content element */\n  public _getTabContentId(i: number): string {\n    return `jam-slide-content-${this._groupId}-${i}`;\n  }\n\n  /**\n   * Sets the height of the body wrapper to the height of the activating slide if dynamic\n   * height property is true.\n   */\n  public _setTabBodyWrapperHeight(slideHeight: number): void {\n    if (!this._dynamicHeight || !this._slideBodyWrapperHeight) { return; }\n\n    const wrapper: HTMLElement = this._slideBodyWrapper.nativeElement;\n\n    wrapper.style.height = this._slideBodyWrapperHeight + 'px';\n\n    // This conditional forces the browser to paint the height so that\n    // the animation to the new height can have an origin.\n    if (this._slideBodyWrapper.nativeElement.offsetHeight) {\n      wrapper.style.height = slideHeight + 'px';\n    }\n  }\n\n  /** Removes the height of the slide body wrapper. */\n  public _removeTabBodyWrapperHeight(): void {\n    const wrapper = this._slideBodyWrapper.nativeElement;\n    this._slideBodyWrapperHeight = wrapper.clientHeight;\n    wrapper.style.height = '';\n    this.animationDone.emit();\n  }\n\n  /** Handle click events, setting new selected index if appropriate. */\n  public _handleClick(slide: JamSlide, slideHeader: JamSlideHeader, index: number) {\n    if (!slide.disabled) {\n      this.selectedIndex = slideHeader.focusIndex = index;\n    }\n  }\n\n  /** Retrieves the slideindex for the slide. */\n  public _getTabIndex(slide: JamSlide, idx: number): number | null {\n    if (slide.disabled) {\n      return null;\n    }\n\n    return this.selectedIndex === idx ? 0 : -1;\n  }\n\n  private _createChangeEvent(index: number): JamSlideChangeEvent {\n    const event = new JamSlideChangeEvent();\n    event.index = index;\n    if (this._slides && this._slides.length) {\n      event.slide = this._slides.toArray()[index];\n    }\n\n    return event;\n  }\n\n  /**\n   * Subscribes to changes in the slide labels. This is needed, because the @Input for the element is\n   * on the JamSlide component, whereas the data binding is inside the JamSlideGroup. In order for the\n   * binding to be updated, we need to subscribe to changes in it and trigger change detection\n   * manually.\n   */\n  private _subscribeToTabLabels() {\n    if (this._slideElementSubscription) {\n      this._slideElementSubscription.unsubscribe();\n    }\n\n    this._slideElementSubscription = merge(...this._slides.map(slide => slide._stateChanges))\n      .subscribe(() => this._changeDetectorRef.markForCheck());\n  }\n\n  /** Clamps the given index to the bounds of 0 and the slides length. */\n  private _clampTabIndex(index: number | null): number {\n    // Note the `|| 0`, which ensures that values like NaN can't get through\n    // and which would otherwise throw the component into an infinite loop\n    // (since Math.max(NaN, 0) === NaN).\n    return Math.min(this._slides.length - 1, Math.max(index || 0, 0));\n  }\n\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport { Directive, ElementRef } from '@angular/core';\nimport { CanDisable, CanDisableCtor, mixinDisabled } from '@angular/material/core';\n\n// Boilerplate for applying mixins to JamSlideElementWrapper.\n/** @docs-private */\nexport class JamSlideElementWrapperBase {}\nexport const _JamSlideElementWrapperMixinBase: CanDisableCtor & typeof JamSlideElementWrapperBase =\n    mixinDisabled(JamSlideElementWrapperBase);\n\n// tslint:disable: interface-name use-input-property-decorator use-host-property-decorator directive-selector\n\n/**\n * Used in the `jam-slide-group` view to display slide labels.\n * @docs-private\n */\n@Directive({\n  selector: '[jamSlideElementWrapper]',\n  inputs: ['disabled'],\n  host: {\n    '[class.jam-slide-disabled]': 'disabled',\n    '[attr.aria-disabled]': '!!disabled'\n  }\n})\nexport class JamSlideElementWrapper extends _JamSlideElementWrapperMixinBase implements CanDisable {\n  public constructor(public elementRef: ElementRef) {\n    super();\n  }\n\n  /** Sets focus on the wrapper element */\n  public focus(): void {\n    this.elementRef.nativeElement.focus();\n  }\n\n  public getOffsetLeft(): number {\n    return this.elementRef.nativeElement.offsetLeft;\n  }\n\n  public getOffsetWidth(): number {\n    return this.elementRef.nativeElement.offsetWidth;\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport { Direction, Directionality } from '@angular/cdk/bidi';\nimport { coerceNumberProperty } from '@angular/cdk/coercion';\nimport { END, ENTER, HOME, SPACE } from '@angular/cdk/keycodes';\nimport { ViewportRuler } from '@angular/cdk/scrolling';\nimport {\n  AfterContentChecked,\n  AfterContentInit,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ContentChildren,\n  ElementRef,\n  EventEmitter,\n  Input,\n  NgZone,\n  OnDestroy,\n  Optional,\n  Output,\n  QueryList,\n  ViewChild,\n  ViewEncapsulation,\n  AfterViewInit\n} from '@angular/core';\nimport { CanDisableRipple, CanDisableRippleCtor, mixinDisableRipple } from '@angular/material/core';\nimport { merge, of as observableOf, Subject, timer, fromEvent } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\n// import { MatInkBar } from './ink-bar';\nimport { JamSlideElementWrapper } from './slide-element-wrapper';\nimport { FocusKeyManager } from '@angular/cdk/a11y';\nimport { Platform, normalizePassiveListenerOptions } from '@angular/cdk/platform';\n\n// tslint:disable: interface-name use-input-property-decorator use-host-property-decorator component-selector\n\ntype ModifierKey = 'altKey' | 'shiftKey' | 'ctrlKey' | 'metaKey';\n\n/**\n * Checks whether a modifier key is pressed.\n * @param event Event to be checked.\n */\nexport function hasModifierKey(event: KeyboardEvent, ...modifiers: Array<ModifierKey>): boolean {\n    if (modifiers.length) {\n       return modifiers.some(modifier => event[modifier]);\n    }\n\n    return event.altKey || event.shiftKey || event.ctrlKey || event.metaKey;\n}\n\n/** Config used to bind passive event listeners */\nconst passiveEventListenerOptions =\n    normalizePassiveListenerOptions({passive: true}) as EventListenerOptions;\n\n/**\n * The directions that scrolling can go in when the header's slides exceed the header width. 'After'\n * will scroll the header towards the end of the slides list and 'before' will scroll towards the\n * beginning of the list.\n */\nexport type ScrollDirection = 'after' | 'before';\n\n/**\n * The distance in pixels that will be overshot when scrolling a slide element into view. This helps\n * provide a small affordance to the element next to it.\n */\nconst EXAGGERATED_OVERSCROLL = 60;\n\n/**\n * Amount of milliseconds to wait before starting to scroll the header automatically.\n * Set a little conservatively in order to handle fake events dispatched on touch devices.\n */\nconst HEADER_SCROLL_DELAY = 650;\n\n/**\n * Interval in milliseconds at which to scroll the header\n * while the user is holding their pointer.\n */\nconst HEADER_SCROLL_INTERVAL = 100;\n\n// Boilerplate for applying mixins to JamSlideHeader.\n/** @docs-private */\nexport class JamSlideHeaderBase {}\nexport const _JamSlideHeaderMixinBase: CanDisableRippleCtor & typeof JamSlideHeaderBase =\n    mixinDisableRipple(JamSlideHeaderBase);\n\n/**\n * The header of the slide group which displays a list of all the slides in the slide group. Includes\n * an ink bar that follows the currently selected slide. When the slides list's width exceeds the\n * width of the header container, then arrows will be displayed to allow the user to scroll\n * left and right across the header.\n * @docs-private\n */\n@Component({\n  selector: 'jam-slide-header',\n  template: `<div class=\"jam-slide-header-pagination jam-slide-header-pagination-before mat-elevation-z4\"\n     #previousPaginator\n     aria-hidden=\"true\"\n     mat-ripple [matRippleDisabled]=\"_disableScrollBefore || disableRipple\"\n     [class.jam-slide-header-pagination-disabled]=\"_disableScrollBefore\"\n     (click)=\"_handlePaginatorClick('before')\"\n     (mousedown)=\"_handlePaginatorPress('before')\"\n     (touchend)=\"_stopInterval()\">\n  <div class=\"jam-slide-header-pagination-chevron\"></div>\n</div>\n\n<div class=\"jam-slide-element-container\" #slideListContainer\n     (keydown)=\"_handleKeydown($event)\">\n  <div class=\"jam-slide-list\" #slideList role=\"slidelist\" (cdkObserveContent)=\"_onContentChanges()\">\n    <div class=\"jam-slide-elements\">\n      <ng-content></ng-content>\n    </div>\n    <!-- <mat-ink-bar></mat-ink-bar> -->\n  </div>\n</div>\n\n<div class=\"jam-slide-header-pagination jam-slide-header-pagination-after mat-elevation-z4\"\n     #nextPaginator\n     aria-hidden=\"true\"\n     mat-ripple [matRippleDisabled]=\"_disableScrollAfter || disableRipple\"\n     [class.jam-slide-header-pagination-disabled]=\"_disableScrollAfter\"\n     (mousedown)=\"_handlePaginatorPress('after')\"\n     (click)=\"_handlePaginatorClick('after')\"\n     (touchend)=\"_stopInterval()\">\n  <div class=\"jam-slide-header-pagination-chevron\"></div>\n</div>\n`,\n  styles: [`@-webkit-keyframes cdk-text-field-autofill-start{/*!*/}@-webkit-keyframes cdk-text-field-autofill-end{/*!*/}.mat-badge-content{font-weight:600;font-size:12px;font-family:Roboto,\"Helvetica Neue\",sans-serif}.mat-badge-small .mat-badge-content{font-size:6px}.mat-badge-large .mat-badge-content{font-size:24px}.mat-h1,.mat-headline,.mat-typography h1{font:400 24px/32px Roboto,\"Helvetica Neue\",sans-serif;margin:0 0 16px}.mat-h2,.mat-title,.mat-typography h2{font:500 20px/32px Roboto,\"Helvetica Neue\",sans-serif;margin:0 0 16px}.mat-h3,.mat-subheading-2,.mat-typography h3{font:400 16px/28px Roboto,\"Helvetica Neue\",sans-serif;margin:0 0 16px}.mat-h4,.mat-subheading-1,.mat-typography h4{font:400 15px/24px Roboto,\"Helvetica Neue\",sans-serif;margin:0 0 16px}.mat-h5,.mat-typography h5{font:400 11.62px/20px Roboto,\"Helvetica Neue\",sans-serif;margin:0 0 12px}.mat-h6,.mat-typography h6{font:400 9.38px/20px Roboto,\"Helvetica Neue\",sans-serif;margin:0 0 12px}.mat-body-2,.mat-body-strong{font:500 14px/24px Roboto,\"Helvetica Neue\",sans-serif}.mat-body,.mat-body-1,.mat-typography{font:400 14px/20px Roboto,\"Helvetica Neue\",sans-serif}.mat-body p,.mat-body-1 p,.mat-typography p{margin:0 0 12px}.mat-caption,.mat-small{font:400 12px/20px Roboto,\"Helvetica Neue\",sans-serif}.mat-display-4,.mat-typography .mat-display-4{font:300 112px/112px Roboto,\"Helvetica Neue\",sans-serif;margin:0 0 56px;letter-spacing:-.05em}.mat-display-3,.mat-typography .mat-display-3{font:400 56px/56px Roboto,\"Helvetica Neue\",sans-serif;margin:0 0 64px;letter-spacing:-.02em}.mat-display-2,.mat-typography .mat-display-2{font:400 45px/48px Roboto,\"Helvetica Neue\",sans-serif;margin:0 0 64px;letter-spacing:-.005em}.mat-display-1,.mat-typography .mat-display-1{font:400 34px/40px Roboto,\"Helvetica Neue\",sans-serif;margin:0 0 64px}.mat-bottom-sheet-container{font:400 14px/20px Roboto,\"Helvetica Neue\",sans-serif}.mat-button,.mat-fab,.mat-flat-button,.mat-icon-button,.mat-mini-fab,.mat-raised-button,.mat-stroked-button{font-family:Roboto,\"Helvetica Neue\",sans-serif;font-size:14px;font-weight:500}.mat-button-toggle,.mat-card{font-family:Roboto,\"Helvetica Neue\",sans-serif}.mat-card-title{font-size:24px;font-weight:500}.mat-card-header .mat-card-title{font-size:20px}.mat-card-content,.mat-card-subtitle{font-size:14px}.mat-checkbox{font-family:Roboto,\"Helvetica Neue\",sans-serif}.mat-checkbox-layout .mat-checkbox-label{line-height:24px}.mat-chip{font-size:14px;font-weight:500}.mat-chip .mat-chip-remove.mat-icon,.mat-chip .mat-chip-trailing-icon.mat-icon{font-size:18px}.mat-table{font-family:Roboto,\"Helvetica Neue\",sans-serif}.mat-header-cell{font-size:12px;font-weight:500}.mat-cell,.mat-footer-cell{font-size:14px}.mat-calendar{font-family:Roboto,\"Helvetica Neue\",sans-serif}.mat-calendar-body{font-size:13px}.mat-calendar-body-label,.mat-calendar-period-button{font-size:14px;font-weight:500}.mat-calendar-table-header th{font-size:11px;font-weight:400}.mat-dialog-title{font:500 20px/32px Roboto,\"Helvetica Neue\",sans-serif}.mat-expansion-panel-header{font-family:Roboto,\"Helvetica Neue\",sans-serif;font-size:15px;font-weight:400}.mat-expansion-panel-content{font:400 14px/20px Roboto,\"Helvetica Neue\",sans-serif}.mat-form-field{font-size:inherit;font-weight:400;line-height:1.125;font-family:Roboto,\"Helvetica Neue\",sans-serif}.mat-form-field-wrapper{padding-bottom:1.34375em}.mat-form-field-prefix .mat-icon,.mat-form-field-suffix .mat-icon{font-size:150%;line-height:1.125}.mat-form-field-prefix .mat-icon-button,.mat-form-field-suffix .mat-icon-button{height:1.5em;width:1.5em}.mat-form-field-prefix .mat-icon-button .mat-icon,.mat-form-field-suffix .mat-icon-button .mat-icon{height:1.125em;line-height:1.125}.mat-form-field-infix{padding:.5em 0;border-top:.84375em solid transparent}.mat-form-field-can-float .mat-input-server:focus+.mat-form-field-label-wrapper .mat-form-field-label,.mat-form-field-can-float.mat-form-field-should-float .mat-form-field-label{-webkit-transform:translateY(-1.34375em) scale(.75);transform:translateY(-1.34375em) scale(.75);width:133.33333%}.mat-form-field-can-float .mat-input-server[label]:not(:label-shown)+.mat-form-field-label-wrapper .mat-form-field-label{-webkit-transform:translateY(-1.34374em) scale(.75);transform:translateY(-1.34374em) scale(.75);width:133.33334%}.mat-form-field-label-wrapper{top:-.84375em;padding-top:.84375em}.mat-form-field-label{top:1.34375em}.mat-form-field-underline{bottom:1.34375em}.mat-form-field-subscript-wrapper{font-size:75%;margin-top:.66667em;top:calc(100% - 1.79167em)}.mat-form-field-appearance-legacy .mat-form-field-wrapper{padding-bottom:1.25em}.mat-form-field-appearance-legacy .mat-form-field-infix{padding:.4375em 0}.mat-form-field-appearance-legacy.mat-form-field-can-float .mat-input-server:focus+.mat-form-field-label-wrapper .mat-form-field-label,.mat-form-field-appearance-legacy.mat-form-field-can-float.mat-form-field-should-float .mat-form-field-label{-webkit-transform:translateY(-1.28125em) scale(.75) perspective(100px) translateZ(.001px);transform:translateY(-1.28125em) scale(.75) perspective(100px) translateZ(.001px);-ms-transform:translateY(-1.28125em) scale(.75);width:133.33333%}.mat-form-field-appearance-legacy.mat-form-field-can-float .mat-form-field-autofill-control:-webkit-autofill+.mat-form-field-label-wrapper .mat-form-field-label{-webkit-transform:translateY(-1.28125em) scale(.75) perspective(100px) translateZ(.00101px);transform:translateY(-1.28125em) scale(.75) perspective(100px) translateZ(.00101px);-ms-transform:translateY(-1.28124em) scale(.75);width:133.33334%}.mat-form-field-appearance-legacy.mat-form-field-can-float .mat-input-server[label]:not(:label-shown)+.mat-form-field-label-wrapper .mat-form-field-label{-webkit-transform:translateY(-1.28125em) scale(.75) perspective(100px) translateZ(.00102px);transform:translateY(-1.28125em) scale(.75) perspective(100px) translateZ(.00102px);-ms-transform:translateY(-1.28123em) scale(.75);width:133.33335%}.mat-form-field-appearance-legacy .mat-form-field-label{top:1.28125em}.mat-form-field-appearance-legacy .mat-form-field-underline{bottom:1.25em}.mat-form-field-appearance-legacy .mat-form-field-subscript-wrapper{margin-top:.54167em;top:calc(100% - 1.66667em)}@media print{.mat-form-field-appearance-legacy.mat-form-field-can-float .mat-input-server:focus+.mat-form-field-label-wrapper .mat-form-field-label,.mat-form-field-appearance-legacy.mat-form-field-can-float.mat-form-field-should-float .mat-form-field-label{-webkit-transform:translateY(-1.28122em) scale(.75);transform:translateY(-1.28122em) scale(.75)}.mat-form-field-appearance-legacy.mat-form-field-can-float .mat-form-field-autofill-control:-webkit-autofill+.mat-form-field-label-wrapper .mat-form-field-label{-webkit-transform:translateY(-1.28121em) scale(.75);transform:translateY(-1.28121em) scale(.75)}.mat-form-field-appearance-legacy.mat-form-field-can-float .mat-input-server[label]:not(:label-shown)+.mat-form-field-label-wrapper .mat-form-field-label{-webkit-transform:translateY(-1.2812em) scale(.75);transform:translateY(-1.2812em) scale(.75)}}.mat-form-field-appearance-fill .mat-form-field-infix{padding:.25em 0 .75em}.mat-form-field-appearance-fill .mat-form-field-label{top:1.09375em;margin-top:-.5em}.mat-form-field-appearance-fill.mat-form-field-can-float .mat-input-server:focus+.mat-form-field-label-wrapper .mat-form-field-label,.mat-form-field-appearance-fill.mat-form-field-can-float.mat-form-field-should-float .mat-form-field-label{-webkit-transform:translateY(-.59375em) scale(.75);transform:translateY(-.59375em) scale(.75);width:133.33333%}.mat-form-field-appearance-fill.mat-form-field-can-float .mat-input-server[label]:not(:label-shown)+.mat-form-field-label-wrapper .mat-form-field-label{-webkit-transform:translateY(-.59374em) scale(.75);transform:translateY(-.59374em) scale(.75);width:133.33334%}.mat-form-field-appearance-outline .mat-form-field-infix{padding:1em 0}.mat-form-field-appearance-outline .mat-form-field-label{top:1.84375em;margin-top:-.25em}.mat-form-field-appearance-outline.mat-form-field-can-float .mat-input-server:focus+.mat-form-field-label-wrapper .mat-form-field-label,.mat-form-field-appearance-outline.mat-form-field-can-float.mat-form-field-should-float .mat-form-field-label{-webkit-transform:translateY(-1.59375em) scale(.75);transform:translateY(-1.59375em) scale(.75);width:133.33333%}.mat-form-field-appearance-outline.mat-form-field-can-float .mat-input-server[label]:not(:label-shown)+.mat-form-field-label-wrapper .mat-form-field-label{-webkit-transform:translateY(-1.59374em) scale(.75);transform:translateY(-1.59374em) scale(.75);width:133.33334%}.mat-grid-tile-footer,.mat-grid-tile-header{font-size:14px}.mat-grid-tile-footer .mat-line,.mat-grid-tile-header .mat-line{white-space:nowrap;overflow:hidden;text-overflow:ellipsis;display:block;box-sizing:border-box}.mat-grid-tile-footer .mat-line:nth-child(n+2),.mat-grid-tile-header .mat-line:nth-child(n+2){font-size:12px}input.mat-input-element{margin-top:-.0625em}.mat-menu-item{font-family:Roboto,\"Helvetica Neue\",sans-serif;font-size:14px;font-weight:400}.mat-paginator,.mat-paginator-page-size .mat-select-trigger{font-family:Roboto,\"Helvetica Neue\",sans-serif;font-size:12px}.mat-radio-button,.mat-select{font-family:Roboto,\"Helvetica Neue\",sans-serif}.mat-select-trigger{height:1.125em}.mat-slide-toggle-content{font-family:Roboto,\"Helvetica Neue\",sans-serif}.mat-slider-thumb-label-text{font-family:Roboto,\"Helvetica Neue\",sans-serif;font-size:12px;font-weight:500}.mat-stepper-horizontal,.mat-stepper-vertical{font-family:Roboto,\"Helvetica Neue\",sans-serif}.mat-step-label{font-size:14px;font-weight:400}.mat-step-sub-label-error{font-weight:400}.mat-step-label-error{font-size:14px}.mat-step-label-selected{font-size:14px;font-weight:500}.mat-tab-group{font-family:Roboto,\"Helvetica Neue\",sans-serif}.mat-tab-label,.mat-tab-link{font-family:Roboto,\"Helvetica Neue\",sans-serif;font-size:14px;font-weight:500}.mat-toolbar,.mat-toolbar h1,.mat-toolbar h2,.mat-toolbar h3,.mat-toolbar h4,.mat-toolbar h5,.mat-toolbar h6{font:500 20px/32px Roboto,\"Helvetica Neue\",sans-serif;margin:0}.mat-tooltip{font-family:Roboto,\"Helvetica Neue\",sans-serif;font-size:10px;padding-top:6px;padding-bottom:6px}.mat-tooltip-handset{font-size:14px;padding-top:8px;padding-bottom:8px}.mat-list-item,.mat-list-option{font-family:Roboto,\"Helvetica Neue\",sans-serif}.mat-list-base .mat-list-item{font-size:16px}.mat-list-base .mat-list-item .mat-line{white-space:nowrap;overflow:hidden;text-overflow:ellipsis;display:block;box-sizing:border-box}.mat-list-base .mat-list-item .mat-line:nth-child(n+2){font-size:14px}.mat-list-base .mat-list-option{font-size:16px}.mat-list-base .mat-list-option .mat-line{white-space:nowrap;overflow:hidden;text-overflow:ellipsis;display:block;box-sizing:border-box}.mat-list-base .mat-list-option .mat-line:nth-child(n+2){font-size:14px}.mat-list-base .mat-subheader{font-family:Roboto,\"Helvetica Neue\",sans-serif;font-size:14px;font-weight:500}.mat-list-base[dense] .mat-list-item{font-size:12px}.mat-list-base[dense] .mat-list-item .mat-line{white-space:nowrap;overflow:hidden;text-overflow:ellipsis;display:block;box-sizing:border-box}.mat-list-base[dense] .mat-list-item .mat-line:nth-child(n+2),.mat-list-base[dense] .mat-list-option{font-size:12px}.mat-list-base[dense] .mat-list-option .mat-line{white-space:nowrap;overflow:hidden;text-overflow:ellipsis;display:block;box-sizing:border-box}.mat-list-base[dense] .mat-list-option .mat-line:nth-child(n+2){font-size:12px}.mat-list-base[dense] .mat-subheader{font-family:Roboto,\"Helvetica Neue\",sans-serif;font-size:12px;font-weight:500}.mat-option{font-family:Roboto,\"Helvetica Neue\",sans-serif;font-size:16px}.mat-optgroup-label{font:500 14px/24px Roboto,\"Helvetica Neue\",sans-serif}.mat-simple-snackbar{font-family:Roboto,\"Helvetica Neue\",sans-serif;font-size:14px}.mat-simple-snackbar-action{line-height:1;font-family:inherit;font-size:inherit;font-weight:500}.mat-tree{font-family:Roboto,\"Helvetica Neue\",sans-serif}.mat-nested-tree-node,.mat-tree-node{font-weight:400;font-size:14px}.mat-ripple{overflow:hidden;position:relative}.mat-ripple.mat-ripple-unbounded{overflow:visible}.mat-ripple-element{position:absolute;border-radius:50%;pointer-events:none;-webkit-transition:opacity,-webkit-transform cubic-bezier(0,0,.2,1);transition:opacity,transform cubic-bezier(0,0,.2,1),-webkit-transform cubic-bezier(0,0,.2,1);-webkit-transform:scale(0);transform:scale(0)}@media (-ms-high-contrast:active){.mat-ripple-element{display:none}}.cdk-visually-hidden{border:0;clip:rect(0 0 0 0);height:1px;margin:-1px;overflow:hidden;padding:0;position:absolute;width:1px;outline:0;-webkit-appearance:none;-moz-appearance:none}.cdk-global-overlay-wrapper,.cdk-overlay-container{pointer-events:none;top:0;left:0;height:100%;width:100%}.cdk-overlay-container{position:fixed;z-index:1000}.cdk-overlay-container:empty{display:none}.cdk-global-overlay-wrapper{display:-webkit-box;display:flex;position:absolute;z-index:1000}.cdk-overlay-pane{position:absolute;pointer-events:auto;box-sizing:border-box;z-index:1000;display:-webkit-box;display:flex;max-width:100%;max-height:100%}.cdk-overlay-backdrop{position:absolute;top:0;bottom:0;left:0;right:0;z-index:1000;pointer-events:auto;-webkit-tap-highlight-color:transparent;-webkit-transition:opacity .4s cubic-bezier(.25,.8,.25,1);transition:opacity .4s cubic-bezier(.25,.8,.25,1);opacity:0}.cdk-overlay-backdrop.cdk-overlay-backdrop-showing{opacity:1}@media screen and (-ms-high-contrast:active){.cdk-overlay-backdrop.cdk-overlay-backdrop-showing{opacity:.6}}.cdk-overlay-dark-backdrop{background:rgba(0,0,0,.32)}.cdk-overlay-transparent-backdrop,.cdk-overlay-transparent-backdrop.cdk-overlay-backdrop-showing{opacity:0}.cdk-overlay-connected-position-bounding-box{position:absolute;z-index:1000;display:-webkit-box;display:flex;-webkit-box-orient:vertical;-webkit-box-direction:normal;flex-direction:column;min-width:1px;min-height:1px}.cdk-global-scrollblock{position:fixed;width:100%;overflow-y:scroll}@keyframes cdk-text-field-autofill-start{/*!*/}@keyframes cdk-text-field-autofill-end{/*!*/}.cdk-text-field-autofill-monitored:-webkit-autofill{-webkit-animation-name:cdk-text-field-autofill-start;animation-name:cdk-text-field-autofill-start}.cdk-text-field-autofill-monitored:not(:-webkit-autofill){-webkit-animation-name:cdk-text-field-autofill-end;animation-name:cdk-text-field-autofill-end}textarea.cdk-textarea-autosize{resize:none}textarea.cdk-textarea-autosize-measuring{height:auto!important;overflow:hidden!important;padding:2px 0!important;box-sizing:content-box!important}.jam-slide-header{display:-webkit-box;display:flex;overflow:hidden;position:relative;flex-shrink:0}.jam-slide-element{height:auto;padding:0 16px;cursor:pointer;box-sizing:border-box;opacity:.6;min-width:160px;text-align:center;display:-webkit-inline-box;display:inline-flex;-webkit-box-pack:center;justify-content:center;-webkit-box-align:center;align-items:center;white-space:nowrap;position:relative}.jam-slide-element:focus{outline:0}.jam-slide-element:focus:not(.jam-slide-disabled){opacity:1}.jam-slide-element.jam-slide-disabled{cursor:default}.jam-slide-element .jam-slide-element-content{display:-webkit-inline-box;display:inline-flex;-webkit-box-pack:center;justify-content:center;-webkit-box-align:center;align-items:center;white-space:nowrap}@media (-ms-high-contrast:active){.jam-slide-element:focus{outline:dotted 2px}.jam-slide-element.jam-slide-disabled{opacity:.5}.jam-slide-element{opacity:1}}@media (max-width:599px){.jam-slide-element{min-width:72px}}.jam-slide-header-pagination{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;position:relative;display:none;-webkit-box-pack:center;justify-content:center;-webkit-box-align:center;align-items:center;min-width:32px;cursor:pointer;z-index:2;-webkit-tap-highlight-color:transparent;touch-action:none}.jam-slide-header-pagination-controls-enabled .jam-slide-header-pagination{display:-webkit-box;display:flex}.jam-slide-header-pagination-before,.jam-slide-header-rtl .jam-slide-header-pagination-after{padding-left:4px}.jam-slide-header-pagination-before .jam-slide-header-pagination-chevron,.jam-slide-header-rtl .jam-slide-header-pagination-after .jam-slide-header-pagination-chevron{-webkit-transform:rotate(-135deg);transform:rotate(-135deg)}.jam-slide-header-pagination-after,.jam-slide-header-rtl .jam-slide-header-pagination-before{padding-right:4px}.jam-slide-header-pagination-after .jam-slide-header-pagination-chevron,.jam-slide-header-rtl .jam-slide-header-pagination-before .jam-slide-header-pagination-chevron{-webkit-transform:rotate(45deg);transform:rotate(45deg)}.jam-slide-header-pagination-chevron{border-style:solid;border-width:2px 2px 0 0;content:'';height:8px;width:8px}.jam-slide-header-pagination-disabled{box-shadow:none;cursor:default}.jam-slide-element-container{display:-webkit-box;display:flex;-webkit-box-flex:1;flex-grow:1;overflow:hidden;z-index:1}.jam-slide-list{-webkit-box-flex:1;flex-grow:1;position:relative;-webkit-transition:-webkit-transform .5s cubic-bezier(.35,0,.25,1);transition:transform .5s cubic-bezier(.35,0,.25,1);transition:transform .5s cubic-bezier(.35,0,.25,1),-webkit-transform .5s cubic-bezier(.35,0,.25,1)}.jam-slide-elements{display:-webkit-box;display:flex}[mat-align-slides=center] .jam-slide-elements{-webkit-box-pack:center;justify-content:center}[mat-align-slides=end] .jam-slide-elements{-webkit-box-pack:end;justify-content:flex-end}`],\n  inputs: ['disableRipple'],\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  host: {\n    'class': 'jam-slide-header',\n    '[class.jam-slide-header-pagination-controls-enabled]': '_showPaginationControls',\n    '[class.jam-slide-header-rtl]': `_getLayoutDirection() == 'rtl'`\n  }\n})\nexport class JamSlideHeader extends _JamSlideHeaderMixinBase\n    implements AfterContentChecked, AfterContentInit, AfterViewInit, OnDestroy, CanDisableRipple {\n\n  @ContentChildren(JamSlideElementWrapper) public _elementWrappers: QueryList<JamSlideElementWrapper>;\n  // @ViewChild(MatInkBar) _inkBar: MatInkBar;\n  @ViewChild('slideListContainer') public _slideListContainer: ElementRef;\n  @ViewChild('slideList') public _slideList: ElementRef;\n  @ViewChild('nextPaginator') public _nextPaginator: ElementRef<HTMLElement>;\n  @ViewChild('previousPaginator') public _previousPaginator: ElementRef<HTMLElement>;\n\n  /** Event emitted when the option is selected. */\n  @Output() public readonly selectFocusedIndex: EventEmitter<number> = new EventEmitter<number>();\n\n  /** Event emitted when a element is focused. */\n  @Output() public readonly indexFocused: EventEmitter<number> = new EventEmitter<number>();\n\n  /** Whether the controls for pagination should be displayed */\n  public _showPaginationControls = false;\n\n  /** Whether the slide list can be scrolled more towards the end of the slide element list. */\n  public _disableScrollAfter = true;\n\n  /** Whether the slide list can be scrolled more towards the beginning of the slide element list. */\n  public _disableScrollBefore = true;\n\n  /** The distance in pixels that the slide labels should be translated to the left. */\n  private _scrollDistance = 0;\n\n  /** Whether the header should scroll to the selected index after the view has been checked. */\n  private _selectedIndexChanged = false;\n\n  /** Emits when the component is destroyed. */\n  private readonly _destroyed = new Subject<void>();\n\n  /**\n   * The number of slide labels that are displayed on the header. When this changes, the header\n   * should re-evaluate the scroll position.\n   */\n  private _slideElementCount: number;\n\n  /** Whether the scroll distance has changed and should be applied after the view is checked. */\n  private _scrollDistanceChanged: boolean;\n\n  /** Used to manage focus between the slides. */\n  private _keyManager: FocusKeyManager<JamSlideElementWrapper>;\n\n  /** Cached text content of the header. */\n  private _currentTextContent: string;\n\n  /** Stream that will stop the automated scrolling. */\n  private _stopScrolling = new Subject<void>();\n\n  /** The index of the active slide. */\n  @Input()\n  public get selectedIndex(): number { return this._selectedIndex; }\n  public set selectedIndex(value: number) {\n    value = coerceNumberProperty(value);\n    this._selectedIndexChanged = this._selectedIndex !== value;\n    this._selectedIndex = value;\n\n    if (this._keyManager) {\n      this._keyManager.updateActiveItem(value);\n    }\n  }\n  private _selectedIndex: number = 0;\n\n  public constructor(\n      private _elementRef: ElementRef,\n      private _changeDetectorRef: ChangeDetectorRef,\n      private _viewportRuler: ViewportRuler,\n      @Optional() private _dir: Directionality,\n      // @breaking-change 8.0.0 `_ngZone` and `_platforms` parameters to be made required.\n      private _ngZone?: NgZone,\n      private _platform?: Platform\n  ) {\n    super();\n\n    const element = _elementRef.nativeElement;\n    const bindEvent = (): void => {\n      fromEvent(element, 'mouseleave')\n        .pipe(takeUntil(this._destroyed))\n        .subscribe(() => {\n          this._stopInterval();\n        });\n    };\n\n    // @breaking-change 8.0.0 remove null check once _ngZone is made into a required parameter.\n    if (_ngZone) {\n      // Bind the `mouseleave` event on the outside since it doesn't change anything in the view.\n      _ngZone.runOutsideAngular(bindEvent);\n    } else {\n      bindEvent();\n    }\n  }\n\n  public ngAfterContentChecked(): void {\n    // If the number of slide labels have changed, check if scrolling should be enabled\n    if (this._slideElementCount !== this._elementWrappers.length) {\n      this.updatePagination();\n      this._slideElementCount = this._elementWrappers.length;\n      this._changeDetectorRef.markForCheck();\n    }\n\n    // If the selected index has changed, scroll to the element and check if the scrolling controls\n    // should be disabled.\n    if (this._selectedIndexChanged) {\n      this._scrollToLabel(this._selectedIndex);\n      this._checkScrollingControls();\n      // this._alignInkBarToSelectedTab();\n      this._selectedIndexChanged = false;\n      this._changeDetectorRef.markForCheck();\n    }\n\n    // If the scroll distance has been changed (slide selected, focused, scroll controls activated),\n    // then translate the header to reflect this.\n    if (this._scrollDistanceChanged) {\n      this._updateTabScrollPosition();\n      this._scrollDistanceChanged = false;\n      this._changeDetectorRef.markForCheck();\n    }\n  }\n\n  /** Handles keyboard events on the header. */\n  public _handleKeydown(event: KeyboardEvent) {\n    console.log('inside handleKeyDown', event);\n    console.log('inside handleKeyDown', event, hasModifierKey(event));\n    // We don't handle any key bindings with a modifier key.\n    if (hasModifierKey(event)) {\n      return;\n    }\n\n    switch (event.key) {\n      case 'Home':\n        this._keyManager.setFirstItemActive();\n        event.preventDefault();\n        break;\n      case 'End':\n        this._keyManager.setLastItemActive();\n        event.preventDefault();\n        break;\n      case 'Enter':\n      case ' ':\n        this.selectFocusedIndex.emit(this.focusIndex);\n        event.preventDefault();\n        break;\n      default:\n        this._keyManager.onKeydown(event);\n        break;\n    }\n  }\n\n  /**\n   * Aligns the ink bar to the selected slide on load.\n   */\n  public ngAfterContentInit() {\n    const dirChange = this._dir ? this._dir.change : observableOf(null);\n    const resize = this._viewportRuler.change(150);\n    const realign = (): void => {\n      this.updatePagination();\n      // this._alignInkBarToSelectedTab();\n    };\n\n    this._keyManager = new FocusKeyManager(this._elementWrappers)\n      .withHorizontalOrientation(this._getLayoutDirection())\n      .withWrap();\n\n    this._keyManager.updateActiveItem(0);\n\n    // Defer the first call in order to allow for slower browsers to lay out the elements.\n    // This helps in cases where the user lands directly on a page with paginated slides.\n    if (typeof requestAnimationFrame !== 'undefined') {\n        requestAnimationFrame(realign);\n    } else {\n        realign();\n    }\n\n    // On dir change or window resize, realign the ink bar and update the orientation of\n    // the key manager if the direction has changed.\n    merge(dirChange, resize).pipe(takeUntil(this._destroyed)).subscribe(() => {\n      realign();\n      this._keyManager.withHorizontalOrientation(this._getLayoutDirection());\n    });\n\n    // If there is a change in the focus key manager we need to emit the `indexFocused`\n    // event in order to provide a public event that notifies about focus changes. Also we realign\n    // the slides container by scrolling the new focused slide into the visible section.\n    this._keyManager.change.pipe(takeUntil(this._destroyed)).subscribe(newFocusIndex => {\n      this.indexFocused.emit(newFocusIndex);\n      this._setTabFocus(newFocusIndex);\n    });\n  }\n\n  public ngAfterViewInit() {\n    // We need to handle these events manually, because we want to bind passive event listeners.\n    fromEvent(this._previousPaginator.nativeElement, 'touchstart', passiveEventListenerOptions)\n      .pipe(takeUntil(this._destroyed))\n      .subscribe(() => {\n        this._handlePaginatorPress('before');\n      });\n\n    fromEvent(this._nextPaginator.nativeElement, 'touchstart', passiveEventListenerOptions)\n      .pipe(takeUntil(this._destroyed))\n      .subscribe(() => {\n        this._handlePaginatorPress('after');\n      });\n  }\n\n  public ngOnDestroy() {\n    this._destroyed.next();\n    this._destroyed.complete();\n    this._stopScrolling.complete();\n  }\n\n  /**\n   * Callback for when the MutationObserver detects that the content has changed.\n   */\n  public _onContentChanges() {\n    const textContent = this._elementRef.nativeElement.textContent;\n\n    // We need to diff the text content of the header, because the MutationObserver callback\n    // will fire even if the text content didn't change which is inefficient and is prone\n    // to infinite loops if a poorly constructed expression is passed in (see #14249).\n    if (textContent !== this._currentTextContent) {\n      this._currentTextContent = textContent;\n\n      const zoneCallback = (): void => {\n        this.updatePagination();\n        // this._alignInkBarToSelectedTab();\n        this._changeDetectorRef.markForCheck();\n      };\n\n      // The content observer runs outside the `NgZone` by default, which\n      // means that we need to bring the callback back in ourselves.\n      // @breaking-change 8.0.0 Remove null check for `_ngZone` once it's a required parameter.\n      if (this._ngZone) {\n          this._ngZone.run(zoneCallback);\n      } else {\n          zoneCallback();\n      }\n    }\n  }\n\n  /**\n   * Updates the view whether pagination should be enabled or not.\n   *\n   * WARNING: Calling this method can be very costly in terms of performance.  It should be called\n   * as infrequently as possible from outside of the Tabs component as it causes a reflow of the\n   * page.\n   */\n  public updatePagination() {\n    this._checkPaginationEnabled();\n    this._checkScrollingControls();\n    this._updateTabScrollPosition();\n  }\n\n  // tslint:disable: no-non-null-assertion\n  /** Tracks which element has focus; used for keyboard navigation */\n  public get focusIndex(): number {\n    return this._keyManager ? this._keyManager.activeItemIndex! : 0;\n  }\n\n  /** When the focus index is set, we must manually send focus to the correct element */\n  public set focusIndex(value: number) {\n    if (!this._isValidIndex(value) || this.focusIndex === value || !this._keyManager) {\n      return;\n    }\n\n    this._keyManager.setActiveItem(value);\n  }\n\n  /**\n   * Determines if an index is valid.  If the slides are not ready yet, we assume that the user is\n   * providing a valid index and return true.\n   */\n  public _isValidIndex(index: number): boolean {\n    if (!this._elementWrappers) { return true; }\n\n    const slide = this._elementWrappers ? this._elementWrappers.toArray()[index] : null;\n\n    return !!slide && !slide.disabled;\n  }\n\n  /**\n   * Sets focus on the HTML element for the element wrapper and scrolls it into the view if\n   * scrolling is enabled.\n   */\n  public _setTabFocus(slideIndex: number) {\n    if (this._showPaginationControls) {\n      this._scrollToLabel(slideIndex);\n    }\n\n    if (this._elementWrappers && this._elementWrappers.length) {\n      this._elementWrappers.toArray()[slideIndex].focus();\n\n      // Do not let the browser manage scrolling to focus the element, this will be handled\n      // by using translation. In LTR, the scroll left should be 0. In RTL, the scroll width\n      // should be the full width minus the offset width.\n      const containerEl = this._slideListContainer.nativeElement;\n      const dir = this._getLayoutDirection();\n\n      if (dir === 'ltr') {\n        containerEl.scrollLeft = 0;\n      } else {\n        containerEl.scrollLeft = containerEl.scrollWidth - containerEl.offsetWidth;\n      }\n    }\n  }\n\n  /** The layout direction of the containing app. */\n  public _getLayoutDirection(): Direction {\n    return this._dir && this._dir.value === 'rtl' ? 'rtl' : 'ltr';\n  }\n\n  /** Performs the CSS transformation on the slide list that will cause the list to scroll. */\n  public _updateTabScrollPosition() {\n    const scrollDistance = this.scrollDistance;\n    const platform = this._platform;\n    const translateX = this._getLayoutDirection() === 'ltr' ? -scrollDistance : scrollDistance;\n\n    // Don't use `translate3d` here because we don't want to create a new layer. A new layer\n    // seems to cause flickering and overflow in Internet Explorer. For example, the ink bar\n    // and ripples will exceed the boundaries of the visible slide bar.\n    // See: https://github.com/angular/material2/issues/10276\n    // We round the `transform` here, because transforms with sub-pixel precision cause some\n    // browsers to blur the content of the element.\n    this._slideList.nativeElement.style.transform = `translateX(${Math.round(translateX)}px)`;\n\n    // Setting the `transform` on IE will change the scroll offset of the parent, causing the\n    // position to be thrown off in some cases. We have to reset it ourselves to ensure that\n    // it doesn't get thrown off. Note that we scope it only to IE and Edge, because messing\n    // with the scroll position throws off Chrome 71+ in RTL mode (see #14689).\n    // @breaking-change 8.0.0 Remove null check for `platform`.\n    if (platform && (platform.TRIDENT || platform.EDGE)) {\n      this._slideListContainer.nativeElement.scrollLeft = 0;\n    }\n  }\n\n  /** Sets the distance in pixels that the slide header should be transformed in the X-axis. */\n  public get scrollDistance(): number { return this._scrollDistance; }\n  public set scrollDistance(value: number) {\n    this._scrollTo(value);\n  }\n\n  /**\n   * Moves the slide list in the 'before' or 'after' direction (towards the beginning of the list or\n   * the end of the list, respectively). The distance to scroll is computed to be a third of the\n   * length of the slide list view window.\n   *\n   * This is an expensive call that forces a layout reflow to compute box and scroll metrics and\n   * should be called sparingly.\n   */\n  public _scrollHeader(direction: ScrollDirection) {\n    const viewLength = this._slideListContainer.nativeElement.offsetWidth;\n\n    // Move the scroll distance one-third the length of the slide list's viewport.\n    const scrollAmount = (direction === 'before' ? -1 : 1) * viewLength / 3;\n\n    return this._scrollTo(this._scrollDistance + scrollAmount);\n  }\n\n  /** Handles click events on the pagination arrows. */\n  public _handlePaginatorClick(direction: ScrollDirection) {\n    this._stopInterval();\n    this._scrollHeader(direction);\n  }\n\n  /**\n   * Moves the slide list such that the desired slide element (marked by index) is moved into view.\n   *\n   * This is an expensive call that forces a layout reflow to compute box and scroll metrics and\n   * should be called sparingly.\n   */\n  public _scrollToLabel(labelIndex: number) {\n    console.log('inside _scrollToLabel');\n    const selectedLabel = this._elementWrappers ? this._elementWrappers.toArray()[labelIndex] : null;\n\n    if (!selectedLabel) { return; }\n\n    // The view length is the visible width of the slide labels.\n    const viewLength = this._slideListContainer.nativeElement.offsetWidth;\n\n    let labelBeforePos: number;\n    let labelAfterPos: number;\n    if (this._getLayoutDirection() === 'ltr') {\n      labelBeforePos = selectedLabel.getOffsetLeft();\n      labelAfterPos = labelBeforePos + selectedLabel.getOffsetWidth();\n    } else {\n      labelAfterPos = this._slideList.nativeElement.offsetWidth - selectedLabel.getOffsetLeft();\n      labelBeforePos = labelAfterPos - selectedLabel.getOffsetWidth();\n    }\n\n    const beforeVisiblePos = this.scrollDistance;\n    const afterVisiblePos = this.scrollDistance + viewLength;\n\n    if (labelBeforePos < beforeVisiblePos) {\n      // Scroll header to move element to the before direction\n      this.scrollDistance -= beforeVisiblePos - labelBeforePos + EXAGGERATED_OVERSCROLL;\n    } else if (labelAfterPos > afterVisiblePos) {\n      // Scroll header to move element to the after direction\n      this.scrollDistance += labelAfterPos - afterVisiblePos + EXAGGERATED_OVERSCROLL;\n    }\n  }\n\n  /**\n   * Evaluate whether the pagination controls should be displayed. If the scroll width of the\n   * slide list is wider than the size of the header container, then the pagination controls should\n   * be shown.\n   *\n   * This is an expensive call that forces a layout reflow to compute box and scroll metrics and\n   * should be called sparingly.\n   */\n  public _checkPaginationEnabled() {\n    const isEnabled =\n        this._slideList.nativeElement.scrollWidth > this._elementRef.nativeElement.offsetWidth;\n\n    if (!isEnabled) {\n      this.scrollDistance = 0;\n    }\n\n    if (isEnabled !== this._showPaginationControls) {\n      this._changeDetectorRef.markForCheck();\n    }\n\n    this._showPaginationControls = isEnabled;\n  }\n\n  /**\n   * Evaluate whether the before and after controls should be enabled or disabled.\n   * If the header is at the beginning of the list (scroll distance is equal to 0) then disable the\n   * before button. If the header is at the end of the list (scroll distance is equal to the\n   * maximum distance we can scroll), then disable the after button.\n   *\n   * This is an expensive call that forces a layout reflow to compute box and scroll metrics and\n   * should be called sparingly.\n   */\n  public _checkScrollingControls() {\n    // Check if the pagination arrows should be activated.\n    this._disableScrollBefore = this.scrollDistance === 0;\n    this._disableScrollAfter = this.scrollDistance === this._getMaxScrollDistance();\n    this._changeDetectorRef.markForCheck();\n  }\n\n  /**\n   * Determines what is the maximum length in pixels that can be set for the scroll distance. This\n   * is equal to the difference in width between the slide list container and slide header container.\n   *\n   * This is an expensive call that forces a layout reflow to compute box and scroll metrics and\n   * should be called sparingly.\n   */\n  public _getMaxScrollDistance(): number {\n    const lengthOfTabList = this._slideList.nativeElement.scrollWidth;\n    const viewLength = this._slideListContainer.nativeElement.offsetWidth;\n\n    return (lengthOfTabList - viewLength) || 0;\n  }\n\n  /** Tells the ink-bar to align itself to the current element wrapper */\n  // _alignInkBarToSelectedTab(): void {\n  //   const selectedLabelWrapper = this._elementWrappers && this._elementWrappers.length ?\n  //       this._elementWrappers.toArray()[this.selectedIndex].elementRef.nativeElement :\n  //       null;\n  //\n  //   this._inkBar.alignToElement(selectedLabelWrapper!);\n  // }\n\n  /** Stops the currently-running paginator interval.  */\n  public _stopInterval() {\n    this._stopScrolling.next();\n  }\n\n  /**\n   * Handles the user pressing down on one of the paginators.\n   * Starts scrolling the header after a certain amount of time.\n   * @param direction In which direction the paginator should be scrolled.\n   */\n  public _handlePaginatorPress(direction: ScrollDirection) {\n    // Avoid overlapping timers.\n    this._stopInterval();\n\n    // Start a timer after the delay and keep firing based on the interval.\n    timer(HEADER_SCROLL_DELAY, HEADER_SCROLL_INTERVAL)\n      // Keep the timer going until something tells it to stop or the component is destroyed.\n      .pipe(takeUntil(merge(this._stopScrolling, this._destroyed)))\n      .subscribe(() => {\n        const {maxScrollDistance, distance}: any = this._scrollHeader(direction);\n\n        // Stop the timer if we've reached the start or the end.\n        if (distance === 0 || distance >= maxScrollDistance) {\n          this._stopInterval();\n        }\n      });\n  }\n\n  /**\n   * Scrolls the header to a given position.\n   * @param position Position to which to scroll.\n   * @returns Information on the current scroll distance and the maximum.\n   */\n  private _scrollTo(position: number) {\n    const maxScrollDistance = this._getMaxScrollDistance();\n    this._scrollDistance = Math.max(0, Math.min(maxScrollDistance, position));\n\n    // Mark that the scroll distance has changed so that after the view is checked, the CSS\n    // transformation can move the header.\n    this._scrollDistanceChanged = true;\n    this._checkScrollingControls();\n\n    return {maxScrollDistance, distance: this._scrollDistance};\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport { ObserversModule } from '@angular/cdk/observers';\nimport { PortalModule } from '@angular/cdk/portal';\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { MatCommonModule, MatRippleModule } from '@angular/material/core';\nimport { JamSlide } from './slide';\nimport { JamSlideGroup } from './slide-group';\nimport { JamSlideHeader } from './slide-header';\nimport { JamSlideElement } from './slide-element';\nimport { JamSlideElementWrapper } from './slide-element-wrapper';\nimport { A11yModule } from '@angular/cdk/a11y';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    MatCommonModule,\n    PortalModule,\n    MatRippleModule,\n    ObserversModule,\n    A11yModule\n  ],\n  // Don't export all components because some are only to be used internally.\n  exports: [\n    MatCommonModule,\n    JamSlideGroup,\n    JamSlideElement,\n    JamSlide\n  ],\n  declarations: [\n    JamSlideGroup,\n    JamSlideElement,\n    JamSlide,\n    JamSlideElementWrapper,\n    JamSlideHeader\n  ]\n})\nexport class JamSlideModule {}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {\n  animate,\n  state,\n  style,\n  transition,\n  trigger,\n  AnimationTriggerMetadata\n} from '@angular/animations';\n\n/**\n * Animations used by the Material slides.\n * @docs-private\n */\nexport const jamSlidesAnimations: {\n  readonly translateTab: AnimationTriggerMetadata;\n} = {\n  /** Animation translates a slide along the X axis. */\n  translateTab: trigger('translateTab', [\n    // Note: transitions to `none` instead of 0, because some browsers might blur the content.\n    state('center, void, left-origin-center, right-origin-center', style({transform: 'none'})),\n\n    // If the slide is either on the left or right, we additionally add a `min-height` of 1px\n    // in order to ensure that the element has a height before its state changes. This is\n    // necessary because Chrome does seem to skip the transition in RTL mode if the element does\n    // not have a static height and is not rendered. See related issue: #9465\n    state('left', style({transform: 'translate3d(-100%, 0, 0)', minHeight: '1px'})),\n    state('right', style({transform: 'translate3d(100%, 0, 0)', minHeight: '1px'})),\n\n    transition('* => left, * => right, left => center, right => center',\n        animate('{{animationDuration}} cubic-bezier(0.35, 0, 0.25, 1)')),\n    transition('void => left-origin-center', [\n      style({transform: 'translate3d(-100%, 0, 0)'}),\n      animate('{{animationDuration}} cubic-bezier(0.35, 0, 0.25, 1)')\n    ]),\n    transition('void => right-origin-center', [\n      style({transform: 'translate3d(100%, 0, 0)'}),\n      animate('{{animationDuration}} cubic-bezier(0.35, 0, 0.25, 1)')\n    ])\n  ])\n};\n","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { MatIconRegistry } from '@angular/material';\nimport { DomSanitizer } from '@angular/platform-browser';\n\nexport interface IPinButton {\n    index: number;\n    label: string;\n}\n\n@Component({\n    selector: 'jam-pin-option-button',\n    template: `<button mat-flat-button class=\"pin-button-round\"\n    [ngClass]=\"jamColor === 'default' ? 'mat-hint' : null\"\n    [color]=\"jamColor\"\n    (click)=\"selected.emit(selected_option)\">\n    <div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"4px\">\n        <button mat-icon-button class=\"mat-button\">\n            <mat-icon>add_circle</mat-icon>\n        </button>\n\n        <span>{{ selected_option?.label }}</span>\n\n        <button mat-icon-button matSuffix class=\"mat-button\"\n            [matMenuTriggerFor]=\"jamPinOptionButton\"\n            (click)=\"$event.stopPropagation()\">\n            <mat-icon>arrow_drop_down</mat-icon>\n        </button>\n    </div>\n</button>\n\n<mat-menu #jamPinOptionButton=\"matMenu\">\n    <button mat-menu-item class=\"mouseover\" *ngFor=\"let button of buttons; let item = index\"\n        (click)=\"selected.emit(button)\">\n        <div fxLayout=\"row\" fxLayoutAlign=\"space-between center\" fxLayoutGap=\"16px\">\n            <span>{{ button.label }}</span>\n            <div class=\"pin-container\">\n                <button mat-icon-button\n                    [ngClass]=\"selected_option?.index !== item ? 'mouseover-child mat-button' : 'mat-button'\"\n                    (click)=\"pinnedOption($event, button)\">\n                    <mat-icon svgIcon=\"pin_rs\" color=\"accent\"\n                        [ngStyle]=\"{ color: selected_option.index !== item ? '#000000B3' : null }\"\n                    ></mat-icon>\n                </button>\n            </div>\n        </div>\n    </button>\n</mat-menu>\n`,\n    styles: [`button.pin-button-round{background-color:rgba(0,0,0,.102)!important;padding:0;border-radius:50px}.pin-container{width:40px}.pin-container button mat-icon{margin:0}.mouseover * .mouseover-child{display:none}.mouseover:hover * .mouseover-child{display:inherit}`]\n})\nexport class PinOptionButtonComponent implements OnInit {\n    @Input() public options: Array<string>;\n    @Input() public specialKey: string;\n    @Input() public jamColor: 'primary' | 'accent' | 'warn' | 'default' = 'default';\n\n    @Output() public selected = new EventEmitter<IPinButton>();\n\n    public index: number;\n    public buttons: Array<IPinButton> = [];\n    public selected_option: IPinButton;\n\n    public constructor(\n        private matIconRegistry: MatIconRegistry,\n        private domSanitizer: DomSanitizer\n    ) {}\n\n    public ngOnInit(): void {\n        this.populateMenu();\n        this.selected_option = this.defaultSelectedOption();\n\n        this.matIconRegistry.addSvgIconSet(\n            this.domSanitizer.bypassSecurityTrustResourceUrl('assets/all_custom_icons.svg')\n        );\n    }\n\n    public pinnedOption(event, button: IPinButton): void {\n        event.stopPropagation();\n\n        this.selected_option = {\n            index: button.index,\n            label: button.label\n        };\n\n        localStorage.setItem(this.specialKey + '_pinned_creation_option', JSON.stringify(button));\n    }\n\n    public pinButton(): void {\n        this.selected.emit(this.selected_option);\n    }\n\n    private populateMenu(): void {\n        let count = 0;\n\n        for (let option of this.options) {\n            this.buttons.push({ index: count, label: option });\n            count += 1;\n        }\n    }\n\n    private defaultSelectedOption(): IPinButton {\n        let local_storage_item = localStorage.getItem(this.specialKey + '_pinned_creation_option');\n\n        return local_storage_item ? JSON.parse(local_storage_item) : this.buttons[0];\n    }\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'jam-ngx-jsonapi-material',\n  template: `\n    <p>\n      ngx-jsonapi-material works!\n    </p>\n  `,\n  styles: []\n})\nexport class NgxJsonapiMaterialComponent {}\n","import { NgModule } from '@angular/core';\nimport { MatTableModule, MatButtonModule, MatPaginatorModule, MatCardModule, MatIconModule,\n    MatMenuModule, MatTooltipModule, MatToolbarModule, MatDialogModule, MatFormFieldModule, MatTabsModule,\n    MatInputModule, MatDatepickerModule, MatNativeDateModule, MatOptionModule, MatSelectModule, MatExpansionModule } from '@angular/material';\nimport { FlexLayoutModule } from '@angular/flex-layout';\n\n@NgModule({\n    declarations: [],\n    imports: [\n        MatExpansionModule,\n        MatSelectModule,\n        MatOptionModule,\n        MatNativeDateModule,\n        MatDatepickerModule,\n        MatInputModule,\n        MatFormFieldModule,\n        MatDialogModule,\n        MatToolbarModule,\n        MatTooltipModule,\n        MatMenuModule,\n        MatIconModule,\n        FlexLayoutModule,\n        MatCardModule,\n        MatPaginatorModule,\n        MatTableModule,\n        MatTabsModule,\n        MatButtonModule\n    ],\n    exports: [\n        MatExpansionModule,\n        MatSelectModule,\n        MatOptionModule,\n        MatNativeDateModule,\n        MatDatepickerModule,\n        MatInputModule,\n        MatFormFieldModule,\n        MatDialogModule,\n        MatToolbarModule,\n        MatTooltipModule,\n        MatMenuModule,\n        MatIconModule,\n        FlexLayoutModule,\n        MatCardModule,\n        MatPaginatorModule,\n        MatTableModule,\n        MatTabsModule,\n        MatButtonModule\n    ],\n    providers: []\n})\nexport class MaterialModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { NgxJsonapiMaterialComponent } from './ngx-jsonapi-material.component';\nimport { MaterialModule } from './material.module';\n\n@NgModule({\n    imports: [CommonModule, MaterialModule, FormsModule, ReactiveFormsModule],\n    declarations: [NgxJsonapiMaterialComponent],\n    exports: [NgxJsonapiMaterialComponent]\n})\nexport class NgxJsonapiMaterialModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { MatButtonModule, MatIconModule, MatMenuModule } from '@angular/material';\nimport { PinOptionButtonComponent } from './pin-option-button.component';\nimport { NgxJsonapiMaterialModule } from '../ngx-jsonapi-material.module';\nimport { TranslateModule } from '@ngx-translate/core';\n\n@NgModule({\n    imports: [\n        CommonModule,\n        NgxJsonapiMaterialModule,\n        FlexLayoutModule,\n        MatButtonModule,\n        MatIconModule,\n        MatMenuModule\n    ],\n    declarations: [PinOptionButtonComponent],\n    providers: [],\n    exports: [PinOptionButtonComponent]\n})\nexport class JamPinOptionButtonModule {}\n","import { Component, OnInit, OnDestroy, Input, ElementRef, ViewChild, EventEmitter, Output, ChangeDetectorRef, TrackByFunction } from '@angular/core';\nimport { Observable, Subject } from 'rxjs';\nimport { Resource, DocumentCollection, Service, IParamsCollection } from 'ngx-jsonapi';\nimport { FormControl, FormGroup } from '@angular/forms';\nimport { timeout, filter, tap } from 'rxjs/operators';\nimport { MatAutocompleteTrigger } from '@angular/material';\nimport { filterOrRequest } from '../../lib/batch';\nimport { Destroyer } from '../../lib/destroyer';\n\n@Component({\n  selector: 'jam-autocomplete',\n  styles: [`.custom-placeholder::-webkit-input-placeholder{color:inherit;opacity:1}.custom-placeholder::-moz-placeholder{color:inherit;opacity:1}.custom-placeholder::-ms-input-placeholder{color:inherit;opacity:1;color:inherit}.custom-placeholder::placeholder{color:inherit;opacity:1}.custom-placeholder:-ms-input-placeholder{color:inherit}`],\n  template: `<mat-form-field style=\"width: 100%\" *ngIf=\"collection\"\n    appearance=\"outline\" floatLabel=\"never\" color=\"accent\"\n>\n    <input matInput aria-label=\"Escribe algo que buscar\" name=\"autocomplete-resource\"\n        [placeholder]=\"toggleResource?.attributes[displayAttributes[0]] || placeholder\"\n        type=\"text\"\n        [ngClass]=\"toggleResource?.attributes[displayAttributes[0]] ? 'custom-placeholder' : null\"\n        [matAutocomplete]=\"auto\"\n        [formControl]=\"autocompleteCtrl\"\n        (blur)=\"closeAutocomplete()\"\n        id=\"autocompleteResource\"\n        #autocompleteResource\n    >\n\n    <mat-autocomplete #auto=\"matAutocomplete\"\n        [displayWith]=\"displayFn\"\n        (optionSelected)=\"selectedResource($event.option.value)\">\n        <div *ngIf=\"showList\">\n            <mat-option [value]=\"null\" (click)=\"clearDisplay()\">-- Ninguna --</mat-option>\n            <mat-option [ngClass]=\"toggleResource?.id === resource.id ? 'mat-selected mat-active' : null\"\n                [value]=\"resource\"\n                *ngFor=\"let resource of filtered_resource | async; trackBy: trackByFn\"\n            >\n                <div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"4px\">\n                    <mat-icon *ngIf=\"icon\">{{ icon }}</mat-icon>\n                    <strong\n                        [innerHTML]=\"resource.attributes[displayAttributes[0]]\"\n                    ></strong>\n                    <ng-container *ngFor=\"let attribute of displayAttributes; let item = index\">\n                        <small *ngIf=\"item >= 1\"> | {{ resource.attributes[attribute] }}</small>\n                    </ng-container>\n                </div>\n            </mat-option>\n        </div>\n    </mat-autocomplete>\n\n    <div fxLayout=\"row\" matSuffix fxLayoutAlign=\"end center\">\n        <button mat-icon-button type=\"button\" class=\"mat-button\" matSuffix matTooltip=\"Limpiar selecciÃ³n\"\n            *ngIf=\"toggleResource?.attributes[displayAttributes[0]] || autocompleteCtrl.value\"\n            [disabled]=\"!collection?.loaded\"\n            (click)=\"clearDisplay()\"\n        >\n            <mat-icon class=\"mat-hint\">close</mat-icon>\n        </button>\n\n        <button mat-icon-button type=\"button\" class=\"mat-button\" matSuffix matTooltip=\"Actualizar lista\"\n            [disabled]=\"!collection?.loaded\" (click)=\"$event.stopPropagation(); refresh()\">\n            <mat-icon class=\"mat-hint\">refresh</mat-icon>\n        </button>\n\n        <div class=\"mat-select-arrow-wrapper\">\n            <div class=\"mat-select-arrow\"></div>\n        </div>\n    </div>\n</mat-form-field>\n\n<mat-progress-bar class=\"progress-bar-autocomplete\"\n    *ngIf=\"!collection?.loaded\"\n    color=\"accent\"\n    mode=\"indeterminate\"\n></mat-progress-bar>\n`\n})\nexport class JamAutocompleteComponent implements OnInit, OnDestroy {\n    /**\n     * @param  {boolean} previewSelected\n     * @usageNotes By default it is `false`.\n     * In case it is `true`, the autocomplete,\n     * shows in the placeholder or matLabel a preview of the selected item.\n     */\n    @Input() public previewSelected: boolean = false;\n    /**\n     * @param {string} displayText\n     * @usageNotes Text of the selected item.\n     */\n    @Input() public toggleResource: Resource;\n    @Input() public placeholder: string = 'Escribe algo que buscar';\n    @Input() public services: Service;\n    @Input() public displayAttributes: Array<string> = [];\n    @Input() public remoteFilter = {};\n    @Input() public include: Array<string> = [];\n    @Input() public sort: Array<string> = [];\n    @Input() public icon: string;\n    @Input() public showList: boolean = true;\n    @Output() public toggleResourceChange = new EventEmitter<Resource>();\n    @ViewChild(MatAutocompleteTrigger) public autocompleteResource: MatAutocompleteTrigger;\n    @ViewChild('autocompleteResource') public autocompleteResourceInput: ElementRef;\n\n    public collection: DocumentCollection;\n    public filtered_resource: Observable<Array<Resource>>;\n    public dataArrived: Subject<string> = new Subject();\n    public myForm: FormGroup;\n    public autocompleteCtrl: FormControl = new FormControl();\n    public resourceArray: Array<Resource> = [];\n    public use_is_loading = true;\n    public trackByFn: TrackByFunction<Resource>;\n    public resourceArrayLastFilterValue: string;\n\n    private destroyer = new Destroyer();\n    private readonly collectionPerPage = 100; // 500\n    private readonly resource_max_on_list = 50;\n\n    public constructor(\n        private changeDetectorRef: ChangeDetectorRef\n    ) {}\n\n    public ngOnDestroy() {\n        this.destroyer.destroy();\n    }\n\n    public ngOnInit(): void {\n        this.collection = this.services.newCollection();\n        this.filtered_resource = this.autocompleteCtrl.valueChanges.pipe(\n            this.destroyer.pipe(),\n            filterOrRequest({\n                attribute_to_search: this.displayAttributes[0],\n                resourcesArray: this.resourceArray,\n                getAllFc: this.getAll.bind(this),\n                last_filter_value: this.resourceArrayLastFilterValue,\n                collection: this.collection,\n                page_size: this.collectionPerPage\n            })\n        );\n    }\n\n    public closeAutocomplete() {\n        this.autocompleteResource.optionSelections.pipe(timeout(150)).subscribe(\n            selection => {\n                this.autocompleteResource.closePanel();\n            },\n            err => {\n                this.autocompleteResource.closePanel();\n            }\n        );\n    }\n\n    public selectedResource(resource: Resource) {\n        if (!resource) {\n            return;\n        }\n\n        if (this.previewSelected) {\n            this.toggleResource = resource;\n        }\n\n        this.toggleResourceChange.emit(resource);\n    }\n\n    public displayFn(resource?: Resource): string {\n        return ''; // clear input after item selection\n    }\n\n    public refresh() {\n        this.services.clearCacheMemory();\n        this.use_is_loading = false;\n    }\n\n    public getAll(search_text: string): Observable<DocumentCollection> {\n        let params: IParamsCollection = {\n            page: {\n                number: 1,\n                size: this.collectionPerPage\n            },\n            remotefilter: this.remoteFilter,\n            include: this.include\n        };\n        if (search_text) {\n            params.remotefilter = { [this.displayAttributes[0]]: search_text };\n        }\n\n        return this.services.all(params).pipe(\n            filter(collection => collection.builded),\n            tap(collection => {\n                this.collection = collection;\n            })\n        );\n    }\n\n    public clearDisplay(): void {\n        this.toggleResource = null;\n        this.autocompleteCtrl.setValue('');\n    }\n\n    private filterResourceByName(value: string | Resource): Array<Resource> {\n        const filterValue = typeof value === 'string' ? value.toLowerCase() : '';\n        let count = 0;\n\n        this.showList = !value && filterValue.length > 0;\n\n        return this.resourceArray.filter((resource: Resource) => {\n            if (\n                count < this.resource_max_on_list &&\n                (resource.attributes[this.displayAttributes[0]].toLowerCase().indexOf(filterValue) === 0 ||\n                    resource.attributes[this.displayAttributes[0]].toLowerCase().indexOf(' ' + filterValue) > 0)\n            ) {\n                return count += 1;\n            }\n        });\n    }\n}\n","/**\n * @license\n * Copyright Reyesoft All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport {\n    MatProgressBarModule,\n    MatFormFieldModule,\n    MatTooltipModule,\n    MatInputModule,\n    MatIconModule,\n    MatOptionModule,\n    MatAutocompleteModule,\n    MatButtonModule\n} from '@angular/material';\nimport { JamAutocompleteComponent } from './autocomplete.component';\nimport { FlexLayoutModule } from '@angular/flex-layout';\n\n@NgModule({\n    imports: [\n        FormsModule,\n        FlexLayoutModule,\n        MatTooltipModule,\n        ReactiveFormsModule,\n        MatAutocompleteModule,\n        MatFormFieldModule,\n        MatInputModule,\n        MatProgressBarModule,\n        MatButtonModule,\n        MatOptionModule,\n        MatIconModule,\n        CommonModule\n    ],\n    declarations: [JamAutocompleteComponent],\n    exports: [JamAutocompleteComponent]\n})\nexport class JamAutocompleteModule {}\n","import { Component, Input, OnInit } from '@angular/core';\n\n@Component({\n    selector: 'jam-info-button',\n    template: `<a class=\"mat-button\" type=\"button\" target=\"_blank\"\n    mat-icon-button\n    [matTooltip]=\"jamTooltip\"\n    [href]=\"externalUrl\"\n    (click)=\"$event.stopPropagation()\"\n>\n    <mat-icon\n        [innerHtml]=\"icon\"\n    ></mat-icon>\n</a>\n`\n})\nexport class InfoButtonComponent implements OnInit {\n    /** @param externalUrl required property */\n    @Input() public externalUrl: string;\n\n    /**\n     * @param icon optional property -\n     * @description By default acquires as icon \"info\"\n     */\n    @Input() public icon: 'info' | 'help' = 'info';\n\n    /** @param jamTooltip optional property */\n    @Input() public jamTooltip: string = 'MÃ¡s informaciÃ³n';\n\n    public ngOnInit(): void {\n        this.icon = this.checkIcon();\n    }\n\n    /** @method checkIcon Checks arriving icon, if not supported, then returns info. */\n    private checkIcon(): 'info' | 'help' {\n        console.warn(`\"${this.icon}\" icon is not supported ð¤·ââï¸, Try \"info\" or \"help.\"`);\n\n        return !['info', 'help'].includes(this.icon) ? 'info' : this.icon;\n    }\n}\n","/**\n * @license\n * Copyright Reyesoft All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { MatIconModule, MatButtonModule, MatTooltipModule } from '@angular/material';\nimport { InfoButtonComponent } from './info-button.component';\n\n@NgModule({\n    imports: [\n        CommonModule,\n        MatButtonModule,\n        MatTooltipModule,\n        MatIconModule\n    ],\n    declarations: [InfoButtonComponent],\n    exports: [InfoButtonComponent]\n})\nexport class JamInfoButtonModule {}\n","import { Injectable, ComponentFactoryResolver, ApplicationRef, Injector, EmbeddedViewRef, ComponentRef } from '@angular/core';\n\ninterface IChildConfig {\n    inputs: object;\n    outputs: object;\n}\n\n@Injectable()\nexport class DomService {\n    private childComponentRef: ComponentRef<{}>;\n    private child_dom_element_id = 'current-selection-bar';\n\n    public constructor(\n        private componentFactoryResolver: ComponentFactoryResolver,\n        private appRef: ApplicationRef,\n        private injector: Injector\n    ) {}\n\n    public appendComponentTo(parentId: string, child: any, childConfig?: IChildConfig): ComponentRef<any> {\n        let child_node = document.getElementById(this.child_dom_element_id);\n        if (child_node) child_node.parentNode.removeChild(child_node);\n\n        /** Crea una referencia de componente desde el componente hijo */\n        const childComponentRef = this.componentFactoryResolver.resolveComponentFactory(child).create(this.injector);\n\n        /** Conecta la configuraciÃ³n al hijo (entradas y salidas) */\n        this.attachConfig(childConfig, childComponentRef);\n\n        this.childComponentRef = childComponentRef;\n        // Agrega el componente al appRef de modo que estÃ© dentro del Ã¡rbol de componentes \"ng\"\n        this.appRef.attachView(childComponentRef.hostView);\n\n        // Obtiene el elemento DOM del componente\n        const childDomElem = (childComponentRef.hostView as EmbeddedViewRef<any>).rootNodes[0] as HTMLElement;\n        childDomElem.setAttribute('id', this.child_dom_element_id);\n\n        document.getElementById(parentId).appendChild(childDomElem);\n        childDomElem.className = 'width-100';\n\n        return childComponentRef;\n    }\n\n    public removeComponent() {\n        if (!this.childComponentRef) return;\n        this.appRef.detachView(this.childComponentRef.hostView);\n        this.childComponentRef.destroy();\n    }\n\n    private attachConfig(config, componentRef) {\n        let inputs = config.inputs;\n        let outputs = config.outputs;\n        for (let key in inputs) {\n            componentRef.instance[key] = inputs[key];\n        }\n        for (let key in outputs) {\n            componentRef.instance[key] = outputs[key];\n        }\n    }\n}\n","import { Injectable, ComponentRef } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\nimport { SelectionModel } from '@angular/cdk/collections';\nimport { DomService } from './dom.service';\n\nexport interface IMethodRef {\n    method: string;\n    params?: any;\n}\n\n@Injectable()\nexport class SelectionBarService {\n    public selected$: BehaviorSubject<SelectionModel<any>> = new BehaviorSubject(new SelectionModel());\n    public callMethod$: BehaviorSubject<IMethodRef> = new BehaviorSubject({ method: '' });\n    private selectionBarElementId = 'selection-bar-container';\n\n    public constructor(private domService: DomService) {}\n\n    public selected<T>(selected: SelectionModel<T>): void {\n        this.selected$.next(selected);\n    }\n\n    public callMethod(methodRef: IMethodRef): void {\n        this.callMethod$.next(methodRef);\n    }\n\n    public clearMethod() {\n        this.callMethod({ method: '' });\n    }\n\n    public init(component: any, inputs: object, outputs: object): ComponentRef<any> {\n        let componentConfig = {\n            inputs: inputs,\n            outputs: outputs\n        };\n\n        if (document.getElementById(this.selectionBarElementId).className === 'show') {\n            return undefined; // ts-lint => Value-returning function should use `return undefined;`, not just `return;`\n        }\n\n        let created_component_instance = this.domService.appendComponentTo(this.selectionBarElementId, component, componentConfig);\n        document.getElementById(this.selectionBarElementId).className = 'show';\n\n        return created_component_instance;\n    }\n\n    public destroy(): void {\n        this.domService.removeComponent();\n        document.getElementById(this.selectionBarElementId).className = 'hidden';\n    }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { Router, NavigationStart } from '@angular/router';\nimport { SelectionBarService } from '../selection-bar.service';\n\n@Component({\n    selector: 'jam-selection-bar-container',\n    template: `<div id=\"selection-bar-container\" class=\"hidden\"></div>\n`,\n    styles: [`:host /deep/ .hidden{display:none!important}:host /deep/ .show{display:-webkit-box!important;display:flex!important}#selection-bar-container{-webkit-box-align:center;align-items:center;position:fixed;z-index:1003;top:0;left:0;right:0;width:100%;height:64px;opacity:1;background:#fff}:host /deep/ #selection-bar-container #current-selection-bar:first-child{padding:0 20px;width:100%}`]\n})\nexport class SelectionBarContainerComponent {\n    public constructor(\n        protected selectionBarService: SelectionBarService,\n        protected router: Router\n    ) {\n        this.router.events.subscribe(event => {\n            if (event instanceof NavigationStart) {\n                this.selectionBarService.destroy();\n            }\n        });\n    }\n}\n","import { Component, Output, EventEmitter, Input, OnDestroy } from '@angular/core';\nimport { SelectionModel } from '@angular/cdk/collections';\nimport { Destroyer } from '../../destroyer';\nimport { SelectionBarService } from '../selection-bar.service';\n\n@Component({\n    selector: 'jam-selection-bar-info',\n    template: `<div fxLayout=\"row\" fxLayoutAlign=\"end center\">\n    <button mat-icon-button matTooltip=\"Borrar selecciÃ³n\" (click)=\"close()\">\n        <mat-icon class=\"material-icons\">arrow_back</mat-icon>\n    </button>\n    <span>{{ label }}</span>\n</div>\n`\n})\nexport class SelectionBarInfoComponent implements OnDestroy {\n    public selection: SelectionModel<any>;\n    public label: string;\n    private destroyer = new Destroyer();\n\n    public constructor(\n        protected selectionBarService: SelectionBarService\n    ) {\n        this.selectionBarService.selected$\n            .pipe(this.destroyer.pipe())\n            .subscribe(selection => {\n                this.selection = selection;\n                this.label = selection.selected.length + (selection.selected.length >= 1 ? ' seleccionados' : ' seleccionado');\n                if (selection.selected.length <= 0) this.selectionBarService.destroy();\n            });\n    }\n\n    public ngOnDestroy() {\n        this.destroyer.destroy();\n    }\n\n    public close(): void {\n        this.selection.clear();\n        this.selectionBarService.destroy();\n    }\n}\n","/**\n * @license\n * Copyright Reyesoft All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { MatIconModule, MatButtonModule } from '@angular/material';\nimport { FilterPipe } from '../search-input/search-text.pipe';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { RouterModule } from '@angular/router';\nimport { SelectionBarService } from './selection-bar.service';\nimport { DomService } from './dom.service';\nimport { SelectionBarContainerComponent } from './selection-bar-container/selection-bar-container.component';\nimport { SelectionBarInfoComponent } from './selection-bar-info/selection-bar-info.component';\n\n@NgModule({\n    imports: [\n        RouterModule,\n        FlexLayoutModule,\n        MatButtonModule,\n        MatIconModule,\n        CommonModule\n    ],\n    providers: [FilterPipe, SelectionBarService, DomService],\n    declarations: [SelectionBarContainerComponent, SelectionBarInfoComponent],\n    exports: [ SelectionBarContainerComponent, SelectionBarInfoComponent]\n})\nexport class JamSelectionBarModule {}\n"]}